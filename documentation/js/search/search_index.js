var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.29,1,3.959]],["body/classes/AllExceptionsFilter.html",[0,0.29,1,5.437,2,0.539,3,0.061,4,0.061,5,0.053,6,4.482,7,3.102,8,7.01,9,0.309,10,1.249,11,3.223,12,2.424,13,5.675,14,1.332,15,5.051,16,1.316,17,4.482,18,8.162,19,0.434,20,6.144,21,1.097,22,0.008,23,0.795,24,0.338,25,0.564,26,2.061,27,2.061,28,2.424,29,6.144,30,6.144,31,5.672,32,7.542,33,4.482,34,7.542,35,0.951,36,3.17,37,0.109,38,5.437,39,2.618,40,1.059,41,3.966,42,1.892,43,3.001,44,3.626,45,0.061,46,2.001,47,2.618,48,2.344,49,4.482,50,4.482,51,4.482,52,4.482,53,3.626,54,4.482,55,4.345,56,4.482,57,7.542,58,4.482,59,8.358,60,4.482,61,4.482,62,4.406,63,6.204,64,4.482,65,7.01,66,4.482,67,4.482,68,4.482,69,4.482,70,4.482,71,4.482,72,3.966,73,4.623,74,4.482,75,4.482,76,1.892,77,4.345,78,6.144,79,6.144,80,6.144,81,6.144,82,6.144,83,4.482,84,3.966,85,3.372,86,4.482,87,3.966,88,0.972,89,6.144,90,3.966,91,4.482,92,0.005,93,0.005]],["title/controllers/AppController.html",[94,1.942,95,3.62]],["body/controllers/AppController.html",[0,0.452,3,0.096,4,0.096,5,0.083,16,2.047,22,0.008,37,0.109,40,1.648,45,0.096,92,0.007,93,0.007,94,3.531,95,6.583,96,3.409,97,6.973]],["title/modules/AppModule.html",[98,1.889,99,3.367]],["body/modules/AppModule.html",[0,0.307,3,0.065,4,0.065,5,0.056,22,0.008,28,2.052,37,0.139,40,1.121,45,0.065,77,5.105,92,0.006,93,0.006,95,5.84,96,3.122,98,3.047,99,6.832,100,2.396,101,2.478,102,2.664,103,2.664,104,2.664,105,3.906,106,2.664,107,4.198,108,4.198,109,4.198,110,5.871,111,4.662,112,5.871,113,5.871,114,6.246,115,3.586,116,2.664,117,2.664,118,4.744,119,3.89,120,4.744,121,5.105,122,3.355,123,6.386,124,4.744,125,4.744,126,5.651,127,4.744,128,4.744,129,4.744,130,3.645,131,2.396,132,4.744,133,4.744,134,4.744,135,4.744,136,4.744,137,4.198,138,3.223,139,4.744,140,4.744,141,4.744,142,4.198,143,5.167,144,4.744,145,4.198,146,4.744,147,4.744,148,4.744,149,4.744,150,6.386,151,5.651,152,4.744,153,4.744,154,6.386,155,4.198]],["title/injectables/AppService.html",[114,3.367,156,1.013]],["body/injectables/AppService.html",[0,0.432,3,0.091,4,0.091,5,0.079,9,0.46,14,1.719,19,0.413,22,0.008,35,1.415,37,0.104,40,1.575,45,0.091,88,1.446,92,0.007,93,0.007,114,5.963,156,1.794,157,2.472,158,6.668,159,8.749,160,6.668,161,0.928,162,6.668,163,6.668]],["title/controllers/AssistantController.html",[94,1.942,164,3.62]],["body/controllers/AssistantController.html",[0,0.22,3,0.047,4,0.047,5,0.04,9,0.234,12,1.091,14,1.092,19,0.439,21,1.267,22,0.008,23,1.046,24,0.444,25,0.652,28,2.136,35,1.507,37,0.12,39,1.983,40,0.802,45,0.047,46,1.515,47,1.983,88,1.54,92,0.004,93,0.004,94,1.473,96,1.659,161,0.989,164,4.076,165,3.394,166,1.714,167,3.003,168,2.854,169,3.79,170,3.79,171,3.79,172,3.79,173,4.52,174,3.003,175,5.296,176,1.677,177,3.394,178,1.437,179,4.411,180,5.377,181,3.394,182,2.327,183,3.394,184,3.003,185,5.261,186,3.003,187,2.554,188,4.525,189,3.394,190,2.375,191,2.554,192,3.003,193,3.394,194,4.457,195,3.394,196,2.554,197,2.746,198,3.394,199,3.003,200,3.394,201,2.554,202,5.952,203,3.003,204,3.394,205,3.394,206,3.659,207,1.906,208,2.068,209,1.258,210,4.754,211,2.554,212,3.069,213,1.983,214,3.373,215,4.52,216,3.373,217,4.741,218,4.754,219,3.069,220,0.647,221,4.248,222,3.003,223,2.4,224,3.003,225,3.003,226,2.163,227,4.076,228,2.163,229,3.394,230,4.325,231,2.163,232,4.525,233,3.394,234,3.394,235,2.746,236,3.373,237,3.394,238,3.394,239,3.003,240,3.79,241,3.003,242,3.394,243,3.003,244,3.394,245,3.394,246,3.394,247,3.394,248,3.394,249,3.394]],["title/classes/AssistantMapper.html",[0,0.29,250,3.62]],["body/classes/AssistantMapper.html",[0,0.325,2,0.603,3,0.069,4,0.069,5,0.059,9,0.346,14,1.438,19,0.41,21,1.183,22,0.009,23,0.858,24,0.364,25,0.608,28,1.613,35,1.676,37,0.103,45,0.069,48,1.904,88,1.438,92,0.006,93,0.006,178,1.059,188,5.632,209,2.458,223,3.549,250,5.364,251,5.018,252,5.139,253,4.225,254,4.225,255,4.225,256,5.632,257,5.018,258,4.225,259,4.225,260,5.018,261,5.034,262,1.86,263,3.198,264,3.198,265,4.988,266,3.776,267,5.364,268,4.06,269,4.988,270,4.06,271,6.629,272,5.018,273,3.198,274,3.198,275,3.776,276,3.776,277,4.225,278,3.776,279,4.06,280,3.776,281,5.018]],["title/injectables/AssistantRelationalRepository.html",[156,1.013,282,3.62]],["body/injectables/AssistantRelationalRepository.html",[0,0.243,3,0.051,4,0.051,5,0.044,7,1.893,9,0.259,12,1.205,14,1.175,16,1.101,19,0.477,21,1.32,22,0.009,23,0.957,24,0.406,25,0.679,35,1.786,37,0.115,40,0.886,45,0.051,46,1.674,48,1.827,76,2.686,88,1.38,92,0.005,93,0.005,156,1.227,157,1.39,161,1.009,167,3.318,168,2.901,170,4.077,171,4.077,172,4.077,173,4.077,178,1.113,182,2.348,188,5.064,190,2.649,191,4.077,196,4.077,201,4.077,209,2.741,223,2.652,250,3.034,256,4.056,282,4.384,283,3.75,284,6.168,285,2.284,286,4.024,287,3.75,288,4.795,289,3.75,290,2.864,291,3.75,292,3.75,293,3.75,294,3.914,295,3.75,296,1.958,297,3.629,298,3.318,299,3.75,300,2.81,301,3.75,302,3.75,303,3.75,304,3.75,305,3.75,306,3.454,307,3.75,308,3.75,309,3.75,310,3.75,311,3.75]],["title/classes/AssistantRepository.html",[0,0.29,297,2.996]],["body/classes/AssistantRepository.html",[0,0.249,2,0.461,3,0.053,4,0.053,5,0.045,9,0.265,14,1.195,19,0.436,21,1.258,22,0.009,23,0.912,24,0.387,25,0.647,35,1.649,37,0.06,45,0.053,76,2.326,92,0.005,93,0.005,161,0.977,170,4.147,171,4.147,172,4.147,173,4.147,178,1.192,182,2.385,188,2.447,190,2.457,191,4.147,196,4.147,201,4.147,207,3.621,209,2.879,223,2.715,256,3.512,288,4.876,290,2.264,294,3.957,297,3.69,312,3.838,313,5.099,314,4.109,315,3.838,316,3.055,317,6.51,318,2.878,319,3.838,320,5.582,321,3.838,322,4.109,323,4.56,324,3.838,325,3.927,326,2.326]],["title/injectables/AssistantService.html",[156,1.013,221,3.165]],["body/injectables/AssistantService.html",[0,0.187,3,0.04,4,0.04,5,0.034,9,0.199,11,2.812,12,1.965,14,0.965,16,1.307,19,0.432,21,1.247,22,0.009,23,0.904,24,0.384,25,0.641,28,1.431,35,1.673,37,0.129,40,0.681,45,0.04,47,1.684,48,2.264,76,2.296,85,4.092,88,1.326,92,0.004,93,0.004,130,3.088,131,1.456,138,1.287,156,1.008,157,1.069,161,0.954,168,2.816,169,3.35,170,3.35,171,3.35,172,3.35,173,3.35,174,3.94,175,5.036,178,0.869,182,2.171,184,3.94,185,5.15,188,1.838,190,2.505,191,3.35,196,3.35,201,3.35,202,5.932,209,2.45,221,3.149,223,2.039,225,2.551,226,1.838,227,3.602,228,1.838,256,1.838,284,2.551,290,1.185,297,4.876,300,2.768,327,2.883,328,2.039,329,4.436,330,4.642,331,2.883,332,2.5,333,2.883,334,2.883,335,4.602,336,2.883,337,2.883,338,2.883,339,2.883,340,2.883,341,4.452,342,2.551,343,2.039,344,1.931,345,2.883,346,2.551,347,2.883,348,2.883,349,1.56,350,2.883,351,2.883,352,2.883,353,5.438,354,4.452,355,2.883,356,2.883,357,2.333,358,1.838,359,2.883,360,3.466,361,2.551,362,1.931,363,2.883,364,2.981,365,2.333,366,2.883,367,2.551,368,2.883,369,2.883,370,2.551,371,2.883,372,2.883,373,3.94,374,2.333,375,2.883,376,2.039,377,2.039,378,2.333,379,2.883,380,2.883,381,2.551,382,2.883,383,2.883,384,2.333,385,2.883,386,2.883,387,2.551,388,2.551,389,2.551,390,2.551,391,2.333,392,2.883,393,2.551,394,2.883,395,2.551,396,2.551,397,2.551,398,2.551,399,2.883,400,2.551,401,2.551,402,2.17]],["title/modules/AssistantsModule.html",[98,1.889,110,3.165]],["body/modules/AssistantsModule.html",[0,0.356,3,0.075,4,0.075,5,0.065,22,0.008,37,0.137,40,1.298,45,0.075,92,0.006,93,0.006,96,3.438,98,3.274,100,2.774,101,2.869,102,3.085,103,3.085,104,3.085,105,4.196,106,3.085,110,6.543,111,4.855,115,3.949,116,3.085,117,3.085,119,4.284,131,2.774,164,6.275,221,6.114,222,4.861,330,5.51,346,4.861,403,4.861,404,4.861,405,4.861,406,6.114,407,5.789,408,5.493,409,5.493,410,5.689,411,5.493,412,4.445]],["title/classes/COSLoader.html",[0,0.29,413,3.165]],["body/classes/COSLoader.html",[0,0.218,2,0.403,3,0.046,4,0.046,5,0.078,9,0.232,10,1.016,11,4.193,12,2.837,14,1.083,15,3.345,16,1.467,19,0.515,21,1.065,22,0.008,23,0.772,24,0.433,25,0.548,28,1.918,35,1.403,36,3.533,37,0.12,45,0.069,47,1.961,48,2.029,62,2.918,77,2.374,88,1.294,92,0.004,93,0.004,161,1.056,168,2.436,190,1.5,300,1.899,349,1.816,413,3.533,414,2.97,415,1.807,416,4.828,417,5.281,418,5.576,419,4.674,420,5.427,421,5.427,422,5.427,423,4.996,424,5.849,425,4.996,426,4.49,427,5.348,428,3.356,429,5.348,430,4.996,431,3.356,432,3.356,433,3.356,434,3.356,435,3.356,436,4.421,437,3.356,438,5.318,439,3.356,440,4.421,441,3.356,442,3.356,443,5.849,444,2.716,445,2.716,446,2.716,447,2.716,448,3.861,449,2.526,450,2.526,451,2.526,452,2.97,453,2.526,454,2.97,455,2.97,456,1.753,457,4.828,458,3.759,459,2.526,460,4.421,461,4.421,462,5.281,463,4.421,464,5.281,465,2.97,466,2.97,467,3.345,468,2.97,469,2.526,470,2.97,471,2.526,472,2.248,473,4.421,474,1.457,475,4.421,476,2.526,477,2.97,478,2.716,479,2.97,480,2.716,481,2.526,482,2.97,483,2.716,484,2.97,485,2.97,486,2.97,487,2.97,488,2.97,489,2.716,490,2.97,491,4.421,492,2.97,493,2.97,494,2.97,495,2.97,496,2.97,497,2.97,498,2.97,499,2.97,500,2.97,501,2.97]],["title/interfaces/COSLoaderParams.html",[429,3.62,456,2.337]],["body/interfaces/COSLoaderParams.html",[0,0.252,3,0.053,4,0.053,5,0.084,9,0.268,10,1.13,11,3.843,12,2.505,15,3.72,16,1.14,22,0.008,24,0.412,25,0.51,28,2.085,36,2.745,37,0.125,45,0.076,48,2.152,62,3.245,77,2.745,88,1.407,92,0.005,93,0.005,161,1.073,168,1.827,190,1.165,300,2.111,349,2.1,413,2.745,414,3.434,415,1.404,416,4.494,417,3.434,418,5.911,419,5.001,420,5.806,421,5.806,422,5.806,424,3.434,426,2.921,427,3.14,429,5.249,436,3.434,438,4.881,440,3.434,443,6.266,444,3.14,445,3.14,446,3.14,447,3.14,448,4.137,449,2.921,450,2.921,451,2.921,452,3.434,453,2.921,454,3.434,455,3.434,456,2.027,457,6.307,458,4.18,459,2.921,460,4.915,461,4.915,462,5.74,463,4.915,464,5.74,465,3.434,466,3.434,467,3.72,468,3.434,469,2.921,470,3.434,471,2.921,472,2.599,473,4.915,474,1.684,475,4.915,476,2.921,477,3.434,478,3.14,479,3.434,480,3.14,481,2.921,482,3.434,483,3.14,484,3.434,485,3.434,486,3.434,487,3.434,488,3.434,489,3.14,490,3.434,491,4.915,492,3.434,493,3.434,494,3.434,495,3.434,496,3.434,497,3.434,498,3.434,499,3.434,500,3.434,501,3.434,502,2.599]],["title/classes/ConfigureAdapter.html",[0,0.29,130,2.259]],["body/classes/ConfigureAdapter.html",[0,0.367,2,0.68,3,0.078,4,0.078,5,0.067,9,0.39,10,1.457,19,0.547,22,0.008,24,0.501,31,6.363,45,0.078,92,0.006,93,0.006,130,3.619,143,6.363,161,1.079,313,3.306,503,5.66,504,5.266,505,6.959,506,6.959,507,5.917,508,6.959,509,5.66,510,5.66,511,5.917,512,5.66,513,3.396,514,5.66,515,5.66,516,5.66,517,5.66,518,5.008,519,5.008,520,5.008,521,5.008,522,5.008,523,5.008,524,5.008,525,5.008]],["title/modules/ConfigureModule.html",[98,1.889,111,2.513]],["body/modules/ConfigureModule.html",[0,0.379,3,0.08,4,0.08,5,0.069,22,0.008,28,1.88,37,0.131,40,1.382,45,0.08,88,1.269,92,0.007,93,0.007,98,3.37,100,2.954,101,3.056,102,3.285,103,3.285,104,3.285,105,3.959,106,4.484,111,4.837,115,4.109,116,3.285,117,3.285,119,3.564,130,4.551,137,6.475,142,5.177,155,5.177,332,3.285,526,5.177,527,5.177,528,5.85,529,5.85,530,7.065,531,4.733,532,5.177,533,5.85,534,5.85,535,5.85,536,5.85,537,5.85,538,4.402,539,5.177,540,5.85]],["title/injectables/ConfigureService.html",[156,1.013,332,2.513]],["body/injectables/ConfigureService.html",[0,0.297,3,0.063,4,0.063,5,0.054,7,2.314,9,0.316,10,1.269,12,1.473,16,1.346,19,0.529,21,0.818,22,0.008,23,0.593,24,0.419,25,0.421,26,3.865,27,3.865,31,5.738,37,0.111,40,1.083,45,0.063,46,2.046,92,0.006,93,0.006,130,3.15,143,5.738,156,1.412,157,1.699,332,3.503,402,4.694,504,4.749,505,6.276,506,6.276,507,5.337,508,6.276,518,5.52,519,5.52,520,5.52,521,5.52,522,5.52,523,5.52,524,5.52,525,5.52,530,6.737,531,3.708,532,4.055,539,5.52,541,4.583,542,4.583,543,4.583,544,6.238,545,5.52,546,4.583,547,6.238,548,6.238,549,4.583,550,5.337,551,6.238,552,6.238,553,4.583,554,6.238,555,6.238,556,4.583,557,6.238,558,4.447,559,6.238,560,6.238,561,4.583,562,6.238,563,6.238,564,6.238,565,6.238,566,4.583,567,6.238,568,6.238,569,4.583]],["title/classes/ContextProvider.html",[0,0.29,570,3.959]],["body/classes/ContextProvider.html",[0,0.304,2,0.563,3,0.064,4,0.064,5,0.055,9,0.323,10,1.288,11,4.235,12,2.801,14,1.374,19,0.512,21,1.372,22,0.008,23,0.929,24,0.465,25,0.659,26,3.299,27,3.888,35,1.523,36,4.481,37,0.073,45,0.064,48,1.819,55,4.481,88,1.374,92,0.006,93,0.006,121,3.316,122,3.316,161,1.062,252,5.612,419,4.372,570,5.607,571,4.689,572,7.176,573,7.176,574,7.176,575,6.336,576,5.126,577,6.336,578,4.689,579,6.336,580,4.689,581,4.689,582,6.336,583,4.689,584,3.316,585,6.336,586,4.689,587,6.336,588,4.689,589,4.689,590,6.336,591,6.336,592,4.689,593,4.689,594,4.689]],["title/classes/ConversationAuthorDto.html",[0,0.29,595,3.62]],["body/classes/ConversationAuthorDto.html",[0,0.489,2,0.739,3,0.084,4,0.084,5,0.073,9,0.424,10,1.534,19,0.38,22,0.008,24,0.338,37,0.127,45,0.084,92,0.007,93,0.007,161,0.884,176,1.452,178,1.205,220,1.171,256,3.917,595,6.104,596,6.104,597,6.146,598,7.869,599,4.972,600,2.166,601,6.887,602,6.146,603,6.146,604,2.424,605,6.104,606,4.972,607,2.17,608,2.336,609,2.826,610,6.146]],["title/classes/ConversationContentDto.html",[0,0.29,611,3.62]],["body/classes/ConversationContentDto.html",[0,0.467,2,0.686,3,0.078,4,0.078,5,0.068,9,0.394,10,1.466,19,0.446,22,0.008,24,0.396,37,0.123,42,3.043,45,0.078,92,0.006,93,0.006,176,1.703,178,1.325,220,1.089,393,6.989,596,6.39,599,4.622,600,2.268,604,2.538,605,6.39,606,4.622,607,2.017,608,2.171,609,2.627,611,5.832,612,5.713,613,7.898,614,7.568,615,3.043,616,3.765,617,5.713,618,5.713,619,5.055,620,5.713,621,5.713,622,5.424,623,5.713,624,5.713,625,5.713,626,5.713,627,5.713,628,5.713,629,5.713,630,5.713,631,5.713]],["title/classes/ConversationDto.html",[0,0.29,175,2.996]],["body/classes/ConversationDto.html",[0,0.496,2,0.641,3,0.073,4,0.073,5,0.063,9,0.368,10,1.403,19,0.427,22,0.008,24,0.46,37,0.131,45,0.095,48,1.533,84,4.723,85,4.016,92,0.006,93,0.006,138,2.383,169,4.016,175,4.622,176,1.631,178,1.338,180,4.318,220,1.017,224,4.723,290,2.193,357,6.189,599,4.318,600,2.197,604,2.458,606,4.318,607,1.884,608,2.029,609,2.454,615,2.253,622,5.194,632,5.337,633,7.649,634,7.411,635,4.622,636,5.337,637,5.337,638,6.777,639,4.318,640,5.337,641,4.723,642,5.337,643,6.902,644,2.888,645,4.622,646,5.337,647,5.337,648,5.337,649,4.318,650,2.529,651,5.337]],["title/classes/ConversationMessageDto.html",[0,0.29,638,3.62]],["body/classes/ConversationMessageDto.html",[0,0.512,2,0.686,3,0.078,4,0.078,5,0.068,9,0.394,10,1.466,19,0.446,22,0.008,24,0.487,37,0.133,45,0.078,92,0.006,93,0.006,169,5.424,176,1.703,178,1.325,220,1.089,595,7.066,596,6.39,604,2.538,607,2.017,611,7.066,638,5.832,639,5.832,644,3.091,645,5.289,650,3.742,652,5.713,653,5.586,654,7.208,655,5.713,656,5.713,657,5.713,658,5.713]],["title/classes/CreateAssistantDto.html",[0,0.29,185,3.165]],["body/classes/CreateAssistantDto.html",[0,0.436,2,0.617,3,0.07,4,0.07,5,0.061,9,0.354,10,1.369,19,0.493,22,0.008,23,0.972,24,0.438,25,0.779,37,0.105,42,3.492,45,0.07,92,0.006,93,0.006,161,1.028,176,1.883,178,1.382,182,1.771,185,4.76,220,0.979,600,2.52,604,2.163,607,1.813,659,8.273,660,4.543,661,3.004,662,6.644,663,2.927,664,4.76,665,4.76,666,4.76,667,4.76,668,5.134,669,5.134,670,5.445,671,5.134,672,2.002,673,5.134,674,5.064,675,5.134,676,3.107,677,3.776,678,4.507,679,3.631]],["title/classes/CreateDatasetDto.html",[0,0.29,680,3.165]],["body/classes/CreateDatasetDto.html",[0,0.389,2,0.521,3,0.059,4,0.059,5,0.051,9,0.299,10,1.222,19,0.46,22,0.009,23,0.892,24,0.444,25,0.742,26,3.591,37,0.122,42,3.497,43,4.023,45,0.059,92,0.005,93,0.005,161,1.004,176,1.757,178,1.386,220,0.827,262,1.608,326,1.831,504,4.615,600,2.462,604,1.931,605,4.86,607,1.531,608,1.649,609,2.762,615,2.536,616,3.599,663,2.687,670,3.51,672,1.691,676,3.23,677,3.926,680,4.249,681,4.979,682,3.839,683,4.392,684,4.874,685,3.839,686,4.338,687,4.338,688,4.338,689,4.338,690,3.66,691,4.338,692,4.338,693,3.66,694,4.023,695,3.51,696,3.264,697,6.098,698,3.51,699,3.829,700,4.025,701,5.186,702,6.098,703,3.839,704,3.839]],["title/classes/CreateDatasetProcessRuleDto.html",[0,0.29,705,3.367]],["body/classes/CreateDatasetProcessRuleDto.html",[0,0.431,2,0.605,3,0.069,4,0.069,5,0.06,9,0.348,10,1.352,19,0.46,22,0.008,24,0.452,25,0.61,37,0.128,42,2.806,45,0.069,92,0.006,93,0.006,161,0.927,176,1.758,178,1.188,220,0.96,262,1.868,326,2.127,474,3.569,600,2.425,604,2.136,607,1.779,608,1.915,609,3.056,661,2.977,663,2.592,672,1.965,676,2.9,677,3.15,678,4.451,681,5.042,690,4.05,705,5.002,706,4.295,707,3.212,708,4.532,709,5.261,710,4.701,711,4.701,712,4.701,713,4.701,714,4.459,715,5.038,716,4.701,717,5.002,718,5.261,719,4.459,720,5.038,721,4.451,722,5.598,723,4.459,724,5.038,725,5.882,726,2.632,727,3.564,728,3.791]],["title/classes/CreateDocumentByFileDto.html",[0,0.29,729,3.367]],["body/classes/CreateDocumentByFileDto.html",[0,0.475,2,0.587,3,0.067,4,0.067,5,0.058,9,0.337,10,1.325,19,0.484,22,0.008,24,0.477,25,0.797,37,0.127,42,3.093,45,0.067,92,0.006,93,0.006,161,0.981,176,1.846,178,1.248,179,2.552,182,1.714,220,0.931,474,2.121,600,2.404,607,1.725,608,1.857,609,2.995,615,2.063,644,2.644,645,4.362,663,3.047,676,3.174,677,3.857,678,4.362,681,5.188,726,2.552,729,4.902,730,3.533,731,3.677,732,4.464,733,4.906,734,7.327,735,4.906,736,4.362,737,3.954,738,4.887,739,3.954,740,4.887,741,4.887,742,4.887,743,5.188,744,4.324,745,4.887,746,3.968,747,3.456,748,3.677]],["title/classes/CreateDocumentByTextDto.html",[0,0.29,749,3.367]],["body/classes/CreateDocumentByTextDto.html",[0,0.496,2,0.641,3,0.073,4,0.073,5,0.063,9,0.368,10,1.403,19,0.473,22,0.008,23,0.99,24,0.48,25,0.634,37,0.126,42,3.229,45,0.073,92,0.006,93,0.006,161,0.948,176,1.807,178,1.222,220,1.017,474,2.316,600,2.322,604,2.458,607,1.884,616,4.224,644,2.888,645,4.622,650,3.27,663,2.081,672,2.691,676,2.691,677,3.27,681,5.155,726,2.788,730,3.635,735,5.122,743,5.338,744,4.723,749,5.194,750,4.723,751,4.723,752,5.337,753,5.337,754,4.723,755,5.337]],["title/classes/CreateDocumentDto.html",[0,0.29,756,3.62]],["body/classes/CreateDocumentDto.html",[0,0.316,2,0.292,3,0.033,4,0.033,5,0.058,9,0.168,10,0.792,19,0.528,22,0.008,23,0.631,24,0.477,25,0.809,26,1.791,27,1.791,37,0.095,42,3.168,45,0.033,55,2.755,92,0.003,93,0.003,138,2.175,161,1.006,176,2.018,178,1.364,182,1.796,220,0.464,262,0.902,326,1.027,513,2.915,600,2.621,604,2.28,607,0.859,608,0.925,609,2.989,615,2.057,644,1.317,653,1.721,661,1.949,663,3.133,672,2.662,676,3.171,677,3.853,678,3.263,681,5.475,683,3.105,690,3.393,693,2.373,699,1.551,710,2.755,711,2.755,712,2.755,713,2.755,714,2.153,721,3.73,723,3.448,725,4.311,727,1.721,732,2.968,733,3.263,736,1.629,737,1.969,739,1.969,746,2.373,747,1.721,748,1.831,756,3.152,757,1.969,758,3.942,759,4.311,760,4.311,761,4.311,762,3.942,763,4.311,764,3.263,765,3.666,766,4.311,767,3.942,768,2.736,769,3.942,770,4.311,771,3.263,772,3.263,773,3.446,774,2.909,775,2.846,776,2.433,777,2.433,778,3.797,779,3.73,780,3.448,781,2.433,782,2.433,783,3.448,784,2.433,785,2.433,786,4.191,787,2.433,788,2.433,789,2.433,790,2.433,791,2.433,792,3.448,793,3.448,794,3.448,795,3.448,796,2.433,797,2.433,798,2.433,799,2.433,800,2.433,801,2.755,802,2.433,803,2.433,804,2.755,805,2.433,806,2.433,807,2.433,808,2.153,809,2.433,810,1.969,811,2.433,812,2.433,813,2.433,814,2.433,815,2.433,816,2.153,817,2.433,818,2.433,819,2.433,820,2.755,821,2.433,822,2.433,823,2.433,824,2.433,825,5.57,826,3.263,827,4.872,828,3.448,829,2.755,830,1.721,831,1.969,832,1.969,833,2.433,834,2.153,835,2.153,836,2.153,837,2.153,838,2.153,839,2.153,840,2.153,841,2.153,842,2.153,843,1.969,844,2.153,845,2.153,846,1.721,847,1.969,848,2.153,849,2.153]],["title/classes/CreateDocumentSegmentDto.html",[0,0.29,850,3.165]],["body/classes/CreateDocumentSegmentDto.html",[0,0.438,2,0.621,3,0.071,4,0.071,5,0.061,9,0.356,10,1.374,19,0.494,22,0.008,24,0.439,25,0.781,37,0.118,42,3.372,45,0.071,92,0.006,93,0.006,138,2.307,161,0.936,176,1.887,178,1.276,220,0.985,262,1.915,326,2.181,600,2.524,604,2.172,607,1.824,622,5.085,650,3.569,663,2.936,672,2.015,676,3.115,677,3.569,681,5.284,690,4.117,721,4.525,768,4.229,774,3.53,810,4.181,826,4.525,850,4.78,851,4.181,852,4.588,853,5.327,854,5.167,855,5.167,856,5.167,857,5.167,858,5.167,859,5.167,860,4.572]],["title/classes/CreateEmbeddingDto.html",[0,0.29,861,3.959]],["body/classes/CreateEmbeddingDto.html",[0,0.43,2,0.604,3,0.069,4,0.069,5,0.06,9,0.347,10,1.35,19,0.522,22,0.008,24,0.491,25,0.609,37,0.104,42,3.732,45,0.069,92,0.006,93,0.006,138,2.964,161,1.08,176,1.994,178,1.313,220,0.958,604,2.712,607,1.775,650,3.521,672,3.204,681,5.486,700,4.341,861,5.874,862,5.028,863,4.737,864,4.173,865,5.592,866,5.592,867,5.028,868,7.904,869,6.638,870,5.028,871,7.431,872,5.028,873,5.028,874,5.028,875,5.028]],["title/interfaces/DataSourceInfo.html",[456,2.337,764,2.996]],["body/interfaces/DataSourceInfo.html",[0,0.438,3,0.071,4,0.071,5,0.061,9,0.356,10,1.624,22,0.008,24,0.493,37,0.125,43,5.043,45,0.071,92,0.006,93,0.006,161,1.015,178,1.358,182,1.778,220,0.985,456,2.699,474,2.242,502,3.46,511,5.085,550,5.085,600,2.163,604,2.567,607,1.824,608,1.964,609,2.376,661,2.067,678,4.525,683,5.284,693,4.117,699,3.293,726,2.699,735,3.46,764,5.349,876,4.181,877,4.181,878,7.336,879,5.667,880,3.46,881,4.181,882,5.98,883,3.654,884,4.181,885,3.654,886,4.572,887,4.572,888,4.572,889,4.572,890,4.572,891,4.572,892,4.572,893,4.572,894,4.572,895,4.572]],["title/controllers/DatasetController.html",[94,1.942,896,3.62]],["body/controllers/DatasetController.html",[0,0.233,3,0.049,4,0.049,5,0.042,9,0.248,12,1.153,14,1.138,19,0.45,21,1.219,22,0.008,23,1.014,24,0.458,25,0.627,28,1.994,35,1.542,37,0.118,39,2.097,40,0.848,45,0.049,46,1.603,88,1.576,92,0.005,93,0.005,94,1.558,96,1.755,161,0.96,166,1.812,168,2.881,176,1.716,178,1.442,179,4.198,182,2.288,186,3.176,187,2.701,190,2.501,192,3.176,194,4.645,197,2.904,199,3.176,203,3.176,206,3.198,207,2.016,208,2.187,209,1.331,210,4.572,211,2.701,212,3.198,213,2.097,214,3.515,215,4.67,216,4.156,217,4.837,218,4.572,219,3.198,220,0.684,226,2.288,228,2.288,230,4.426,231,2.288,232,4.631,235,2.904,236,3.515,239,3.176,240,3.95,241,3.176,243,3.176,358,2.288,615,1.515,680,5.367,896,4.247,897,3.589,898,3.95,899,3.95,900,3.95,901,5.138,902,4.67,903,3.176,904,4.837,905,3.589,906,2.701,907,3.589,908,3.589,909,2.701,910,3.589,911,3.589,912,3.589,913,2.904,914,3.589,915,2.701,916,6.047,917,3.589,918,3.589,919,2.187,920,4.247,921,4.389,922,3.176,923,2.539,924,3.589,925,3.589,926,3.589,927,3.589,928,3.589,929,3.589,930,3.589,931,3.589]],["title/classes/DatasetMapper.html",[0,0.29,932,3.62]],["body/classes/DatasetMapper.html",[0,0.403,2,0.548,3,0.062,4,0.062,5,0.054,9,0.314,14,1.348,19,0.385,21,1.109,22,0.009,23,0.804,24,0.389,25,0.57,28,1.465,35,1.319,37,0.124,45,0.062,48,2.031,88,1.348,92,0.006,93,0.006,166,2.301,179,3.246,182,1.635,252,4.997,253,3.961,254,3.961,255,3.961,258,2.905,259,3.961,261,4.507,262,1.689,263,2.905,264,2.905,265,5.321,266,3.429,267,5.722,268,3.687,273,2.905,274,2.905,275,3.429,276,3.429,277,3.961,278,3.429,279,5.028,349,2.466,608,1.732,701,3.429,706,4.463,775,2.662,863,2.905,904,5.351,919,2.776,932,5.028,933,4.557,934,4.557,935,4.557,936,6.214,937,4.676,938,4.676,939,3.223,940,3.223,941,2.905,942,3.223,943,4.557,944,4.557,945,5.499,946,4.033,947,6.214,948,4.557,949,6.214,950,4.557,951,6.214,952,4.557,953,6.214,954,4.557,955,4.033,956,4.033,957,4.557,958,4.033,959,3.687,960,4.557,961,4.557,962,4.557,963,4.557,964,3.687,965,3.223,966,3.687,967,3.687,968,4.557,969,4.557]],["title/classes/DatasetProcessRuleDto.html",[0,0.29,722,3.367]],["body/classes/DatasetProcessRuleDto.html",[0,0.438,2,0.812,3,0.093,4,0.093,5,0.08,22,0.008,37,0.125,45,0.093,92,0.007,93,0.007,220,1.288,415,2.89,474,3.467,707,4.309,708,4.867,722,6.012,726,3.531,743,4.309,970,6.76,971,7.99,972,5.982,973,3.658]],["title/classes/DatasetProcessRuleMapper.html",[0,0.29,974,3.62]],["body/classes/DatasetProcessRuleMapper.html",[0,0.351,2,0.65,3,0.074,4,0.074,5,0.064,9,0.373,14,1.51,19,0.431,21,1.243,22,0.008,23,0.901,24,0.383,25,0.639,28,1.738,35,1.478,37,0.109,45,0.074,48,1.999,88,1.51,92,0.006,93,0.006,252,5.245,253,4.437,254,4.437,255,4.437,258,3.447,259,4.437,261,4.907,262,2.005,263,3.447,264,4.437,269,5.238,273,3.447,274,3.447,277,4.437,280,4.069,317,4.069,474,3.528,716,3.825,919,3.295,974,5.632,975,7.698,976,5.408,977,7.086,978,5.408,979,6.194,980,5.408,981,6.961,982,6.961,983,6.961,984,5.408,985,5.408]],["title/injectables/DatasetProcessRuleRelationalRepository.html",[156,1.013,986,3.62]],["body/injectables/DatasetProcessRuleRelationalRepository.html",[0,0.254,3,0.054,4,0.054,5,0.046,7,1.979,9,0.27,12,1.259,14,1.213,16,1.151,19,0.498,21,1.437,22,0.008,23,1.042,24,0.443,25,0.739,35,1.66,37,0.117,40,0.926,45,0.054,46,1.75,48,1.873,76,2.361,88,1.414,92,0.005,93,0.005,156,1.266,157,1.453,161,1.041,168,2.966,182,2.058,190,2.608,285,2.387,286,4.085,290,2.68,294,3.663,296,2.047,300,2.973,306,4.533,317,2.949,474,3.732,661,2.846,706,2.047,919,2.387,974,3.171,977,3.171,979,5.693,986,4.525,987,8.23,988,3.468,989,4.949,990,4.949,991,4.949,992,4.949,993,4.949,994,4.949,995,3.919,996,4.949,997,3.919,998,4.949,999,3.919,1000,4.949,1001,3.919,1002,4.949,1003,3.919,1004,4.949,1005,3.919,1006,4.949,1007,3.919,1008,3.745,1009,3.171,1010,3.919,1011,3.919,1012,3.919,1013,3.919,1014,3.919,1015,3.919,1016,5.593,1017,3.919,1018,3.919,1019,3.919,1020,3.919,1021,3.919]],["title/classes/DatasetProcessRuleRepository.html",[0,0.29,1008,2.996]],["body/classes/DatasetProcessRuleRepository.html",[0,0.203,2,0.376,3,0.043,4,0.043,5,0.037,9,0.216,14,1.028,19,0.446,21,1.288,22,0.009,23,0.934,24,0.397,25,0.662,35,1.677,37,0.049,45,0.043,76,2.693,92,0.004,93,0.004,161,1.002,178,1.197,182,2.388,190,2.491,207,4.051,209,2.861,290,1.947,294,3.583,313,5.131,314,3.646,316,2.71,317,6.488,318,2.475,320,5.292,322,4.598,323,4.045,325,3.484,326,2,474,3.35,661,2.553,709,4.045,919,1.905,977,3.834,979,2.212,988,2.768,989,4.193,990,4.193,991,4.193,992,4.193,993,4.193,994,4.193,996,4.193,998,4.193,1000,4.193,1002,4.193,1004,4.193,1006,4.193,1008,3.173,1022,7.493,1023,3.128,1024,3.128,1025,3.128,1026,5.837,1027,3.128,1028,3.128,1029,3.128]],["title/injectables/DatasetRelationalRepository.html",[156,1.013,1030,3.62]],["body/injectables/DatasetRelationalRepository.html",[0,0.288,3,0.061,4,0.061,5,0.053,7,2.247,9,0.307,12,1.43,14,1.326,16,1.306,19,0.504,21,1.407,22,0.008,23,1.02,24,0.433,25,0.723,35,1.673,37,0.123,40,1.051,45,0.061,46,1.987,48,1.755,76,1.878,88,1.514,92,0.005,93,0.005,156,1.384,157,1.649,161,1.01,168,2.975,182,2.143,190,2.619,285,2.71,286,4.253,290,2.869,294,3.922,296,2.324,300,2.858,306,3.896,329,3.724,706,2.324,898,4.6,899,4.6,900,4.6,901,5.658,902,4.6,904,5.317,906,4.6,909,4.6,915,4.6,919,2.71,932,3.6,1030,4.946,1031,4.449,1032,4.449,1033,5.409,1034,4.449,1035,4.449,1036,4.449,1037,4.449,1038,4.449,1039,3.937,1040,4.449,1041,4.449,1042,4.449,1043,4.449,1044,4.449,1045,4.449,1046,4.449,1047,4.449,1048,4.449,1049,4.449]],["title/classes/DatasetRepository.html",[0,0.29,329,2.726]],["body/classes/DatasetRepository.html",[0,0.235,2,0.435,3,0.05,4,0.05,5,0.043,9,0.25,14,1.146,19,0.451,21,1.224,22,0.009,23,0.887,24,0.377,25,0.629,35,1.71,37,0.057,45,0.05,76,2.23,92,0.005,93,0.005,161,0.963,178,1.165,182,2.348,190,2.507,207,3.503,209,2.703,290,2.171,294,3.851,313,5.157,314,3.976,316,2.956,320,5.502,322,3.976,323,4.412,325,3.8,329,3.219,358,3.976,706,4.549,898,3.976,899,3.976,900,3.976,901,5.16,902,3.976,904,2.308,906,3.976,909,3.976,915,3.976,919,2.206,1033,4.675,1050,3.621,1051,3.621,1052,3.621,1053,5.283,1054,3.621,1055,3.621,1056,3.621,1057,5.047,1058,3.621,1059,3.621]],["title/injectables/DatasetService.html",[156,1.013,921,3.165]],["body/injectables/DatasetService.html",[0,0.321,3,0.046,4,0.046,5,0.039,9,0.229,11,3.236,12,2.262,14,1.076,16,1.456,19,0.457,21,1.256,22,0.009,23,0.911,24,0.387,25,0.646,35,1.736,37,0.13,40,0.785,45,0.046,76,2.777,88,1.287,92,0.004,93,0.004,156,1.123,157,1.232,161,0.985,166,1.679,168,2.844,176,0.785,178,1.051,182,2.212,190,2.596,209,2.609,226,2.119,228,2.119,300,2.806,329,4.497,335,4.95,474,1.443,680,5.41,706,1.736,898,3.732,899,3.732,900,3.732,901,4.95,902,3.732,903,4.389,904,2.119,906,3.732,909,3.732,915,3.732,916,6.156,919,2.025,920,4.013,921,3.508,939,2.351,940,2.351,941,2.119,942,2.351,1008,5.122,1009,2.69,1060,3.324,1061,3.324,1062,4.875,1063,4.659,1064,4.659,1065,3.324,1066,3.324,1067,5.25,1068,3.324,1069,3.324,1070,3.324,1071,3.324,1072,2.025,1073,3.324,1074,2.942,1075,2.69,1076,2.351,1077,2.942,1078,2.69,1079,3.324,1080,3.324,1081,3.324,1082,3.324,1083,3.324,1084,3.324,1085,3.324,1086,3.324,1087,3.324]],["title/modules/DatasetsModule.html",[98,1.889,112,3.165]],["body/modules/DatasetsModule.html",[0,0.263,3,0.056,4,0.056,5,0.048,22,0.008,37,0.142,40,0.958,45,0.056,92,0.005,93,0.005,96,2.802,98,2.806,100,2.048,101,2.118,102,2.278,103,2.278,104,2.278,105,3.596,106,2.278,111,4.442,112,6.616,115,3.219,116,2.278,117,2.278,119,3.492,131,2.048,296,2.118,330,5.042,407,5.297,410,4.637,412,3.282,896,5.378,921,5.594,922,3.589,1088,3.589,1089,3.589,1090,3.589,1091,4.819,1092,5.297,1093,5.594,1094,6.4,1095,5.042,1096,5.594,1097,5.594,1098,5.297,1099,5.594,1100,5.594,1101,4.056,1102,5.378,1103,5.378,1104,5.378,1105,5.378,1106,5.378,1107,3.589,1108,4.056,1109,4.056,1110,4.056,1111,4.056,1112,4.056,1113,4.056,1114,4.056,1115,4.056,1116,3.589,1117,3.589,1118,3.589,1119,3.589,1120,4.056,1121,3.589,1122,3.589,1123,3.282,1124,4.056,1125,3.589,1126,3.589]],["title/controllers/DocumentController.html",[94,1.942,1102,3.62]],["body/controllers/DocumentController.html",[0,0.129,3,0.027,4,0.096,5,0.024,9,0.137,12,0.638,14,0.716,19,0.434,21,1.253,22,0.008,23,1.104,24,0.441,25,0.644,28,2.521,35,1.49,37,0.112,39,1.16,40,0.469,45,0.027,46,0.887,47,1.16,48,0.948,88,1.07,92,0.003,93,0.003,94,0.862,96,0.971,161,1.058,166,1.003,168,2.841,176,1.658,178,1.47,179,4.299,182,1.298,187,2.484,190,1.968,206,3.336,207,1.116,208,1.21,209,0.736,210,5.315,211,1.495,212,1.21,213,1.16,214,2.837,215,4.712,216,2.837,217,4.59,218,5.371,219,2.011,220,0.379,226,2.104,228,1.266,230,4.275,231,2.104,232,4.473,236,2.211,240,4.446,300,2.38,349,1.075,358,1.266,362,1.33,558,1.16,608,0.755,661,3.003,729,4.446,730,1.838,749,4.446,829,4.429,913,1.607,923,1.405,1072,1.21,1094,3.427,1102,2.671,1118,1.758,1127,1.986,1128,4.236,1129,4.236,1130,4.236,1131,3.427,1132,4.236,1133,4.236,1134,2.671,1135,3.427,1136,3.427,1137,4.236,1138,1.986,1139,5.511,1140,1.986,1141,4.781,1142,6.607,1143,5.541,1144,6.753,1145,5.229,1146,1.986,1147,5.678,1148,1.986,1149,1.986,1150,3.301,1151,1.986,1152,1.986,1153,1.986,1154,1.986,1155,1.986,1156,1.986,1157,1.986,1158,1.986,1159,1.986,1160,1.986,1161,1.986,1162,1.986,1163,1.986,1164,1.986,1165,1.986,1166,1.986,1167,1.758,1168,3.667,1169,1.986,1170,1.607,1171,4.813,1172,1.986,1173,1.758,1174,1.986,1175,0.887,1176,1.986,1177,5.305,1178,1.986,1179,1.986,1180,1.986,1181,1.986,1182,1.986,1183,1.405,1184,1.758,1185,1.607,1186,1.495,1187,1.607,1188,1.758,1189,1.266,1190,1.495,1191,1.986,1192,1.986,1193,1.986,1194,5.506,1195,2.104,1196,1.003,1197,2.104,1198,2.211,1199,1.986,1200,1.986,1201,1.986,1202,1.986,1203,1.986,1204,1.986,1205,3.301,1206,1.986,1207,1.986,1208,1.986,1209,1.986,1210,5.229,1211,1.986,1212,1.986,1213,1.986,1214,1.986,1215,1.986,1216,1.986,1217,1.986,1218,1.986,1219,1.986,1220,1.986,1221,1.986]],["title/classes/DocumentDto.html",[0,0.29,1222,3.367]],["body/classes/DocumentDto.html",[0,0.475,2,0.705,3,0.08,4,0.08,5,0.069,9,0.405,10,1.49,19,0.453,22,0.008,24,0.403,37,0.114,42,3.093,43,4.907,45,0.08,92,0.007,93,0.007,161,0.859,176,1.731,178,1.171,220,1.118,318,3.063,600,2.404,604,2.355,607,2.07,650,2.779,653,4.148,663,2.286,672,2.286,676,2.857,677,3.472,730,3.18,779,3.927,846,4.148,847,4.745,1222,5.514,1223,5.864,1224,4.489,1225,6.015,1226,5.514,1227,5.864,1228,5.864,1229,7.328,1230,5.864,1231,5.864,1232,5.514]],["title/classes/DocumentMapper.html",[0,0.29,1233,3.62]],["body/classes/DocumentMapper.html",[0,0.286,2,0.531,3,0.061,4,0.061,5,0.052,9,0.305,14,1.319,19,0.376,21,1.086,22,0.009,23,0.787,24,0.334,25,0.558,28,1.419,35,1.291,37,0.095,45,0.061,48,1.747,88,1.319,92,0.005,93,0.005,252,4.95,253,3.877,254,3.877,255,3.877,258,2.815,259,3.877,261,4.434,262,1.637,263,2.815,264,2.815,265,4.577,266,3.323,269,4.577,270,3.573,273,2.815,274,2.815,275,3.323,276,3.323,277,3.877,278,3.323,280,3.323,730,3.613,945,5.382,946,3.908,956,3.908,1168,5.575,1186,3.323,1233,4.921,1234,4.417,1235,4.417,1236,4.417,1237,5.382,1238,3.908,1239,6.082,1240,4.417,1241,6.082,1242,4.417,1243,6.082,1244,4.417,1245,6.082,1246,4.417,1247,6.082,1248,4.417,1249,5.382,1250,3.908,1251,5.382,1252,3.908,1253,6.082,1254,4.417,1255,5.382,1256,3.908,1257,5.382,1258,3.908,1259,6.082,1260,4.417,1261,6.082,1262,4.417,1263,6.082,1264,4.417,1265,6.082,1266,4.417,1267,6.082,1268,4.417,1269,6.082,1270,4.417,1271,6.082,1272,4.417,1273,3.908,1274,4.417,1275,4.417,1276,4.417,1277,4.417,1278,3.908,1279,3.908,1280,4.417,1281,3.908,1282,3.908,1283,4.417,1284,4.417,1285,4.417,1286,4.417,1287,4.417,1288,4.417,1289,4.417,1290,4.417]],["title/injectables/DocumentRelationalRepository.html",[156,1.013,1291,3.62]],["body/injectables/DocumentRelationalRepository.html",[0,0.196,3,0.041,4,0.041,5,0.036,7,1.526,9,0.209,12,0.971,14,1.001,16,0.888,19,0.502,21,1.449,22,0.009,23,1.125,24,0.446,25,0.745,35,1.695,37,0.119,40,0.714,45,0.041,46,1.35,48,2.127,76,1.276,88,1.606,92,0.004,93,0.004,156,1.045,157,1.121,161,1.072,168,2.989,182,2.009,190,2.638,262,1.121,285,1.842,286,3.718,290,2.576,294,3.146,296,1.579,300,2.706,306,2.943,326,1.276,558,1.766,661,3.335,708,1.842,730,1.312,771,2.024,1062,2.943,1131,3.735,1134,3.735,1135,4.532,1136,3.735,1168,4.959,1170,2.446,1171,5.401,1186,2.275,1189,1.927,1190,2.275,1195,1.927,1196,3.166,1197,2.943,1233,2.446,1291,3.735,1292,3.023,1293,4.085,1294,4.085,1295,4.085,1296,4.085,1297,4.085,1298,4.085,1299,3.023,1300,4.085,1301,3.023,1302,4.085,1303,3.023,1304,4.085,1305,3.023,1306,4.085,1307,3.023,1308,4.085,1309,3.023,1310,4.085,1311,3.023,1312,4.085,1313,3.023,1314,3.023,1315,4.085,1316,3.023,1317,4.085,1318,3.023,1319,2.024,1320,2.138,1321,2.675,1322,3.023,1323,3.023,1324,3.023,1325,3.023,1326,4.617,1327,3.474,1328,4.085,1329,4.085,1330,2.675,1331,4.085,1332,2.675,1333,4.085,1334,3.023,1335,2.675,1336,2.675,1337,2.675,1338,2.675,1339,2.675,1340,2.675,1341,4.617,1342,3.023,1343,3.023,1344,3.023,1345,4.617,1346,3.023,1347,3.023,1348,3.023]],["title/classes/DocumentRepository.html",[0,0.29,1062,2.852]],["body/classes/DocumentRepository.html",[0,0.142,2,0.263,3,0.03,4,0.03,5,0.026,9,0.151,14,0.776,19,0.449,21,1.295,22,0.009,23,1.039,24,0.399,25,0.666,35,1.722,37,0.082,45,0.03,76,2.211,92,0.003,93,0.003,161,1.036,178,1.187,182,2.386,190,2.5,207,2.547,209,2.942,262,0.812,290,1.864,294,2.941,313,5.132,314,2.891,316,2.149,320,5.076,322,3.948,323,3.208,325,2.763,326,3.256,362,5.076,661,3.086,730,3.613,1026,5.708,1057,5.012,1062,2.281,1131,2.895,1134,2.895,1135,3.67,1136,2.895,1168,1.467,1170,1.772,1171,4.623,1175,1.598,1186,1.648,1189,1.396,1190,1.648,1198,3.037,1293,3.166,1294,4.014,1295,3.166,1296,3.166,1297,3.166,1298,4.014,1300,3.166,1302,1.938,1304,3.166,1306,3.166,1308,3.166,1310,3.166,1312,3.166,1315,3.166,1317,1.938,1319,1.467,1320,1.549,1349,2.19,1350,2.19,1351,4.918,1352,5.012,1353,2.19,1354,1.938,1355,2.396,1356,2.19,1357,2.19,1358,4.014,1359,2.19,1360,2.19,1361,4.536,1362,2.19,1363,2.19,1364,4.536,1365,2.19,1366,4.536,1367,2.19,1368,1.938]],["title/controllers/DocumentSegmentController.html",[94,1.942,1103,3.62]],["body/controllers/DocumentSegmentController.html",[0,0.135,3,0.029,4,0.029,5,0.025,9,0.144,12,0.67,14,0.745,19,0.396,21,1.142,22,0.009,23,1.107,24,0.418,25,0.587,28,2.629,35,1.358,37,0.108,39,1.218,40,0.493,45,0.029,46,0.931,48,0.987,88,0.951,92,0.003,93,0.003,94,0.905,96,1.019,161,1.075,166,1.053,168,2.732,176,1.512,178,1.468,179,4.272,182,0.549,190,2.321,206,2.67,207,1.171,208,1.27,209,0.773,210,5.522,211,1.569,212,1.27,213,1.218,214,2.301,215,4.815,216,2.935,217,4.262,218,5.522,219,2.094,220,0.397,226,1.329,228,1.329,230,3.898,231,1.329,232,4.078,236,2.301,240,3.826,300,2.137,349,1.128,358,1.329,360,2.19,558,1.218,615,0.88,661,2.421,850,4.729,923,1.475,1072,1.27,1093,3.1,1103,2.78,1116,1.845,1117,1.845,1139,5.316,1141,4.896,1142,6.255,1143,6.612,1144,6.841,1145,4.499,1147,5.41,1167,3.041,1175,0.931,1183,1.475,1184,1.845,1185,1.687,1189,1.329,1194,5.177,1195,2.19,1196,1.053,1197,2.19,1198,2.301,1210,5.662,1369,6.687,1370,2.085,1371,3.298,1372,3.298,1373,3.879,1374,3.879,1375,3.298,1376,3.298,1377,3.298,1378,1.845,1379,2.085,1380,2.085,1381,3.584,1382,2.085,1383,1.845,1384,7.102,1385,2.085,1386,7.137,1387,2.085,1388,2.085,1389,6.929,1390,2.085,1391,2.085,1392,2.085,1393,2.085,1394,2.085,1395,2.085,1396,4.64,1397,2.085,1398,2.085,1399,2.085,1400,2.085,1401,2.085,1402,2.085,1403,1.845,1404,5.032,1405,2.085,1406,2.085,1407,1.475,1408,3.1,1409,2.085,1410,2.085,1411,2.085,1412,5.623,1413,2.085,1414,2.085,1415,2.085,1416,1.687,1417,2.085,1418,2.085,1419,2.085,1420,2.085,1421,2.085,1422,2.085,1423,2.085,1424,2.085,1425,2.085,1426,2.085]],["title/classes/DocumentSegmentMapper.html",[0,0.29,1427,3.62]],["body/classes/DocumentSegmentMapper.html",[0,0.295,2,0.547,3,0.062,4,0.062,5,0.054,9,0.314,14,1.346,19,0.384,21,1.108,22,0.009,23,0.803,24,0.341,25,0.57,28,1.462,35,1.317,37,0.11,45,0.062,48,1.782,88,1.346,92,0.006,93,0.006,179,3.242,252,4.994,253,3.956,254,3.956,255,3.956,258,2.899,259,3.956,261,4.503,262,1.686,263,3.956,264,2.899,269,4.67,270,3.68,273,3.956,274,2.899,275,4.67,276,3.423,277,3.956,280,3.423,349,2.461,955,4.025,1237,5.492,1238,4.025,1249,5.492,1250,4.025,1251,5.492,1252,4.025,1255,5.492,1256,4.025,1257,5.492,1258,4.025,1273,4.025,1278,4.025,1279,4.025,1281,4.025,1282,4.025,1381,5.348,1407,3.217,1427,5.022,1428,7.065,1429,4.549,1430,6.314,1431,4.549,1432,4.549,1433,3.423,1434,6.206,1435,4.549,1436,6.206,1437,4.549,1438,6.206,1439,4.549,1440,6.206,1441,4.549,1442,6.206,1443,4.549,1444,6.206,1445,4.549,1446,6.206,1447,4.549,1448,4.549,1449,4.549,1450,4.549,1451,4.549,1452,4.549,1453,4.549,1454,4.549,1455,4.549,1456,4.549,1457,4.549,1458,4.025,1459,4.549,1460,4.549,1461,4.549,1462,4.549,1463,4.549]],["title/injectables/DocumentSegmentRelationalRepository.html",[156,1.013,1464,3.62]],["body/injectables/DocumentSegmentRelationalRepository.html",[0,0.151,3,0.032,4,0.032,5,0.028,7,1.178,9,0.161,12,0.75,14,0.817,16,0.685,19,0.504,21,1.454,22,0.009,23,1.054,24,0.448,25,0.748,35,1.71,37,0.109,40,0.551,45,0.032,46,1.042,48,2.071,76,1.59,88,1.564,92,0.003,93,0.003,138,1.042,156,0.853,157,0.865,161,1.077,168,2.999,182,1.678,190,2.632,262,0.865,285,1.421,286,3.332,290,2.87,294,2.66,296,1.219,300,2.981,306,3.465,326,0.985,558,1.363,650,1.106,661,3.291,708,2.294,730,1.013,771,1.562,852,1.421,1063,2.294,1076,1.65,1139,5.252,1189,1.487,1195,1.487,1196,3.012,1197,2.401,1319,1.562,1320,1.65,1327,3.564,1328,3.333,1329,3.333,1330,2.065,1331,3.333,1332,2.065,1333,3.333,1335,3.333,1336,3.333,1337,2.065,1338,2.065,1339,2.065,1340,2.065,1371,2.834,1372,2.834,1375,3.564,1376,2.834,1377,2.834,1381,4.999,1396,4.677,1407,1.65,1408,1.65,1427,1.888,1430,1.756,1464,3.047,1465,8.224,1466,2.065,1467,3.333,1468,3.333,1469,3.333,1470,3.333,1471,3.333,1472,3.333,1473,3.333,1474,3.333,1475,4.191,1476,3.333,1477,2.333,1478,3.333,1479,2.333,1480,3.333,1481,2.333,1482,3.333,1483,2.333,1484,3.333,1485,2.333,1486,3.333,1487,2.333,1488,3.333,1489,2.333,1490,3.333,1491,2.333,1492,3.333,1493,2.333,1494,5.161,1495,3.333,1496,2.333,1497,3.333,1498,2.333,1499,1.888,1500,2.333,1501,2.065,1502,5.255,1503,2.333,1504,3.333,1505,2.333,1506,3.333,1507,2.333,1508,3.333,1509,2.333,1510,2.333,1511,2.333,1512,2.333,1513,2.333,1514,2.333,1515,2.333,1516,3.766,1517,2.333,1518,5.436,1519,2.333,1520,3.766,1521,2.333,1522,3.766,1523,2.333,1524,2.333,1525,2.065,1526,2.333,1527,2.065,1528,2.333,1529,2.333,1530,2.333,1531,2.065,1532,2.333,1533,2.333,1534,3.766]],["title/classes/DocumentSegmentRepository.html",[0,0.29,1063,2.726]],["body/classes/DocumentSegmentRepository.html",[0,0.103,2,0.191,3,0.022,4,0.022,5,0.019,9,0.11,14,0.594,19,0.45,21,1.299,22,0.009,23,0.941,24,0.4,25,0.668,35,1.72,37,0.067,45,0.022,76,1.805,92,0.002,93,0.002,161,1.039,178,1.162,182,2.36,190,2.477,207,3.492,209,3.023,262,0.59,290,2.443,294,2.401,313,5.131,314,3.963,316,1.706,318,1.43,320,4.163,322,3.354,323,2.547,325,2.194,326,3.463,661,3.04,1026,2.913,1057,5.533,1063,1.667,1139,4.579,1175,1.909,1189,1.014,1198,2.411,1319,1.066,1320,1.126,1351,5.267,1352,5.533,1354,2.422,1355,2.863,1368,2.422,1371,2.709,1372,2.059,1375,2.709,1376,2.059,1377,2.709,1381,1.014,1396,3.772,1407,1.126,1408,1.126,1416,6.348,1430,2.059,1466,1.408,1467,2.422,1468,3.186,1469,2.422,1470,2.422,1471,2.422,1472,2.422,1473,2.422,1474,2.422,1475,3.186,1476,2.422,1478,2.422,1480,1.408,1482,2.422,1484,1.408,1486,2.422,1488,2.422,1490,2.422,1492,2.422,1494,5.03,1495,2.422,1497,2.422,1499,1.288,1501,1.408,1502,3.217,1504,2.422,1506,2.422,1508,1.408,1535,7.392,1536,1.591,1537,6.217,1538,1.591,1539,4.656,1540,1.591,1541,2.411,1542,1.591,1543,6.437,1544,1.591,1545,1.591,1546,1.591,1547,1.591,1548,5.261,1549,1.591,1550,1.591,1551,3.601,1552,1.591,1553,3.601,1554,1.591,1555,3.601,1556,1.591,1557,1.591,1558,3.601,1559,3.601,1560,1.591]],["title/injectables/DocumentSegmentService.html",[156,1.013,1093,3.165]],["body/injectables/DocumentSegmentService.html",[0,0.217,3,0.028,4,0.028,5,0.024,9,0.14,10,0.681,11,2.903,12,2.029,13,3.755,14,0.727,15,2.873,16,0.984,19,0.424,21,1.179,22,0.009,23,0.855,24,0.363,25,0.606,26,0.93,27,0.93,28,2.269,35,1.499,37,0.12,40,0.478,45,0.028,48,2.234,62,2.506,72,3.797,76,1.415,88,0.931,92,0.003,93,0.003,138,0.903,156,0.759,157,0.75,161,1.06,166,1.021,168,2.716,176,1.014,178,1.008,179,2.606,182,2.27,190,2.265,209,2.843,226,1.289,228,1.289,300,3.182,325,1.232,335,3.755,349,1.094,467,2.873,472,4.228,608,0.769,650,1.588,661,2.826,706,1.057,730,2.166,765,1.522,768,1.882,771,1.354,772,4.588,773,3.912,775,1.182,778,1.182,850,5.124,853,1.431,863,2.136,864,1.882,865,2.522,866,2.522,937,3.229,938,3.229,939,1.431,940,1.431,941,1.289,942,1.431,1062,3.8,1063,3.846,1064,3.846,1067,5.586,1072,1.232,1075,1.637,1076,1.431,1077,1.79,1078,1.637,1093,2.37,1097,4.465,1121,1.79,1139,5.337,1175,0.903,1189,1.289,1196,1.021,1319,1.354,1320,1.431,1371,3.229,1372,2.522,1373,2.966,1374,2.966,1375,3.229,1376,2.522,1377,3.229,1378,1.79,1381,1.289,1383,2.966,1384,6.973,1396,4.423,1403,1.79,1404,5.451,1407,1.431,1408,3.035,1433,1.522,1499,1.637,1502,4.751,1527,1.79,1541,1.354,1543,5.276,1561,7.062,1562,2.023,1563,2.023,1564,3.351,1565,2.023,1566,2.023,1567,3.351,1568,2.023,1569,3.351,1570,2.023,1571,2.023,1572,3.351,1573,2.023,1574,2.023,1575,3.351,1576,4.416,1577,4.416,1578,2.023,1579,2.023,1580,3.351,1581,4.99,1582,2.023,1583,3.351,1584,2.023,1585,3.351,1586,4.291,1587,3.351,1588,2.023,1589,4.99,1590,2.023,1591,1.79,1592,4.291,1593,4.291,1594,4.291,1595,3.351,1596,4.416,1597,3.797,1598,4.291,1599,2.023,1600,2.023,1601,4.291,1602,2.023,1603,2.023,1604,3.351,1605,2.023,1606,2.023,1607,2.023,1608,2.023]],["title/classes/EmbeddingMapper.html",[0,0.29,1609,3.62]],["body/classes/EmbeddingMapper.html",[0,0.346,2,0.641,3,0.073,4,0.073,5,0.063,9,0.368,14,1.497,19,0.427,21,1.232,22,0.008,23,0.893,24,0.379,25,0.634,28,1.715,35,1.465,37,0.119,45,0.073,48,1.982,88,1.497,92,0.006,93,0.006,252,5.226,253,4.399,254,4.399,255,4.399,258,3.402,259,4.399,261,4.876,262,1.978,263,3.402,264,3.402,273,3.402,274,3.402,277,4.399,608,2.029,937,5.194,938,5.194,1541,5.846,1609,5.584,1610,5.337,1611,5.337,1612,6.175,1613,5.337,1614,4.318,1615,6.902,1616,5.337,1617,6.107,1618,4.723,1619,6.902,1620,5.337,1621,6.902,1622,5.337,1623,5.337,1624,4.723,1625,5.337,1626,5.337]],["title/injectables/EmbeddingRelationalRepository.html",[156,1.013,1627,3.62]],["body/injectables/EmbeddingRelationalRepository.html",[0,0.172,3,0.036,4,0.036,5,0.031,7,1.337,9,0.183,10,0.847,11,3.668,12,2.522,14,0.903,16,1.223,19,0.494,21,1.342,22,0.009,23,0.973,24,0.445,25,0.69,26,2.368,27,2.368,35,1.552,37,0.114,40,0.626,45,0.036,48,1.824,76,1.118,88,1.377,92,0.004,93,0.004,130,2.949,131,1.337,138,2.608,156,0.943,157,0.982,161,0.995,168,2.888,182,1.856,190,2.51,262,0.982,285,1.613,286,3.523,290,2.4,296,1.383,300,2.778,306,2.655,325,1.613,326,2.174,332,2.893,458,3.135,513,3.09,576,2.142,615,1.118,650,2.441,700,3.71,730,1.149,732,1.613,772,1.773,773,1.873,775,1.547,852,1.613,853,1.873,863,5.158,864,4.105,865,1.992,866,1.992,941,2.655,959,2.142,965,4.492,1064,2.538,1175,1.182,1196,2.104,1224,1.487,1430,1.992,1525,2.343,1541,4.725,1609,2.142,1612,5.643,1614,2.142,1627,3.371,1628,2.648,1629,5.15,1630,5.84,1631,5.84,1632,3.687,1633,3.687,1634,3.687,1635,3.687,1636,3.687,1637,3.687,1638,3.687,1639,3.876,1640,4.166,1641,3.687,1642,2.648,1643,3.687,1644,2.648,1645,3.687,1646,2.648,1647,3.687,1648,2.648,1649,3.687,1650,2.648,1651,3.687,1652,2.648,1653,4.166,1654,2.648,1655,2.343,1656,5.168,1657,2.648,1658,2.648,1659,2.648,1660,1.992,1661,2.343,1662,2.343,1663,2.648,1664,2.648,1665,4.166,1666,4.166,1667,2.648,1668,2.648,1669,2.648,1670,2.343,1671,2.648,1672,2.648,1673,2.648,1674,2.648,1675,2.648,1676,2.648,1677,2.648,1678,2.648,1679,2.648,1680,2.648,1681,2.648,1682,4.166,1683,2.648,1684,2.648,1685,2.648,1686,2.648,1687,2.648,1688,2.648,1689,2.648,1690,2.648,1691,2.648,1692,2.648,1693,2.648,1694,2.648,1695,4.166,1696,2.648,1697,2.648,1698,2.648,1699,2.648,1700,2.648,1701,2.648,1702,4.166,1703,4.166,1704,3.135,1705,2.648,1706,4.166,1707,2.648,1708,2.648,1709,4.166,1710,2.648,1711,2.648,1712,2.648,1713,2.648,1714,2.648,1715,2.648,1716,2.648,1717,2.648,1718,2.648,1719,2.142,1720,2.648,1721,2.648,1722,2.648,1723,2.648,1724,2.648,1725,2.648,1726,4.166]],["title/classes/EmbeddingRepository.html",[0,0.29,1064,2.726]],["body/classes/EmbeddingRepository.html",[0,0.153,2,0.284,3,0.032,4,0.032,5,0.028,9,0.163,14,0.826,19,0.434,21,1.254,22,0.009,23,0.909,24,0.386,25,0.645,35,1.671,37,0.075,45,0.032,76,1.609,92,0.003,93,0.003,161,0.983,178,1.158,182,1.958,190,2.498,207,2.686,209,3.109,262,0.878,290,2.978,313,5.113,314,4.093,316,2.266,318,2.863,320,3.203,322,3.048,326,3.54,360,1.509,362,2.552,513,3.057,700,4.599,863,4.742,864,3.375,941,3.83,965,3.877,1064,2.321,1175,2.448,1224,1.329,1351,5.598,1352,5.865,1358,5.682,1539,4.232,1541,5.092,1612,4.25,1614,1.915,1632,4.232,1633,4.232,1634,3.372,1635,3.372,1636,4.232,1637,3.372,1638,3.372,1639,3.599,1641,2.095,1643,2.095,1645,3.372,1647,3.372,1649,2.095,1651,3.372,1655,2.095,1656,5.682,1660,1.781,1661,2.095,1727,2.367,1728,2.367,1729,2.367,1730,2.367,1731,2.367,1732,4.783,1733,2.367,1734,4.783,1735,2.367,1736,4.783,1737,3.81,1738,2.367,1739,5.482,1740,2.367,1741,5.482,1742,3.81,1743,3.81,1744,2.367,1745,3.372,1746,2.367,1747,2.367]],["title/interfaces/EmbeddingWithMetadata.html",[456,2.337,1660,3.367]],["body/interfaces/EmbeddingWithMetadata.html",[3,0.083,4,0.083,5,0.071,9,0.417,10,1.518,19,0.374,22,0.008,24,0.478,37,0.094,45,0.083,92,0.007,93,0.007,161,1.083,419,4.546,456,3.154,502,4.044,513,3.328,608,2.295,650,4.009,732,5.154,746,5.154,852,5.154,864,4.751,1660,5.616,1704,6.366,1748,7.463,1749,6.039,1750,6.039,1751,6.039]],["title/classes/ErrorResponseDto.html",[0,0.29,1752,3.959]],["body/classes/ErrorResponseDto.html",[0,0.376,2,0.696,3,0.079,4,0.079,5,0.069,9,0.4,10,1.479,19,0.492,22,0.008,24,0.437,37,0.09,45,0.079,55,5.144,62,4.644,73,5.982,90,7.034,92,0.006,93,0.006,161,0.977,176,1.878,178,1.4,220,1.104,513,2.988,600,2.283,604,2.679,619,7.034,1752,6.436,1753,8.337,1754,5.128,1755,5.794,1756,7.273,1757,5.128,1758,7.273,1759,7.273,1760,5.128]],["title/injectables/ErrorsInterceptor.html",[156,1.013,1761,3.959]],["body/injectables/ErrorsInterceptor.html",[0,0.372,3,0.079,4,0.079,5,0.068,7,2.898,9,0.396,14,1.568,19,0.355,21,1.025,22,0.008,23,0.743,24,0.316,25,0.527,35,1.218,37,0.124,38,6.398,40,1.356,45,0.079,62,3.353,63,5.079,73,5.44,88,1.716,92,0.006,93,0.006,156,1.637,157,2.128,343,5.598,344,3.844,364,3.844,635,5.3,1761,6.398,1762,5.74,1763,5.85,1764,5.85,1765,6.722,1766,6.722,1767,5.74,1768,5.85,1769,5.74,1770,4.644,1771,5.079,1772,5.74,1773,7.23,1774,7.23,1775,5.74,1776,5.74,1777,7.23,1778,7.23]],["title/controllers/ExampleController.html",[94,1.942,1106,3.62]],["body/controllers/ExampleController.html",[0,0.331,3,0.07,4,0.07,5,0.061,9,0.353,11,3.086,12,2.157,14,1.455,16,1.501,19,0.415,22,0.008,28,1.643,35,1.425,37,0.129,39,2.987,40,1.208,45,0.07,47,2.987,48,1.927,88,1.109,92,0.006,93,0.006,94,2.219,96,2.499,130,3.389,131,2.582,166,2.582,168,2.789,176,1.586,208,3.115,212,3.115,213,2.987,219,4.089,220,0.974,230,3.115,231,3.259,300,1.943,332,2.871,413,4.747,418,3.616,419,3.115,420,3.616,421,3.616,422,3.616,469,3.847,471,3.847,600,1.468,1098,5.017,1106,5.43,1122,4.524,1123,4.137,1779,5.113,1780,7.04,1781,7.04,1782,5.113,1783,5.113,1784,5.113,1785,6.711,1786,3.847,1787,5.113,1788,5.113,1789,4.524,1790,5.113,1791,5.113,1792,5.113,1793,5.113,1794,5.113,1795,5.113,1796,4.137,1797,4.137,1798,4.137,1799,4.137,1800,5.113,1801,5.113,1802,5.113,1803,5.113,1804,5.113,1805,4.524,1806,5.113]],["title/controllers/FilesController.html",[94,1.942,1807,3.62]],["body/controllers/FilesController.html",[0,0.264,3,0.056,4,0.056,5,0.079,9,0.281,12,1.308,14,1.246,19,0.412,21,1.189,22,0.008,23,0.936,24,0.465,25,0.611,28,1.308,35,1.413,37,0.132,39,2.377,40,0.961,45,0.056,46,1.817,88,1.444,92,0.005,93,0.005,94,1.766,96,1.989,161,0.78,166,2.055,168,2.779,176,1.573,178,1.219,179,2.126,182,2.141,190,2.377,197,3.293,206,3.5,208,2.479,209,1.509,210,3.847,212,2.479,213,2.377,214,4.459,216,3.847,217,4.611,218,3.847,219,3.5,220,0.776,230,4.056,231,3.662,232,4.244,235,3.293,236,2.725,290,1.672,349,2.202,448,3.356,608,1.547,616,2.126,1095,4.244,1187,4.648,1807,4.648,1808,4.069,1809,4.069,1810,4.323,1811,4.648,1812,5.084,1813,3.062,1814,4.069,1815,4.069,1816,5.047,1817,4.069,1818,3.601,1819,5.388,1820,6.585,1821,4.069,1822,5.745,1823,4.069,1824,4.069,1825,4.069,1826,4.069,1827,6.407,1828,4.069,1829,4.069,1830,4.069,1831,5.745,1832,4.069,1833,3.601,1834,3.601,1835,4.069,1836,5.745,1837,5.745,1838,2.878,1839,5.745,1840,3.601,1841,4.069,1842,4.069,1843,4.069,1844,4.069,1845,4.069,1846,4.069,1847,4.069,1848,4.069,1849,4.069,1850,4.069,1851,4.069,1852,4.069,1853,4.069,1854,4.069,1855,4.069,1856,4.069,1857,4.069]],["title/classes/FilesMapper.html",[0,0.29,1858,3.62]],["body/classes/FilesMapper.html",[0,0.323,2,0.599,3,0.068,4,0.068,5,0.059,9,0.344,14,1.432,19,0.409,21,1.179,22,0.008,23,0.854,24,0.363,25,0.606,28,1.603,35,1.401,37,0.103,45,0.068,48,1.896,88,1.432,92,0.006,93,0.006,252,5.13,253,4.208,254,4.208,255,4.208,258,3.179,259,4.208,261,4.718,262,1.849,263,3.179,264,3.179,265,5.569,266,3.753,267,5.342,268,4.035,273,3.179,274,3.179,277,4.208,278,4.968,279,4.035,448,2.913,1617,5.842,1618,4.413,1624,4.413,1811,4.035,1816,5.475,1838,3.527,1858,5.342,1859,4.987,1860,8.589,1861,4.987,1862,4.987,1863,6.602,1864,4.987,1865,6.602,1866,4.987,1867,6.602,1868,4.987,1869,6.602,1870,4.987,1871,6.602,1872,4.987,1873,6.602,1874,4.987,1875,6.602,1876,4.987,1877,4.987,1878,4.987,1879,4.987,1880,4.987,1881,4.987,1882,4.987,1883,4.987]],["title/modules/FilesModule.html",[98,1.889,113,3.165]],["body/modules/FilesModule.html",[0,0.379,3,0.08,4,0.08,5,0.069,22,0.008,37,0.134,40,1.382,45,0.08,92,0.007,93,0.007,96,3.577,98,3.37,100,2.954,101,3.056,102,3.285,103,3.285,104,3.285,105,4.32,106,3.285,111,4.934,113,6.474,115,4.109,116,3.285,117,3.285,119,4.458,131,2.954,410,4.733,412,4.733,1092,5.883,1095,5.6,1807,6.46,1840,5.177,1884,5.85,1885,5.85,1886,5.85,1887,5.85,1888,5.85]],["title/injectables/FilesRelationalRepository.html",[156,1.013,1889,3.62]],["body/injectables/FilesRelationalRepository.html",[0,0.332,3,0.07,4,0.07,5,0.08,7,2.587,9,0.353,12,1.646,14,1.458,16,1.504,19,0.464,21,1.339,22,0.008,23,0.971,24,0.412,25,0.688,35,1.427,37,0.129,40,1.21,45,0.07,46,2.288,48,2.154,76,2.163,88,1.627,92,0.006,93,0.006,156,1.521,157,1.899,168,2.79,182,1.768,190,2.39,285,3.121,286,4.431,290,2.761,296,2.676,300,2.851,306,5.075,864,2.877,1810,5.057,1813,5.057,1816,5.408,1838,3.624,1858,4.145,1889,5.438,1890,5.123,1891,5.947,1892,5.123,1893,5.947,1894,5.123,1895,5.123,1896,4.5,1897,4.534,1898,5.123,1899,5.123,1900,5.123,1901,6.721,1902,5.123,1903,5.123,1904,5.123,1905,4.534,1906,5.123]],["title/classes/FilesRepository.html",[0,0.29,1896,2.996]],["body/classes/FilesRepository.html",[0,0.4,2,0.742,3,0.085,4,0.085,5,0.073,9,0.426,14,1.641,19,0.468,21,1.351,22,0.008,23,0.979,24,0.416,25,0.695,35,1.606,37,0.096,45,0.085,92,0.007,93,0.007,182,1.625,190,2.56,290,2.538,313,5.267,314,5.215,1810,5.694,1813,5.694,1816,5.215,1838,4.369,1891,6.696,1893,6.696,1896,5.067,1905,5.466,1907,6.177,1908,6.177,1909,6.177]],["title/injectables/FilesService.html",[156,1.013,1095,2.852]],["body/injectables/FilesService.html",[0,0.154,3,0.033,4,0.033,5,0.107,9,0.164,11,3.336,12,1.227,14,0.828,15,1.59,16,1.121,19,0.398,21,1.148,22,0.008,23,0.985,24,0.399,25,0.712,28,2.172,35,1.54,37,0.116,40,0.561,45,0.033,48,2.347,62,1.387,76,1.612,77,1.679,88,1.191,92,0.003,93,0.003,130,2.773,131,1.199,156,0.865,157,0.88,161,1.053,168,2.66,178,1.387,179,1.24,182,1.692,190,2.398,206,1.446,209,2.822,300,1.821,322,2.435,328,1.679,332,2.145,349,1.285,418,1.679,419,3.345,420,1.679,421,1.679,422,1.679,438,1.786,444,1.921,445,1.921,446,1.921,447,1.921,448,4.238,449,1.786,450,1.786,451,1.786,453,1.786,457,1.921,467,2.558,472,4.305,476,1.786,478,1.921,480,1.921,481,5.834,483,1.921,507,4.838,616,4.224,650,2.602,830,1.679,852,2.327,864,2.145,1095,2.435,1175,2.14,1196,2.42,1224,4.354,1433,1.786,1576,4.241,1577,4.241,1597,2.101,1796,1.921,1797,1.921,1798,1.921,1799,1.921,1810,2.874,1811,3.09,1812,3.38,1813,2.874,1816,1.513,1818,3.38,1819,4.443,1838,1.679,1896,4.526,1910,2.374,1911,4.792,1912,3.819,1913,2.374,1914,2.374,1915,3.819,1916,4.859,1917,3.09,1918,2.374,1919,5.491,1920,5.491,1921,7.447,1922,2.374,1923,8.39,1924,7.255,1925,6.59,1926,2.374,1927,3.38,1928,6.018,1929,5.491,1930,3.38,1931,3.819,1932,2.374,1933,3.819,1934,3.819,1935,2.374,1936,3.606,1937,2.374,1938,2.374,1939,3.819,1940,2.374,1941,2.374,1942,2.374,1943,2.374,1944,2.374,1945,2.374,1946,2.374,1947,2.374,1948,2.374,1949,2.374,1950,2.374,1951,2.374,1952,2.374,1953,2.374,1954,3.819,1955,2.374,1956,2.374,1957,2.374,1958,2.374,1959,2.374,1960,2.374,1961,2.101,1962,2.374,1963,2.101,1964,2.374,1965,3.38,1966,2.101,1967,3.819,1968,2.101,1969,2.101,1970,2.374,1971,2.101,1972,2.101,1973,2.374,1974,1.679,1975,2.374,1976,2.374,1977,2.374,1978,3.38,1979,2.374,1980,2.374,1981,2.374]],["title/controllers/IndexingController.html",[94,1.942,1104,3.62]],["body/controllers/IndexingController.html",[0,0.359,3,0.076,4,0.076,5,0.066,9,0.382,12,1.782,14,1.534,19,0.343,21,0.99,22,0.008,23,0.717,24,0.428,25,0.509,35,1.177,37,0.132,39,3.238,40,1.31,45,0.076,46,2.475,88,1.202,92,0.006,93,0.006,94,2.406,96,2.71,166,2.799,168,2.561,176,1.31,178,1.244,187,4.171,190,2.123,206,3.377,208,3.377,212,3.377,213,3.238,214,4.736,217,4.508,219,4.309,220,1.057,230,3.377,231,3.533,232,3.533,358,3.533,880,3.712,883,6.129,923,3.921,1096,5.508,1104,5.722,1119,4.906,1982,5.544,1983,6.258,1984,4.906,1985,5.544,1986,5.861,1987,5.544,1988,4.906,1989,6.258,1990,4.906,1991,5.544,1992,5.544,1993,5.544]],["title/classes/IndexingEstimateDto.html",[0,0.29,883,3.165]],["body/classes/IndexingEstimateDto.html",[0,0.419,2,0.58,3,0.066,4,0.066,5,0.057,9,0.333,10,1.649,19,0.451,22,0.008,24,0.491,37,0.121,43,4.877,45,0.066,92,0.006,93,0.006,161,0.978,176,1.721,178,1.333,182,1.916,220,0.92,456,2.522,474,2.096,550,5.48,600,2.233,604,2.499,607,1.705,608,1.835,609,2.22,661,2.914,672,2.84,678,4.327,683,4.119,693,3.937,699,3.078,726,2.522,735,4.877,764,5.587,876,6.293,877,3.907,878,5.718,879,5.852,880,3.233,881,3.907,882,5.718,883,4.57,884,3.907,885,3.415,886,4.273,887,4.273,888,4.273,889,4.273,890,4.273,891,5.718,892,5.718,893,5.718,894,5.718,895,4.273,1994,4.828,1995,4.828,1996,4.828,1997,4.828,1998,4.828,1999,4.828]],["title/classes/IndexingEstimateProcessRuleDto.html",[0,0.29,879,3.367]],["body/classes/IndexingEstimateProcessRuleDto.html",[0,0.435,2,0.806,3,0.092,4,0.092,5,0.079,22,0.008,37,0.124,45,0.092,92,0.007,93,0.007,220,1.278,316,3.177,415,2.876,474,3.45,661,3.181,705,5.045,706,3.502,707,4.273,726,3.502,876,5.425,879,5.983,881,5.425,972,5.933,973,3.628,2000,7.95]],["title/injectables/IndexingService.html",[156,1.013,1096,3.165]],["body/injectables/IndexingService.html",[0,0.304,3,0.064,4,0.064,5,0.075,9,0.324,11,2.917,12,2.039,14,1.376,16,1.863,19,0.393,21,1.133,22,0.009,23,0.821,24,0.349,25,0.582,35,1.347,37,0.129,40,1.11,45,0.064,47,3.706,48,2.377,88,1.019,92,0.006,93,0.006,156,1.436,157,1.742,168,2.362,178,0.75,182,1.236,190,2.156,209,1.742,300,2.411,474,2.039,708,3.865,709,5.08,726,2.454,735,4.248,743,2.995,764,3.146,769,3.801,880,3.146,883,6.086,1095,5.276,1096,4.487,1099,5.985,1107,4.157,1125,4.157,1983,5.614,1984,5.614,1986,3.535,1988,4.157,1989,5.614,1990,4.157,2001,4.698,2002,4.698,2003,4.698,2004,4.698,2005,4.157,2006,4.698,2007,4.698,2008,4.157,2009,4.698,2010,3.801,2011,4.698,2012,3.801,2013,4.698,2014,5.614,2015,4.698,2016,4.157,2017,4.157,2018,4.698]],["title/injectables/JiebaKeywordService.html",[156,1.013,1097,3.165]],["body/injectables/JiebaKeywordService.html",[0,0.314,3,0.066,4,0.066,5,0.057,9,0.334,11,3.579,14,1.403,19,0.4,21,1.155,22,0.009,23,0.837,24,0.356,25,0.594,26,2.224,27,2.224,28,1.555,35,1.652,37,0.114,40,1.143,45,0.066,48,2.235,88,1.403,92,0.007,93,0.006,156,1.465,157,1.794,161,1.038,178,0.773,209,2.703,513,3.198,558,3.78,576,6.564,608,1.839,616,3.38,772,4.333,820,3.422,853,4.576,1097,4.576,1196,2.443,2019,7.29,2020,4.838,2021,6.47,2022,6.47,2023,6.47,2024,4.838,2025,6.47,2026,7.29,2027,4.838,2028,7.783,2029,5.726,2030,4.838,2031,4.838,2032,4.838,2033,4.838,2034,4.838,2035,4.838,2036,4.838,2037,4.838,2038,4.838,2039,4.838,2040,4.838,2041,4.838,2042,4.838,2043,4.838,2044,4.838,2045,4.838]],["title/injectables/LLMGeneratorService.html",[156,1.013,1098,2.996]],["body/injectables/LLMGeneratorService.html",[0,0.312,3,0.066,4,0.066,5,0.057,9,0.332,12,1.546,14,1.398,16,1.412,19,0.399,21,1.151,22,0.009,23,0.834,24,0.354,25,0.592,35,1.368,37,0.13,40,1.136,45,0.066,46,2.147,47,2.809,48,1.851,88,1.043,92,0.006,93,0.006,130,3.921,131,2.429,151,6.432,156,1.459,157,1.783,161,1.014,168,2.39,178,0.768,190,1.444,209,2.389,300,1.828,328,3.402,332,3.619,374,3.891,376,4.558,377,4.558,504,4.316,545,5.703,616,3.797,674,4.85,702,5.703,733,5.422,804,4.558,1098,4.316,1781,5.703,1786,3.619,2046,7.269,2047,4.809,2048,4.809,2049,6.445,2050,4.809,2051,5.214,2052,6.445,2053,5.703,2054,4.256,2055,3.891,2056,4.809,2057,4.809,2058,4.809,2059,4.809,2060,4.809,2061,4.809,2062,4.809,2063,4.809,2064,4.256,2065,4.809,2066,4.809,2067,4.809,2068,4.809]],["title/classes/LeekAssistant.html",[0,0.29,188,2.852]],["body/classes/LeekAssistant.html",[0,0.287,2,0.533,3,0.061,4,0.061,5,0.052,9,0.306,10,1.24,19,0.516,22,0.008,23,0.902,24,0.458,25,0.747,26,2.803,27,2.803,28,2.413,37,0.069,45,0.061,92,0.005,93,0.005,161,1.021,176,1.969,178,1.392,182,2.071,188,3.887,220,0.845,318,3.641,600,2.582,604,2.53,661,2.789,662,6.168,663,2.718,664,4.313,665,4.313,666,4.313,667,4.313,672,2.927,674,4.588,676,2.927,679,4.313,778,4.959,1232,5.649,1355,4.668,2069,4.433,2070,6.074,2071,4.934,2072,4.433,2073,4.433,2074,4.433,2075,6.097,2076,6.097,2077,6.097,2078,6.097,2079,6.097,2080,4.433,2081,4.433,2082,4.433,2083,5.396,2084,4.433]],["title/classes/LeekCSVLoader.html",[0,0.29,2085,3.959]],["body/classes/LeekCSVLoader.html",[0,0.398,2,0.739,3,0.084,4,0.084,5,0.073,16,1.804,19,0.38,21,1.097,22,0.008,23,0.795,24,0.415,25,0.564,37,0.096,45,0.084,92,0.007,93,0.007,161,1.066,415,2.729,1175,2.744,2085,6.676,2086,5.438,2087,8.163,2088,4.407,2089,5.203,2090,6.02,2091,7.532,2092,6.146,2093,3.59,2094,6.146,2095,6.146,2096,4.972,2097,3.59]],["title/classes/LeekDataset.html",[0,0.29,904,2.852]],["body/classes/LeekDataset.html",[0,0.33,2,0.414,3,0.047,4,0.047,5,0.041,9,0.237,10,1.035,19,0.518,22,0.008,23,0.784,24,0.475,25,0.792,26,3.847,27,3.283,28,2.151,37,0.111,45,0.047,92,0.005,93,0.005,161,1.011,166,1.738,176,1.977,178,1.379,182,1.594,220,0.656,262,1.276,318,3.163,326,1.453,600,2.568,604,2.295,608,1.308,609,2.34,615,2.149,616,2.659,663,3.016,664,3.6,665,4.284,666,4.284,667,4.284,672,2.609,676,3.096,679,4.284,683,3.86,684,4.284,690,4.077,693,3.69,694,4.056,696,2.59,697,6.616,698,4.9,699,2.194,700,2.973,703,5.359,704,5.359,706,1.798,778,4.639,863,2.194,904,3.244,937,5.374,938,5.821,939,2.434,940,2.434,941,2.194,942,2.434,958,3.046,959,2.785,1232,5.035,1355,4.056,2070,5.414,2071,4.118,2083,4.504,2098,3.442,2099,6.056,2100,3.442,2101,3.442,2102,3.442,2103,5.09,2104,5.09,2105,3.442,2106,3.442,2107,3.442,2108,3.442,2109,3.442,2110,3.442,2111,3.442,2112,3.442,2113,3.046,2114,3.442]],["title/classes/LeekDatasetProcessRule.html",[0,0.29,979,3.165]],["body/classes/LeekDatasetProcessRule.html",[0,0.303,2,0.562,3,0.064,4,0.064,5,0.055,9,0.323,10,1.287,19,0.496,22,0.008,24,0.465,25,0.581,37,0.12,45,0.064,92,0.006,93,0.006,161,0.969,176,1.895,178,1.281,182,1.886,220,0.892,262,1.735,318,3.744,326,1.976,474,3.669,600,2.469,604,2.578,608,1.779,609,2.909,615,1.976,661,2.868,663,1.825,664,4.475,665,4.475,666,4.475,667,4.475,672,2.994,676,2.467,679,4.475,690,3.855,708,4.367,709,5.07,710,4.475,711,4.475,712,4.475,713,4.475,716,4.475,717,4.761,718,5.07,721,4.237,722,5.394,726,2.444,727,4.475,728,3.522,778,3.696,779,4.237,801,4.475,979,4.475,2115,8.268,2116,4.68,2117,4.761,2118,4.68,2119,4.68,2120,4.68,2121,4.68,2122,4.68,2123,4.68]],["title/classes/LeekDocument.html",[0,0.29,1168,2.996]],["body/classes/LeekDocument.html",[0,0.159,2,0.294,3,0.034,4,0.034,5,0.058,9,0.169,10,0.796,19,0.537,22,0.008,23,0.633,24,0.477,25,0.82,26,1.126,27,1.126,37,0.076,45,0.034,55,2.769,92,0.003,93,0.003,138,2.496,161,1.017,176,2.052,178,1.387,182,2.02,220,0.467,262,0.908,318,2.555,326,1.033,513,2.921,600,2.646,604,2.356,608,0.931,609,2.997,615,2.065,653,2.769,661,1.957,663,3.208,672,2.772,676,3.238,683,3.118,690,3.405,693,2.98,699,1.56,710,2.769,711,2.769,712,2.769,713,2.769,721,3.743,727,2.769,732,2.98,733,3.276,736,2.621,746,2.98,747,1.731,748,2.946,758,3.958,759,4.329,760,4.329,761,4.329,762,3.958,763,4.329,764,3.276,765,3.681,766,4.329,767,3.958,768,2.747,769,3.958,770,4.329,771,3.276,772,3.276,773,3.46,774,2.919,775,2.287,778,4.153,779,4.761,780,3.464,783,3.464,786,4.206,792,3.464,793,3.464,794,3.464,795,3.464,801,4.61,804,2.769,820,2.769,829,3.46,830,2.769,831,3.167,832,1.981,834,3.464,835,3.464,836,3.464,837,3.464,838,3.464,839,3.464,840,3.464,841,3.464,842,3.464,843,4.522,844,3.464,845,3.464,846,2.769,847,3.167,848,3.464,849,3.464,1168,2.621,1355,3.276,2117,2.946,2124,2.448,2125,2.448,2126,2.448,2127,2.448,2128,2.448,2129,2.448,2130,2.448,2131,2.448,2132,2.448,2133,3.915,2134,2.448,2135,2.448,2136,2.448,2137,2.448,2138,2.448,2139,2.448,2140,2.448,2141,2.448,2142,2.448,2143,3.915,2144,3.915,2145,3.915,2146,3.915,2147,3.915,2148,2.448,2149,2.448,2150,2.448,2151,2.448,2152,2.448,2153,2.448,2154,2.448]],["title/classes/LeekDocxLoader.html",[0,0.29,2155,3.959]],["body/classes/LeekDocxLoader.html",[0,0.43,2,0.797,3,0.091,4,0.091,5,0.078,16,1.947,19,0.41,21,1.184,22,0.008,23,0.858,24,0.365,25,0.609,37,0.103,45,0.091,92,0.007,93,0.007,161,0.988,415,2.857,2088,4.614,2093,3.874,2097,3.874,2155,6.99,2156,6.631,2157,8.436,2158,6.631,2159,6.631]],["title/classes/LeekEPubLoader.html",[0,0.29,2160,3.959]],["body/classes/LeekEPubLoader.html",[0,0.411,2,0.762,3,0.087,4,0.087,5,0.075,16,1.861,19,0.392,21,1.131,22,0.008,23,0.82,24,0.423,25,0.582,37,0.099,45,0.087,92,0.007,93,0.007,161,0.969,415,2.78,615,2.675,774,3.31,1175,2.83,2088,4.49,2090,6.084,2093,3.702,2097,3.702,2160,6.802,2161,5.608,2162,8.274,2163,7.612,2164,6.338,2165,6.338,2166,6.338]],["title/classes/LeekEmbedding.html",[0,0.29,1612,3.165]],["body/classes/LeekEmbedding.html",[0,0.319,2,0.592,3,0.068,4,0.068,5,0.058,9,0.34,10,1.332,19,0.53,22,0.009,24,0.471,25,0.798,37,0.077,45,0.068,92,0.006,93,0.006,161,1.05,176,2.023,178,1.389,182,1.936,220,0.939,318,3.842,513,2.691,600,1.881,604,2.829,650,2.334,672,3.339,700,4.297,778,3.826,779,4.385,801,4.632,863,4.689,864,4.131,865,5.536,866,5.536,1612,4.632,2117,4.928,2167,4.926,2168,4.926,2169,4.926,2170,4.926,2171,4.926,2172,4.926,2173,4.926,2174,4.926]],["title/classes/LeekExcelLoader.html",[0,0.29,2175,3.959]],["body/classes/LeekExcelLoader.html",[0,0.273,2,0.506,3,0.058,4,0.081,5,0.08,9,0.468,10,1.196,11,3.68,14,1.276,16,1.727,19,0.495,21,1.05,22,0.008,23,0.762,24,0.452,25,0.54,28,2.18,35,1.249,37,0.106,45,0.058,48,2.36,88,1.471,92,0.005,93,0.005,161,1.011,168,2.633,190,2.205,300,1.6,415,2.128,416,5.488,426,5.104,427,5.941,438,5.526,459,3.168,472,3.94,511,4.427,615,2.863,730,2.554,1196,2.971,1224,4.124,1225,4.427,1226,3.168,1780,5.207,1917,4.761,1936,4.427,1963,5.207,1965,7.537,1966,3.726,1968,5.207,1969,3.726,1971,3.726,1972,3.726,1974,2.978,2096,6.477,2175,5.207,2176,4.21,2177,6.782,2178,5.207,2179,4.21,2180,5.884,2181,4.21,2182,4.21,2183,4.21,2184,5.884,2185,6.782,2186,4.21,2187,4.21,2188,3.407,2189,5.884,2190,4.21,2191,4.21,2192,4.21,2193,4.21,2194,4.21,2195,4.21,2196,4.21,2197,4.21,2198,4.21,2199,4.21,2200,4.21,2201,4.21,2202,4.21,2203,4.21,2204,4.21,2205,4.21,2206,4.21,2207,4.21,2208,4.21]],["title/classes/LeekFile.html",[0,0.29,1816,2.852]],["body/classes/LeekFile.html",[0,0.339,2,0.429,3,0.049,4,0.049,5,0.042,9,0.247,10,1.064,19,0.528,22,0.008,23,0.801,24,0.469,25,0.783,26,3.133,27,2.406,28,1.681,37,0.082,45,0.049,92,0.005,93,0.005,161,1.032,176,2.016,178,1.398,182,1.629,220,0.681,318,3.233,419,3.771,448,4.236,481,4.658,513,2.15,600,2.615,604,2.516,644,1.934,663,2.954,664,3.701,665,3.701,666,3.701,667,3.701,672,2.954,676,3.052,679,3.701,736,4.563,774,2.733,775,2.087,778,4.426,864,3.476,1232,5.127,1816,3.335,1925,5.478,1930,4.63,1961,5.478,2070,5.513,2071,5.008,2209,3.573,2210,6.19,2211,5.478,2212,6.19,2213,3.573,2214,3.573,2215,3.573,2216,3.573,2217,3.573,2218,3.573,2219,5.232,2220,5.232,2221,5.232,2222,5.232,2223,5.232,2224,5.232,2225,5.232,2226,5.232,2227,3.573,2228,3.573,2229,5.232,2230,3.573,2231,3.573,2232,5.232,2233,3.573,2234,3.573,2235,3.573,2236,3.573,2237,3.573,2238,3.573,2239,3.573,2240,7.577,2241,3.573,2242,3.573]],["title/classes/LeekJSONLinesLoader.html",[0,0.29,2243,3.62]],["body/classes/LeekJSONLinesLoader.html",[0,0.479,2,0.713,3,0.081,4,0.081,5,0.07,16,1.743,19,0.367,21,1.06,22,0.008,23,0.768,24,0.442,25,0.545,37,0.093,45,0.115,92,0.007,93,0.007,161,1.048,415,2.907,2088,4.695,2089,5.36,2093,3.467,2097,4.313,2243,5.974,2244,4.803,2245,7.112,2246,7.441,2247,6.804,2248,5.936,2249,6.534,2250,5.253,2251,5.974,2252,4.803,2253,6.534]],["title/classes/LeekJSONLoader.html",[0,0.29,2252,3.62]],["body/classes/LeekJSONLoader.html",[0,0.478,2,0.712,3,0.081,4,0.081,5,0.07,16,1.739,19,0.366,21,1.057,22,0.008,23,0.766,24,0.441,25,0.544,37,0.092,45,0.115,92,0.007,93,0.007,161,1.047,415,2.904,1175,2.644,2088,4.69,2089,5.355,2093,3.459,2097,4.307,2243,4.791,2244,4.791,2245,6.524,2246,6.524,2247,5.965,2249,7.104,2250,5.24,2251,6.798,2252,5.965,2253,7.435,2254,5.921]],["title/classes/LeekPDFLoader.html",[0,0.29,2255,3.959]],["body/classes/LeekPDFLoader.html",[0,0.399,2,0.74,3,0.084,4,0.084,5,0.073,16,1.809,19,0.381,21,1.1,22,0.008,23,0.797,24,0.415,25,0.566,37,0.096,45,0.084,92,0.007,93,0.007,161,0.998,415,2.733,615,3.189,774,3.218,1175,2.751,2088,4.414,2089,5.209,2090,6.026,2093,3.599,2097,3.599,2255,6.686,2256,5.452,2257,8.172,2258,7.539,2259,6.161,2260,6.161,2261,6.161,2262,6.161,2263,6.161]],["title/classes/LeekPPTXLoader.html",[0,0.29,2264,3.959]],["body/classes/LeekPPTXLoader.html",[0,0.423,2,0.784,3,0.089,4,0.089,5,0.077,16,1.916,19,0.404,21,1.165,22,0.008,23,0.844,24,0.359,25,0.599,37,0.102,45,0.089,92,0.007,93,0.007,161,0.982,415,2.829,2088,4.57,2089,5.34,2093,3.811,2097,3.811,2264,6.922,2265,6.525,2266,8.378,2267,6.525,2268,6.525]],["title/classes/LeekSRTLoader.html",[0,0.29,2269,3.959]],["body/classes/LeekSRTLoader.html",[0,0.423,2,0.784,3,0.089,4,0.089,5,0.077,16,1.916,19,0.404,21,1.165,22,0.008,23,0.844,24,0.359,25,0.599,37,0.102,45,0.089,92,0.007,93,0.007,161,0.982,415,2.829,2088,4.57,2089,5.34,2093,3.811,2097,3.811,2269,6.922,2270,6.525,2271,8.378,2272,6.525,2273,6.525]],["title/classes/LeekSegment.html",[0,0.29,1381,2.852]],["body/classes/LeekSegment.html",[0,0.194,2,0.36,3,0.041,4,0.041,5,0.035,9,0.206,10,0.932,19,0.537,22,0.008,24,0.477,25,0.796,37,0.072,45,0.041,62,3.927,87,4.055,92,0.004,93,0.004,138,2.046,161,1.016,176,2.05,178,1.386,182,1.769,220,0.57,262,1.11,318,2.908,326,1.264,513,3.128,600,2.638,604,2.559,615,1.264,650,2.638,661,2.228,663,3.043,672,3.043,676,3.105,690,2.791,710,3.241,711,3.241,712,3.241,713,3.241,721,3.068,727,3.241,765,4.189,768,3.126,771,3.728,772,3.728,773,3.937,774,2.393,778,4.142,779,4.749,801,5.015,820,3.241,843,5.047,852,3.391,853,3.937,860,4.055,880,3.068,1139,3.728,1355,3.728,1381,2.92,1458,4.055,1502,4.189,1531,4.926,1591,4.926,1974,3.241,2117,3.448,2274,2.993,2275,5.567,2276,2.993,2277,2.993,2278,2.993,2279,2.993,2280,2.993,2281,4.582,2282,4.582,2283,4.582,2284,4.582,2285,4.582,2286,2.993,2287,2.993,2288,4.582,2289,2.993,2290,2.993,2291,4.582,2292,4.582,2293,4.582,2294,4.582,2295,4.582,2296,2.993,2297,4.582,2298,2.993,2299,4.582,2300,4.582,2301,4.582,2302,4.582,2303,4.582,2304,2.993,2305,2.993,2306,4.582,2307,2.993,2308,2.993,2309,4.582,2310,2.993,2311,2.993,2312,4.582,2313,2.993]],["title/classes/LeekTextLoader.html",[0,0.29,2314,3.959]],["body/classes/LeekTextLoader.html",[0,0.423,2,0.784,3,0.089,4,0.089,5,0.077,16,1.916,19,0.404,21,1.165,22,0.008,23,0.844,24,0.359,25,0.599,37,0.102,45,0.089,92,0.007,93,0.007,161,0.982,415,2.829,2088,4.57,2089,5.34,2093,3.811,2097,3.811,2314,6.922,2315,6.525,2316,8.378,2317,6.525,2318,6.525]],["title/classes/LeekUnstructuredLoader.html",[0,0.29,2319,3.959]],["body/classes/LeekUnstructuredLoader.html",[0,0.403,2,0.748,3,0.085,4,0.085,5,0.074,16,2.232,19,0.385,21,1.111,22,0.008,23,0.806,24,0.342,25,0.571,37,0.097,45,0.085,92,0.007,93,0.007,161,1.045,415,2.75,1175,2.779,2319,6.728,2320,6.224,2321,8.209,2322,6.224,2323,8.549,2324,8.549,2325,8.549,2326,6.224,2327,7.603,2328,6.224,2329,6.224]],["title/injectables/LoggingInterceptor.html",[156,1.013,2330,3.959]],["body/injectables/LoggingInterceptor.html",[0,0.358,3,0.076,4,0.076,5,0.065,7,2.787,9,0.381,13,4.153,14,1.529,19,0.341,21,0.985,22,0.008,23,0.714,24,0.303,25,0.507,35,1.171,37,0.128,40,1.304,45,0.076,48,2.352,88,1.529,92,0.006,93,0.006,156,1.596,157,2.046,343,5.497,344,3.695,364,3.695,635,5.204,1763,5.706,1764,5.706,1765,6.626,1766,6.626,1768,5.706,1770,4.465,1771,6.24,2330,6.24,2331,5.518,2332,5.518,2333,6.24,2334,7.772,2335,7.052,2336,8.19,2337,8.19,2338,5.518,2339,7.052,2340,7.052,2341,5.518,2342,5.518]],["title/interfaces/Pagination$.html",[456,2.337,2343,3.62]],["body/interfaces/Pagination$.html",[3,0.071,4,0.071,5,0.061,9,0.356,10,1.374,22,0.008,24,0.439,35,1.097,37,0.081,45,0.071,48,1.484,53,5.468,88,1.121,92,0.006,93,0.006,209,3.073,290,3.494,456,2.699,502,3.46,513,3.735,550,5.085,584,4.78,884,4.181,885,5.327,1072,3.148,1183,4.78,1185,4.181,1195,5.522,1196,3.413,1197,5.522,1198,5.695,1224,2.902,2343,6.707,2344,5.167,2345,5.167,2346,7.988,2347,5.167,2348,5.167,2349,5.167,2350,5.167,2351,6.758,2352,4.572,2353,5.085,2354,5.167,2355,5.167,2356,5.468,2357,4.572,2358,5.167,2359,4.181,2360,5.167,2361,5.98,2362,4.572,2363,5.167,2364,3.654,2365,5.98,2366,5.167,2367,4.572]],["title/classes/PaginationDto.html",[0,0.29,2368,3.367]],["body/classes/PaginationDto.html",[0,0.506,2,0.671,3,0.077,4,0.077,5,0.066,9,0.385,10,1.444,19,0.44,22,0.008,24,0.496,25,0.755,37,0.122,45,0.077,92,0.006,93,0.006,176,1.678,178,1.135,220,1.064,513,3.776,558,4.149,600,2.362,607,1.971,644,3.02,663,2.77,676,3.046,677,3.702,885,5.024,1195,4.98,1196,3.587,1197,4.98,2353,5.345,2356,6.654,2359,5.747,2368,5.345,2369,5.582,2370,7.103,2371,5.582,2372,5.582,2373,7.813]],["title/classes/PaginationResponseDto.html",[0,0.29,1183,3.165]],["body/classes/PaginationResponseDto.html",[0,0.41,2,0.562,3,0.064,4,0.064,5,0.055,9,0.323,10,1.287,19,0.523,22,0.008,23,0.606,24,0.489,27,2.152,37,0.099,40,1.106,45,0.087,88,1.015,92,0.006,93,0.006,138,2.09,178,1.35,220,0.892,290,3.296,313,2.734,402,3.522,513,3.757,558,3.696,584,5.07,600,2.374,604,2.763,635,3.134,774,4.319,775,3.696,885,4.475,1183,4.475,1195,4.895,1196,2.363,1197,4.895,1754,4.141,1757,4.141,1760,4.141,2343,5.12,2353,4.761,2356,6.491,2359,3.787,2361,7.316,2362,4.141,2364,3.31,2365,6.795,2367,6.795,2374,8.597,2375,7.679,2376,4.68,2377,4.68,2378,4.68,2379,4.68,2380,4.68,2381,4.68,2382,4.68,2383,5.12,2384,6.327,2385,4.68,2386,4.68,2387,4.68,2388,4.68]],["title/classes/PreProcessingRuleDto.html",[0,0.29,2389,3.62]],["body/classes/PreProcessingRuleDto.html",[0,0.476,2,0.706,3,0.081,4,0.081,5,0.07,9,0.406,10,1.492,19,0.454,22,0.008,24,0.403,37,0.115,42,3.098,45,0.081,92,0.007,93,0.007,138,2.625,161,0.86,176,1.734,178,1.172,182,2.105,220,1.12,335,4.423,600,2.406,604,2.571,607,2.075,609,3.374,615,2.482,672,2.861,707,3.747,768,4.494,774,3.833,810,4.756,826,4.914,2389,5.938,2390,8.002,2391,6.474,2392,5.878,2393,5.878,2394,5.878,2395,6.494,2396,5.202]],["title/modules/PrismaModule.html",[98,1.889,1091,2.726]],["body/modules/PrismaModule.html",[0,0.407,3,0.086,4,0.086,5,0.074,22,0.008,37,0.119,40,1.482,45,0.086,92,0.007,93,0.007,98,3.477,100,3.167,101,3.276,102,3.523,103,3.523,104,3.523,105,4.457,106,4.626,115,4.29,116,3.523,117,3.523,286,4.874,1091,5.511,2397,5.551,2398,5.551,2399,5.551,2400,6.272,2401,5.551]],["title/injectables/PrismaService.html",[156,1.013,286,2.337]],["body/injectables/PrismaService.html",[0,0.351,3,0.074,4,0.074,5,0.064,7,2.737,9,0.374,12,1.742,13,4.079,14,1.512,15,3.63,16,1.591,19,0.503,21,0.968,22,0.008,23,0.701,24,0.298,25,0.498,35,1.48,37,0.12,40,1.281,45,0.074,46,2.42,62,3.166,88,1.175,92,0.006,93,0.006,121,3.834,122,5.45,156,1.578,157,2.009,168,2.833,262,2.009,286,4.249,300,2.65,326,3.253,415,2.521,426,6.482,459,4.079,467,3.63,1351,5.799,2402,5.42,2403,8.614,2404,8.614,2405,6.971,2406,5.42,2407,7.199,2408,5.42,2409,5.42,2410,5.42,2411,5.42,2412,5.42,2413,5.42,2414,5.42,2415,5.42,2416,5.42]],["title/injectables/ProcessDocumentService.html",[156,1.013,1099,3.165]],["body/injectables/ProcessDocumentService.html",[0,0.138,3,0.029,4,0.029,5,0.025,9,0.147,11,2.618,12,1.126,14,0.76,16,1.029,19,0.4,21,1.154,22,0.009,23,0.837,24,0.355,25,0.593,26,1.611,27,1.611,28,1.83,35,1.597,37,0.109,40,0.504,45,0.029,48,2.199,88,1.464,92,0.004,93,0.003,130,2.604,131,1.078,156,0.793,157,0.791,161,1.001,168,2.593,178,0.977,190,2.368,209,2.839,300,2.457,328,1.51,332,1.967,349,1.155,362,4.817,365,1.727,391,1.727,413,2.478,418,1.51,419,4.49,420,1.51,421,1.51,422,1.51,448,4.083,453,1.606,469,1.606,471,1.606,608,0.811,616,1.83,649,1.727,708,1.3,709,2.478,718,1.51,726,1.115,728,1.606,730,3.726,732,3.728,733,5.129,735,3.813,743,4.455,746,1.3,768,1.967,804,6.011,852,2.714,864,2.896,1098,4.329,1099,2.478,1123,1.727,1175,1.564,1224,2.896,1225,4.605,1226,1.606,1433,1.606,1719,3.605,1745,3.1,1786,1.606,1789,1.889,1796,1.727,1797,1.727,1798,1.727,1799,1.727,1805,3.1,1936,1.606,2005,1.889,2008,3.1,2010,5.655,2012,5.655,2016,1.889,2051,1.727,2188,1.727,2395,1.889,2396,1.889,2417,6.749,2418,2.134,2419,4.456,2420,3.503,2421,4.456,2422,3.503,2423,4.456,2424,4.456,2425,2.134,2426,2.134,2427,2.134,2428,3.503,2429,2.134,2430,2.134,2431,2.134,2432,5.157,2433,3.503,2434,2.134,2435,2.134,2436,2.134,2437,2.134,2438,2.134,2439,2.134,2440,1.889,2441,3.503,2442,3.503,2443,2.134,2444,2.134,2445,2.134,2446,3.503,2447,6.119,2448,3.503,2449,2.134,2450,2.134,2451,2.134,2452,3.503,2453,3.503,2454,3.503,2455,2.134,2456,2.134,2457,2.134,2458,3.503,2459,2.134,2460,2.134,2461,2.134,2462,2.134,2463,2.134,2464,2.134,2465,3.503,2466,3.503,2467,4.456,2468,3.503,2469,2.134,2470,2.134,2471,2.134,2472,3.503,2473,2.134,2474,2.134,2475,2.134,2476,2.134,2477,3.503,2478,2.134,2479,3.503,2480,3.503,2481,2.134,2482,2.134,2483,2.134,2484,1.889,2485,2.134,2486,2.134,2487,2.134,2488,2.134,2489,2.134,2490,2.134,2491,2.134,2492,3.503,2493,3.503,2494,2.134,2495,2.134,2496,2.134,2497,2.134,2498,2.134,2499,2.134,2500,2.134,2501,2.134,2502,2.134,2503,2.134,2504,2.134,2505,2.134,2506,2.134,2507,2.134,2508,2.134]],["title/classes/ProcessRuleDto.html",[0,0.29,743,2.852]],["body/classes/ProcessRuleDto.html",[0,0.481,2,0.602,3,0.069,4,0.069,5,0.059,9,0.345,10,1.346,19,0.459,22,0.008,24,0.49,25,0.724,37,0.132,42,2.795,45,0.069,92,0.006,93,0.006,138,2.236,161,0.776,176,1.752,178,1.185,220,0.954,600,1.901,604,2.127,607,1.768,608,1.903,609,3.044,622,4.982,641,4.431,644,2.71,645,4.966,649,4.051,663,2.581,672,1.952,676,2.892,677,3.514,707,3.192,708,4.518,716,4.682,717,4.982,718,5.245,719,4.431,726,3.458,728,3.768,743,4.22,2010,6.001,2012,6.385,2389,6.639,2391,4.051,2509,7.891,2510,5.007,2511,5.007,2512,5.007,2513,6.639,2514,5.007,2515,5.007,2516,5.007]],["title/classes/QueryDocumentDto.html",[0,0.29,1171,3.165]],["body/classes/QueryDocumentDto.html",[0,0.362,2,0.469,3,0.054,4,0.054,5,0.046,9,0.269,10,1.135,19,0.509,22,0.008,23,0.722,24,0.467,25,0.82,26,2.566,27,2.566,37,0.111,42,3.395,45,0.054,92,0.005,93,0.005,138,2.907,161,1.046,176,1.943,178,1.314,220,0.744,360,3.557,415,2.018,600,2.564,607,1.379,608,1.485,609,3.592,615,2.748,663,3.206,676,3.264,677,3.966,683,4.15,685,3.457,693,3.399,699,2.49,732,3.966,733,4.359,736,2.616,737,3.16,739,3.16,746,3.399,747,2.763,748,2.939,757,3.16,758,5.267,762,5.267,767,5.267,768,3.656,774,3.71,775,3.803,804,3.947,808,3.457,826,4.359,829,3.947,832,3.16,846,2.763,973,2.114,1072,2.38,1171,3.947,1327,4.899,2368,2.939,2517,7.407,2518,4.938,2519,3.457,2520,3.906,2521,3.906,2522,3.906,2523,3.906,2524,3.906,2525,3.906,2526,3.906,2527,3.906,2528,3.906,2529,4.515,2530,4.938,2531,4.938,2532,4.515,2533,3.457,2534,3.906]],["title/classes/QuerySegmentDto.html",[0,0.29,1396,2.996]],["body/classes/QuerySegmentDto.html",[0,0.492,2,0.63,3,0.072,4,0.072,5,0.062,9,0.362,10,1.388,19,0.422,22,0.008,23,0.883,24,0.375,25,0.737,26,2.411,27,3.694,37,0.125,42,2.881,45,0.072,88,1.48,92,0.006,93,0.006,138,3.587,161,0.976,176,1.612,178,1.09,220,1,360,4.35,415,2.468,458,3.947,600,2.307,607,1.852,644,2.838,663,2.661,676,2.958,677,3.595,768,4.26,774,3.565,826,5.08,846,3.71,851,4.244,973,2.838,1072,3.195,1327,5.708,1396,4.57,2368,3.947,2517,6.713,2518,6.039,2529,5.522,2530,6.039,2531,6.039,2532,5.522,2533,4.641,2535,5.245,2536,5.245,2537,5.245,2538,6.824,2539,5.245]],["title/modules/RelationaLeekFilesPersistenceModule.html",[98,1.889,1092,2.996]],["body/modules/RelationaLeekFilesPersistenceModule.html",[0,0.387,3,0.082,4,0.082,5,0.071,22,0.008,37,0.131,40,1.409,45,0.082,92,0.007,93,0.007,98,3.4,100,3.012,101,3.116,102,3.35,103,3.35,104,3.35,105,4.007,106,4.524,115,4.159,116,3.35,117,3.35,119,4.512,296,3.116,538,4.488,1091,5.378,1092,5.994,1889,5.992,1896,6.057,1897,5.278,2540,5.278,2541,5.965,2542,5.278,2543,5.965,2544,4.826,2545,5.965,2546,4.826]],["title/modules/RelationalAssistantPersistenceModule.html",[98,1.889,406,3.165]],["body/modules/RelationalAssistantPersistenceModule.html",[0,0.375,3,0.079,4,0.079,5,0.068,22,0.008,37,0.134,40,1.366,45,0.079,92,0.006,93,0.006,98,3.352,100,2.919,101,3.019,102,3.246,103,3.246,104,3.246,105,3.93,106,4.46,111,4.919,115,4.079,116,3.246,117,3.246,119,4.424,131,2.919,282,5.876,296,3.019,297,6.021,298,5.115,406,6.415,538,4.35,1091,5.336,2544,4.677,2546,4.677,2547,5.115,2548,5.781,2549,5.115,2550,5.781,2551,5.781]],["title/modules/RelationalDatasetsPersistenceModule.html",[98,1.889,407,2.996]],["body/modules/RelationalDatasetsPersistenceModule.html",[0,0.3,3,0.064,4,0.064,5,0.055,22,0.008,37,0.14,40,1.095,45,0.064,92,0.006,93,0.006,98,3.011,100,2.341,101,2.421,102,2.603,103,2.603,104,2.603,105,3.402,106,4.006,111,4.63,115,3.531,116,2.603,117,2.603,119,3.83,131,2.341,296,2.421,329,5.226,407,6.026,474,2.728,538,6.017,706,2.421,730,2.012,986,5.087,1008,5.745,1009,5.087,1030,5.087,1039,4.102,1062,5.468,1063,5.226,1064,5.226,1076,4.446,1091,5.023,1291,5.087,1321,4.102,1464,5.087,1627,5.087,1662,4.102,2544,3.75,2546,6.469,2552,4.102,2553,4.102,2554,4.635,2555,4.635,2556,4.635,2557,4.635,2558,4.635,2559,4.635,2560,4.635]],["title/classes/ResponseIndexingEstimateDto.html",[0,0.29,1986,3.367]],["body/classes/ResponseIndexingEstimateDto.html",[0,0.396,2,0.735,3,0.084,4,0.084,5,0.072,9,0.422,10,1.529,19,0.465,22,0.008,24,0.413,37,0.095,45,0.084,92,0.007,93,0.007,161,0.881,176,1.777,178,1.201,220,1.165,513,3.09,600,2.44,604,2.617,615,2.581,672,2.932,830,5.319,877,4.947,880,5.454,1974,5.319,1986,5.659,2014,7.207,2017,7.207,2561,8.144,2562,6.115,2563,6.115]],["title/controllers/RetrievalController.html",[94,1.942,1105,3.62]],["body/controllers/RetrievalController.html",[0,0.275,3,0.058,4,0.058,5,0.05,9,0.293,12,1.365,14,1.284,19,0.366,21,1.057,22,0.009,23,1.003,24,0.405,25,0.543,28,2.19,35,1.257,37,0.125,39,2.481,40,1.003,45,0.058,46,1.896,88,1.284,92,0.005,93,0.005,94,1.843,96,2.076,161,1.013,166,2.145,168,2.241,175,5.626,176,1.399,178,1.395,179,4.049,180,4.79,190,1.777,206,4.151,208,2.587,209,1.574,210,4.936,212,2.587,213,2.481,216,3.964,217,4.698,218,4.936,219,3.606,220,0.809,230,4.151,232,4.343,236,4.563,330,4.343,358,2.707,661,2.949,913,3.436,923,3.004,1105,4.79,1126,3.758,1141,3.436,1142,6.271,1147,3.436,1173,3.758,1175,1.896,1194,4.79,1222,4.454,1639,5.127,2564,4.247,2565,6.859,2566,3.758,2567,6.523,2568,4.247,2569,4.247,2570,3.758,2571,6.322,2572,4.247,2573,4.247,2574,3.758,2575,3.758,2576,3.758,2577,3.758,2578,4.247,2579,4.247,2580,4.247,2581,4.247,2582,4.247,2583,4.247,2584,4.247]],["title/classes/RetrievalModelDto.html",[0,0.29,694,2.996]],["body/classes/RetrievalModelDto.html",[0,0.462,2,0.674,3,0.077,4,0.077,5,0.066,9,0.387,10,1.449,19,0.484,22,0.008,24,0.43,25,0.654,37,0.111,45,0.077,92,0.006,93,0.006,176,1.85,178,1.251,220,1.069,513,3.385,600,2.496,607,1.98,663,3.053,676,3.212,677,3.904,694,4.771,701,5.892,774,3.721,775,3.276,826,4.771,828,6.929,964,6.335,965,5.538,966,4.537,967,6.335,2519,4.962,2585,8.238,2586,5.607,2587,5.607,2588,5.607,2589,5.607,2590,5.607,2591,5.607]],["title/injectables/RetrievalService.html",[156,1.013,330,2.852]],["body/injectables/RetrievalService.html",[0,0.264,3,0.035,4,0.035,5,0.03,9,0.178,11,2.644,12,1.848,14,0.884,16,1.197,19,0.313,21,0.903,22,0.009,23,0.655,24,0.278,25,0.612,26,1.874,28,1.625,35,1.415,37,0.131,40,0.608,44,2.083,45,0.035,47,2.381,48,2.364,53,3.297,73,1.938,85,3.806,88,1.359,92,0.004,93,0.006,130,2.904,131,1.3,138,1.15,156,0.922,157,0.955,161,0.912,166,1.3,168,2.296,175,4.847,178,0.411,182,1.331,190,1.518,209,1.511,290,2.078,300,2.653,316,1.22,325,1.569,328,1.821,329,4.253,330,2.598,332,2.289,343,3.577,344,1.724,357,2.083,360,4.248,361,2.279,362,5.215,364,3.387,365,2.083,373,2.279,374,3.297,376,3.577,377,1.821,378,2.083,381,2.279,384,2.083,387,2.279,388,2.279,389,2.279,390,4.476,391,3.297,395,2.279,396,2.279,397,2.279,398,2.279,400,2.279,401,2.279,402,1.938,474,1.769,489,2.083,504,1.724,513,1.058,608,0.979,615,1.087,650,2.397,661,2.507,674,1.938,684,3.577,694,2.729,695,4.653,696,1.938,700,3.359,706,3.481,730,3.142,732,2.483,746,1.569,747,1.821,768,1.446,786,1.938,852,2.483,939,1.821,940,1.821,941,4.248,942,1.821,964,3.297,965,2.882,967,4.092,1063,4.253,1064,4.253,1074,2.279,1075,2.083,1076,1.821,1078,2.083,1175,1.15,1198,1.724,1222,3.806,1224,2.84,1225,1.938,1416,2.083,1494,2.083,1541,3.387,1596,2.279,1639,3.806,1670,3.606,1704,3.067,1786,1.938,1916,2.279,1927,3.606,1978,2.279,2053,3.606,2054,2.279,2055,2.083,2113,2.279,2188,2.083,2352,3.606,2383,2.083,2391,2.083,2529,5.857,2565,5.545,2566,3.606,2567,5.545,2570,2.279,2571,5.744,2574,2.279,2575,2.279,2576,2.279,2577,2.279,2592,2.575,2593,2.575,2594,2.575,2595,4.075,2596,4.075,2597,4.075,2598,2.575,2599,4.075,2600,6.664,2601,5.058,2602,5.751,2603,4.075,2604,4.075,2605,2.575,2606,4.075,2607,2.575,2608,2.575,2609,5.058,2610,2.575,2611,2.575,2612,2.575,2613,2.575,2614,2.575,2615,2.575,2616,2.575,2617,4.075,2618,2.575,2619,2.575,2620,2.575,2621,2.575,2622,4.075,2623,2.575,2624,5.058,2625,4.075,2626,2.575,2627,2.575,2628,2.575,2629,2.575,2630,2.575,2631,2.575,2632,2.575,2633,2.575,2634,2.575,2635,2.575,2636,2.575,2637,2.575,2638,2.575,2639,2.575,2640,2.575,2641,2.575,2642,2.575,2643,2.575,2644,5.058,2645,2.575,2646,5.058,2647,2.575,2648,2.575,2649,2.575,2650,2.575,2651,2.279,2652,2.575,2653,2.575,2654,2.575,2655,2.575,2656,4.075,2657,2.575]],["title/classes/SegmentationRuleDto.html",[0,0.29,2513,3.62]],["body/classes/SegmentationRuleDto.html",[0,0.452,2,0.653,3,0.074,4,0.074,5,0.064,9,0.375,10,1.42,19,0.477,22,0.008,24,0.424,25,0.791,37,0.109,42,2.947,45,0.074,92,0.006,93,0.006,161,0.818,176,1.823,178,1.232,220,1.035,367,6.178,513,3.345,600,2.475,607,1.918,663,3.008,670,4.395,676,3.174,677,3.858,707,3.463,820,5.758,2064,6.826,2096,6.242,2484,6.826,2513,5.648,2658,8.142,2659,7.714,2660,5.432,2661,5.432,2662,7.714,2663,5.432,2664,5.432,2665,5.432,2666,5.432]],["title/classes/SimilaritySearchDto.html",[0,0.29,2571,3.367]],["body/classes/SimilaritySearchDto.html",[0,0.513,2,0.69,3,0.079,4,0.079,5,0.068,9,0.396,10,1.47,19,0.447,22,0.008,24,0.481,25,0.664,37,0.13,42,3.341,43,4.841,45,0.079,92,0.006,93,0.006,161,0.847,176,1.708,178,1.155,220,1.094,360,5.045,600,2.076,604,2.544,607,2.026,644,3.106,645,4.841,672,2.819,677,3.426,684,5.598,694,5.735,695,4.644,696,4.319,2571,5.44,2667,7.915,2668,5.74,2669,5.74,2670,5.74,2671,5.74]],["title/injectables/TimeoutInterceptor.html",[156,1.013,2672,3.959]],["body/injectables/TimeoutInterceptor.html",[0,0.4,3,0.085,4,0.085,5,0.073,7,3.119,9,0.426,14,1.641,19,0.382,21,1.103,22,0.008,23,0.799,24,0.34,25,0.567,35,1.311,37,0.128,40,1.459,45,0.085,88,1.34,92,0.007,93,0.007,156,1.713,157,2.29,343,5.786,344,4.136,364,4.136,635,5.478,1763,6.123,1764,6.123,1765,6.899,1766,6.899,1768,6.123,1770,4.998,2672,6.696,2673,6.177,2674,6.177,2675,4.998,2676,6.177]],["title/injectables/TransactionManager.html",[156,1.013,1100,3.165]],["body/injectables/TransactionManager.html",[0,0.338,3,0.071,4,0.071,5,0.062,9,0.36,11,3.125,12,2.184,14,1.474,16,1.995,19,0.42,21,1.35,22,0.008,23,0.88,24,0.416,25,0.624,35,1.106,36,3.686,37,0.125,40,1.231,45,0.071,48,1.952,76,2.2,88,1.474,92,0.006,93,0.006,121,3.686,122,5.668,156,1.538,157,1.932,168,2.487,190,2.27,285,3.175,286,4.452,300,1.981,326,2.869,467,3.49,476,3.921,558,3.044,584,3.686,1072,3.175,1100,4.807,1175,2.327,2090,5.668,2364,3.686,2401,4.611,2407,7.092,2675,4.216,2677,5.211,2678,6.796,2679,5.211,2680,6.796,2681,7.024,2682,5.211,2683,6.796,2684,6.796,2685,5.211,2686,5.211,2687,6.796]],["title/interfaces/TransactionOptions.html",[456,2.337,2681,3.62]],["body/interfaces/TransactionOptions.html",[3,0.076,4,0.076,5,0.066,9,0.384,10,1.442,22,0.008,24,0.429,25,0.796,28,1.79,37,0.111,45,0.097,48,2.037,88,1.693,92,0.006,93,0.006,161,0.652,168,1.831,262,2.064,296,2.909,326,2.351,364,3.729,456,2.909,472,3.729,502,3.729,513,3.565,1100,5.812,1917,4.506,2090,3.939,2353,4.191,2364,5.52,2675,6.649,2681,6.315,2688,5.569,2689,8.217,2690,8.217,2691,7.805,2692,5.569,2693,5.569,2694,5.569,2695,5.569,2696,5.569,2697,5.569,2698,7.093,2699,7.093,2700,5.569,2701,5.569,2702,5.569,2703,5.569]],["title/classes/UpdateAssistantDto.html",[0,0.29,202,3.367]],["body/classes/UpdateAssistantDto.html",[0,0.443,2,0.821,3,0.094,4,0.094,5,0.081,22,0.008,37,0.126,45,0.094,92,0.007,93,0.007,185,4.835,202,6.052,220,1.303,227,5.531,316,3.239,415,2.909,660,6.05,973,3.699,2704,6.836,2705,8.042]],["title/classes/UpdateDatasetDto.html",[0,0.29,916,3.367]],["body/classes/UpdateDatasetDto.html",[0,0.421,2,0.78,3,0.089,4,0.089,5,0.077,10,1.32,22,0.008,23,1.009,25,0.596,37,0.122,45,0.089,92,0.007,93,0.007,178,1.246,220,1.237,316,3.075,415,2.82,680,5.515,682,5.743,684,5.515,916,6.29,920,5.251,973,4.692,2706,4.137,2707,7.798,2708,6.49,2709,6.49,2710,6.49]],["title/classes/UpdateDatasetProcessRuleDto.html",[0,0.29,2711,3.959]],["body/classes/UpdateDatasetProcessRuleDto.html",[0,0.438,2,0.812,3,0.093,4,0.093,5,0.08,22,0.008,37,0.125,45,0.093,92,0.007,93,0.007,220,1.288,316,3.203,415,2.89,474,3.467,705,5.087,706,4.173,707,4.309,726,3.531,973,3.658,2706,4.309,2711,7.07,2712,7.99]],["title/classes/UpdateDocumentByFileDto.html",[0,0.29,2713,3.959]],["body/classes/UpdateDocumentByFileDto.html",[0,0.441,2,0.817,3,0.093,4,0.093,5,0.08,22,0.008,37,0.125,45,0.093,92,0.007,93,0.007,220,1.296,316,3.221,415,2.899,729,5.116,730,3.479,731,5.116,973,3.679,1187,5.5,2706,4.333,2713,7.093,2714,8.016]],["title/classes/UpdateDocumentByTextDto.html",[0,0.29,2715,3.959]],["body/classes/UpdateDocumentByTextDto.html",[0,0.441,2,0.817,3,0.093,4,0.093,5,0.08,22,0.008,37,0.125,45,0.093,92,0.007,93,0.007,220,1.296,316,3.221,415,2.899,730,3.479,749,5.116,750,6.016,973,3.679,1188,6.016,2706,4.333,2715,7.093,2716,8.016]],["title/classes/UpdateDocumentDto.html",[0,0.29,2717,3.959]],["body/classes/UpdateDocumentDto.html",[0,0.443,2,0.821,3,0.094,4,0.094,5,0.081,22,0.008,37,0.126,45,0.094,92,0.007,93,0.007,220,1.303,316,3.239,415,2.909,756,5.531,757,5.531,973,3.699,1190,5.144,2706,4.358,2717,7.117,2718,8.042]],["title/classes/UpdateDocumentNameDto.html",[0,0.29,1177,3.62]],["body/classes/UpdateDocumentNameDto.html",[0,0.501,2,0.768,3,0.088,4,0.088,5,0.076,9,0.441,10,1.571,19,0.395,22,0.008,23,1.074,24,0.351,37,0.121,42,3.26,45,0.088,92,0.007,93,0.007,161,0.905,176,1.509,178,1.02,220,1.217,600,2.218,604,2.482,607,2.255,672,2.491,730,3.352,816,5.653,831,5.168,1177,6.249,2706,4.923,2719,6.388,2720,6.388]],["title/classes/UpdateDocumentSegmentDto.html",[0,0.29,1404,3.367]],["body/classes/UpdateDocumentSegmentDto.html",[0,0.443,2,0.821,3,0.094,4,0.094,5,0.081,22,0.008,37,0.126,45,0.094,92,0.007,93,0.007,220,1.303,316,3.239,415,2.909,850,4.835,851,5.531,973,3.699,1404,6.052,1408,4.835,2706,4.358,2721,8.042]],["title/classes/UploadFileDto.html",[0,0.29,1820,3.62]],["body/classes/UploadFileDto.html",[0,0.393,2,0.729,3,0.083,4,0.083,5,0.1,9,0.419,10,1.522,19,0.463,22,0.008,24,0.446,25,0.687,37,0.095,45,0.083,92,0.007,93,0.007,161,0.993,176,1.769,178,1.416,220,1.157,600,2.15,604,2.406,639,4.91,663,2.366,676,2.919,731,4.567,1819,6.057,1820,6.057,2722,7.183,2723,5.371,2724,7.486,2725,7.486,2726,6.069]],["title/classes/UploadTextFileDto.html",[0,0.29,1827,3.62]],["body/classes/UploadTextFileDto.html",[0,0.462,2,0.675,3,0.077,4,0.077,5,0.067,9,0.388,10,1.451,19,0.485,22,0.008,23,1.014,24,0.431,25,0.655,37,0.111,42,3.309,45,0.077,92,0.006,93,0.006,161,1.019,176,1.852,178,1.389,220,1.071,600,2.497,604,2.519,607,1.984,616,4.67,650,3.381,663,2.191,672,2.782,676,2.782,730,2.439,731,4.229,751,4.974,754,4.974,1827,5.773,2722,7.296,2723,4.974,2727,5.62,2728,5.62]],["title/dependencies.html",[101,2.815,2729,3.294]],["body/dependencies.html",[0,0.429,22,0.009,40,1.183,41,4.431,44,4.051,92,0.006,93,0.006,101,2.615,121,4.682,122,3.542,126,4.431,179,2.615,220,0.954,262,1.856,342,4.431,344,3.353,377,3.542,448,2.925,449,3.768,450,3.768,451,3.768,531,4.051,607,1.768,616,2.615,644,2.71,701,3.768,736,3.353,830,4.682,1224,2.812,1719,4.051,1833,4.431,1834,4.431,1936,3.768,2029,4.431,2178,4.431,2333,4.431,2440,4.431,2651,5.858,2730,5.007,2731,5.007,2732,4.431,2733,5.007,2734,5.007,2735,4.431,2736,5.007,2737,5.007,2738,6.62,2739,5.007,2740,5.007,2741,5.007,2742,5.007,2743,5.007,2744,5.007,2745,7.416,2746,5.007,2747,5.007,2748,5.007,2749,5.007,2750,5.007,2751,5.007,2752,5.007,2753,5.007,2754,5.007,2755,5.007,2756,5.007,2757,5.007,2758,5.007,2759,5.007,2760,5.007,2761,5.007,2762,5.007,2763,5.007,2764,5.007,2765,5.007,2766,5.007,2767,5.007,2768,5.007,2769,5.007,2770,5.007,2771,5.007,2772,5.007,2773,5.007,2774,5.007,2775,5.007,2776,5.007,2777,5.007,2778,5.007,2779,5.007,2780,5.007,2781,5.007,2782,5.007,2783,5.007,2784,5.007,2785,5.007,2786,5.007,2787,5.007,2788,5.007,2789,5.007,2790,5.007,2791,5.007,2792,5.007,2793,5.007,2794,5.007,2795,5.007,2796,5.007,2797,5.007,2798,5.007]],["title/miscellaneous/enumerations.html",[2799,2.801,2800,4.769]],["body/miscellaneous/enumerations.html",[5,0.057,9,0.332,22,0.008,27,4.33,92,0.006,93,0.006,105,3.487,256,3.066,376,3.402,377,4.558,378,5.214,448,2.809,504,5.2,507,3.619,598,5.703,601,5.214,609,2.963,614,5.703,616,3.366,634,5.703,635,4.316,693,3.926,700,2.809,716,4.558,717,4.85,718,4.558,746,3.926,786,4.85,829,4.558,2051,3.891,2383,5.214,2732,5.703,2735,5.703,2799,3.619,2800,4.256,2801,6.445,2802,7.765,2803,6.445,2804,4.256,2805,6.445,2806,4.809,2807,6.445,2808,5.703,2809,6.445,2810,4.256,2811,6.445,2812,4.809,2813,4.809,2814,6.445,2815,4.809,2816,4.809,2817,4.809,2818,7.269,2819,4.809,2820,4.809,2821,4.809,2822,4.809,2823,4.809,2824,4.809,2825,4.809,2826,4.809,2827,6.445,2828,4.256,2829,6.445,2830,6.445,2831,4.809,2832,6.445,2833,6.445,2834,6.445,2835,6.445,2836,4.256,2837,4.809,2838,4.809,2839,4.809,2840,4.809,2841,4.256,2842,4.809,2843,6.445,2844,4.809]],["title/index.html",[9,0.257,2845,3.722,2846,3.722]],["body/index.html",[22,0.008,92,0.007,93,0.007,966,6.572,1196,4.346,1704,6.475,1974,5.745]],["title/modules.html",[100,3.099]],["body/modules.html",[22,0.007,92,0.007,93,0.007,99,4.871,100,3.269,110,4.578,111,3.635,112,4.578,113,4.578,406,4.578,407,4.334,1091,3.943,1092,4.334,2847,9.243,2848,9.243,2849,9.243,2850,9.243]],["title/overview.html",[2851,5.431]],["body/overview.html",[2,0.486,22,0.008,92,0.005,93,0.005,96,1.976,98,1.706,99,6.573,100,2.041,101,2.111,102,2.27,103,2.27,104,2.27,105,2.187,106,2.27,107,3.577,108,3.577,109,3.577,110,6.228,111,4.739,112,6.605,113,5.968,114,4.992,115,3.211,116,2.27,117,2.27,130,3.642,157,1.499,221,4.692,286,4.243,297,4.83,329,4.394,330,4.597,403,3.577,404,3.577,405,3.577,406,5.868,407,5.897,502,2.707,526,3.577,527,3.577,921,4.692,1008,4.83,1062,4.597,1063,4.394,1064,4.394,1088,3.577,1089,3.577,1090,3.577,1091,5.14,1092,5.439,1093,4.692,1094,5.368,1095,4.597,1096,4.692,1097,4.692,1098,4.443,1099,4.692,1100,4.692,1896,4.83,2397,3.577,2398,3.577,2399,3.577,2540,3.577,2542,3.577,2547,3.577,2549,3.577,2552,3.577,2553,3.577,2851,3.577,2852,5.718,2853,4.042,2854,4.042,2855,4.042]],["title/properties.html",[10,1.096,2729,3.294]],["body/properties.html",[10,1.447,22,0.008,92,0.007,93,0.007,178,1.137,213,4.157,653,5.033,2856,7.116,2857,7.116,2858,7.116,2859,7.116]],["title/miscellaneous/typealiases.html",[2799,2.801,2860,5.39]],["body/miscellaneous/typealiases.html",[9,0.361,22,0.008,24,0.506,88,1.135,92,0.006,93,0.006,100,2.643,145,6.03,161,0.888,256,3.336,370,4.631,376,3.702,384,6.495,511,6.422,513,2.15,584,4.82,601,4.234,698,6.495,700,3.057,1224,2.939,1226,3.938,1319,4.563,2055,4.234,2086,4.631,2091,6.03,2161,4.631,2163,6.03,2211,4.631,2244,4.234,2247,5.514,2251,5.514,2256,4.631,2258,6.03,2357,6.03,2364,4.82,2532,5.514,2799,3.938,2804,6.03,2808,4.631,2810,7.104,2828,4.631,2836,4.631,2841,4.631,2861,5.234,2862,5.234,2863,6.815,2864,5.234,2865,6.815,2866,6.815,2867,5.234,2868,6.815,2869,6.815,2870,6.815,2871,5.234,2872,6.815,2873,5.234,2874,8.027,2875,6.815,2876,5.234,2877,6.815,2878,6.815,2879,6.815,2880,6.815,2881,5.234,2882,5.234,2883,5.234,2884,5.234,2885,5.234,2886,5.234,2887,5.234,2888,5.234,2889,5.234,2890,5.234,2891,5.234,2892,5.234,2893,5.234,2894,5.234,2895,5.234]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1974,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekSegment.html":{},"classes/ResponseIndexingEstimateDto.html":{},"index.html":{}}}],["0.0.1",{"_index":2856,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":380,"title":{},"body":{"injectables/AssistantService.html":{}}}],["0.05",{"_index":842,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["0.05})@isoptional()@isnumber",{"_index":814,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["0.1.0",{"_index":2736,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["0.18.5",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["0.2.20",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["0.3.13",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["0.3.18",{"_index":2740,"title":{},"body":{"dependencies.html":{}}}],["0.3.5",{"_index":2772,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":966,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/RetrievalModelDto.html":{},"index.html":{}}}],["0.5.1",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["0.5})@isoptional()@isnumber",{"_index":2587,"title":{},"body":{"classes/RetrievalModelDto.html":{}}}],["002",{"_index":2104,"title":{},"body":{"classes/LeekDataset.html":{}}}],["01",{"_index":1232,"title":{},"body":{"classes/DocumentDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekFile.html":{}}}],["0162a2ca",{"_index":834,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["01t00:00:00z",{"_index":2071,"title":{},"body":{"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekFile.html":{}}}],["01t00:00:00z'})@exclude",{"_index":2238,"title":{},"body":{"classes/LeekFile.html":{}}}],["01t08:00:00.000z",{"_index":845,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["01t08:00:00.000z'})@isoptional()@isdate()@type(undefined",{"_index":781,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["02t00:00:00z",{"_index":2083,"title":{},"body":{"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{}}}],["04t08:42:31.000z",{"_index":2117,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekSegment.html":{}}}],["04t09:00:00.000z",{"_index":843,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["04t09:00:00.000z'})@isoptional()@isdate()@type(undefined",{"_index":802,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["059c66963285",{"_index":895,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["059c66963285'})@isuuid",{"_index":1994,"title":{},"body":{"classes/IndexingEstimateDto.html":{}}}],["0f634138ea0b",{"_index":2285,"title":{},"body":{"classes/LeekSegment.html":{}}}],["1",{"_index":1196,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekExcelLoader.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"index.html":{}}}],["1.1.1",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["1.11.13",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["1.48.2",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["1.7.5",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["1.7.7",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":2775,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":558,"title":{},"body":{"injectables/ConfigureService.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/JiebaKeywordService.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"injectables/TransactionManager.html":{}}}],["10.4.7",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["10.5.0",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":402,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/ConfigureService.html":{},"classes/PaginationResponseDto.html":{},"injectables/RetrievalService.html":{}}}],["1000",{"_index":2685,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["1011",{"_index":2078,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["1024",{"_index":840,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["1024})@isoptional()@isint",{"_index":823,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["11",{"_index":801,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekSegment.html":{}}}],["11.0.3",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["11e9",{"_index":835,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["12",{"_index":780,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["121314151617",{"_index":2079,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["13",{"_index":2306,"title":{},"body":{"classes/LeekSegment.html":{}}}],["14",{"_index":2312,"title":{},"body":{"classes/LeekSegment.html":{}}}],["15",{"_index":2309,"title":{},"body":{"classes/LeekSegment.html":{}}}],["156819",{"_index":2232,"title":{},"body":{"classes/LeekFile.html":{}}}],["1993年12月，系国有控股上市企业。公司运营全球最大的小商品批发市场——义乌中国小商品城，市场现有营业面积640余万平方米，商位7",{"_index":1792,"title":{},"body":{"controllers/ExampleController.html":{}}}],["1e45ce3de984",{"_index":2147,"title":{},"body":{"classes/LeekDocument.html":{}}}],["1号。这里有800",{"_index":1790,"title":{},"body":{"controllers/ExampleController.html":{}}}],["2",{"_index":830,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/FilesService.html":{},"classes/LeekDocument.html":{},"classes/ResponseIndexingEstimateDto.html":{},"dependencies.html":{}}}],["2.1.3",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["2.14.6",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":2766,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":860,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{},"classes/LeekSegment.html":{}}}],["2000",{"_index":2065,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["200元。'})@isoptional()@isstring",{"_index":854,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{}}}],["2023",{"_index":2070,"title":{},"body":{"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekFile.html":{}}}],["2024",{"_index":779,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/DocumentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekSegment.html":{}}}],["24",{"_index":2853,"title":{},"body":{"overview.html":{}}}],["2d98cbcb93ad",{"_index":890,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["2f36436ed7c0",{"_index":2303,"title":{},"body":{"classes/LeekSegment.html":{}}}],["2})@isint",{"_index":818,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["3",{"_index":701,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/DatasetMapper.html":{},"classes/RetrievalModelDto.html":{},"dependencies.html":{}}}],["3.0.2",{"_index":2764,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":2744,"title":{},"body":{"dependencies.html":{}}}],["3.23.8",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["3.689.0",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":555,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["33531e13",{"_index":2299,"title":{},"body":{"classes/LeekSegment.html":{}}}],["3f29e2b7",{"_index":664,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekFile.html":{}}}],["3})@isoptional()@isnumber",{"_index":2590,"title":{},"body":{"classes/RetrievalModelDto.html":{}}}],["4",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2773,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1758,"title":{},"body":{"classes/ErrorResponseDto.html":{}}}],["41e7",{"_index":1802,"title":{},"body":{"controllers/ExampleController.html":{}}}],["4375",{"_index":2221,"title":{},"body":{"classes/LeekFile.html":{}}}],["4495",{"_index":888,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["44d1",{"_index":2145,"title":{},"body":{"classes/LeekDocument.html":{}}}],["4660",{"_index":794,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["4873",{"_index":2283,"title":{},"body":{"classes/LeekSegment.html":{}}}],["4ab9",{"_index":893,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["4af8",{"_index":712,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["4c5a",{"_index":2301,"title":{},"body":{"classes/LeekSegment.html":{}}}],["4c688f1e",{"_index":886,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["4cc0",{"_index":836,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["4d47",{"_index":666,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekFile.html":{}}}],["4d9e",{"_index":2293,"title":{},"body":{"classes/LeekSegment.html":{}}}],["4dc2",{"_index":2225,"title":{},"body":{"classes/LeekFile.html":{}}}],["4o",{"_index":378,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{},"miscellaneous/enumerations.html":{}}}],["5",{"_index":2855,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["5.22.0",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2659,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["500",{"_index":2662,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["5000",{"_index":841,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["5000})@isoptional()@isint",{"_index":821,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["500})@isoptional",{"_index":2663,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["50})@isoptional",{"_index":2660,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["5678",{"_index":2076,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["5万个，经营26个大类、210万个单品，与全球230多个国家和地区有贸易往来。公司致力于为210",{"_index":1793,"title":{},"body":{"controllers/ExampleController.html":{}}}],["6.9.16",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":559,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["600415_分析报告.pdf",{"_index":831,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/UpdateDocumentNameDto.html":{}}}],["600415_分析报告.pdf'})@isstring",{"_index":816,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{}}}],["6a220f65",{"_index":2281,"title":{},"body":{"classes/LeekSegment.html":{}}}],["6c2b",{"_index":1801,"title":{},"body":{"controllers/ExampleController.html":{}}}],["6d61",{"_index":2224,"title":{},"body":{"classes/LeekFile.html":{}}}],["7.8.1",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["71fab30b",{"_index":891,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["74",{"_index":2854,"title":{},"body":{"overview.html":{}}}],["7f0b3f4eefcc",{"_index":839,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["7f0b3f4eefcc'})@isoptional()@isuuid",{"_index":796,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["8",{"_index":1957,"title":{},"body":{"injectables/FilesService.html":{}}}],["8.0.0",{"_index":2768,"title":{},"body":{"dependencies.html":{}}}],["8.0.5",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["8228",{"_index":2284,"title":{},"body":{"classes/LeekSegment.html":{}}}],["82d2",{"_index":2282,"title":{},"body":{"classes/LeekSegment.html":{}}}],["84e8b555",{"_index":2291,"title":{},"body":{"classes/LeekSegment.html":{}}}],["8764eeef8355.pdf",{"_index":2241,"title":{},"body":{"classes/LeekFile.html":{}}}],["8764eeef8355.pdf'})@exclude",{"_index":2227,"title":{},"body":{"classes/LeekFile.html":{}}}],["892b",{"_index":837,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["8aa6",{"_index":2222,"title":{},"body":{"classes/LeekFile.html":{}}}],["8c9e",{"_index":665,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekFile.html":{}}}],["9",{"_index":2852,"title":{},"body":{"overview.html":{}}}],["9.0.5",{"_index":2770,"title":{},"body":{"dependencies.html":{}}}],["9248",{"_index":887,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["96fe",{"_index":2302,"title":{},"body":{"classes/LeekSegment.html":{}}}],["9b78",{"_index":713,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["9b87",{"_index":795,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["9db2",{"_index":711,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["9efg",{"_index":2077,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["9f16",{"_index":2294,"title":{},"body":{"classes/LeekSegment.html":{}}}],["_datasetid",{"_index":1147,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/RetrievalController.html":{}}}],["_distance",{"_index":1704,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"injectables/RetrievalService.html":{},"index.html":{}}}],["_documentid",{"_index":1389,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["_fs",{"_index":417,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["a1b2c3d4",{"_index":2075,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["a2be",{"_index":2220,"title":{},"body":{"classes/LeekFile.html":{}}}],["a396",{"_index":1803,"title":{},"body":{"controllers/ExampleController.html":{}}}],["a4a7f7b81b9c",{"_index":679,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekFile.html":{}}}],["a4a7f7b81b9c'})@isoptional()@isuuid",{"_index":668,"title":{},"body":{"classes/CreateAssistantDto.html":{}}}],["a78c",{"_index":889,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["a9b6",{"_index":2226,"title":{},"body":{"classes/LeekFile.html":{}}}],["aa39",{"_index":892,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["abstract",{"_index":313,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/ConfigureAdapter.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/FilesRepository.html":{},"classes/PaginationResponseDto.html":{}}}],["acceptlanguageresolver",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["accessors",{"_index":2405,"title":{},"body":{"injectables/PrismaService.html":{}}}],["action",{"_index":633,"title":{},"body":{"classes/ConversationDto.html":{}}}],["ada",{"_index":2103,"title":{},"body":{"classes/LeekDataset.html":{}}}],["adapter",{"_index":532,"title":{},"body":{"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{}}}],["add",{"_index":2488,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["ai",{"_index":2840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2861,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{}}}],["answer",{"_index":852,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"injectables/FilesService.html":{},"classes/LeekSegment.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["api",{"_index":786,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"injectables/RetrievalService.html":{},"miscellaneous/enumerations.html":{}}}],["api_key",{"_index":518,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["apiconsumes",{"_index":1835,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes('multipart/form",{"_index":1843,"title":{},"body":{"controllers/FilesController.html":{}}}],["apicreatedresponse",{"_index":214,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{}}}],["apicreatedresponse({description",{"_index":187,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/IndexingController.html":{}}}],["apiexcludecontroller",{"_index":1785,"title":{},"body":{"controllers/ExampleController.html":{}}}],["apihideproperty",{"_index":871,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["apikey",{"_index":382,"title":{},"body":{"injectables/AssistantService.html":{}}}],["apinocontentresponse",{"_index":215,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["apiokresponse",{"_index":216,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"controllers/RetrievalController.html":{}}}],["apiokresponse(chatsseresponse",{"_index":247,"title":{},"body":{"controllers/AssistantController.html":{}}}],["apiokresponse(chatsseresponse)@apiparam({name",{"_index":181,"title":{},"body":{"controllers/AssistantController.html":{}}}],["apiokresponse({description",{"_index":913,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/RetrievalController.html":{}}}],["apioperation",{"_index":217,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["apiparam",{"_index":218,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"controllers/RetrievalController.html":{}}}],["apiparam({name",{"_index":1141,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/RetrievalController.html":{}}}],["apiproperty",{"_index":604,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DocumentDto.html":{},"classes/ErrorResponseDto.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["apiproperty({description",{"_index":672,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"classes/DocumentDto.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadTextFileDto.html":{}}}],["apiproperty({enum",{"_index":599,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{}}}],["apiproperty({example",{"_index":619,"title":{},"body":{"classes/ConversationContentDto.html":{},"classes/ErrorResponseDto.html":{}}}],["apiproperty({type",{"_index":639,"title":{},"body":{"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/UploadFileDto.html":{}}}],["apipropertyoptional",{"_index":676,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/DocumentDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PaginationDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["apipropertyoptional({description",{"_index":663,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/DocumentDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PaginationDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["apiresponseoptions",{"_index":643,"title":{},"body":{"classes/ConversationDto.html":{}}}],["apitags",{"_index":219,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["app.controller",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":95,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["application/pdf",{"_index":2229,"title":{},"body":{"classes/LeekFile.html":{}}}],["appmodule",{"_index":99,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":114,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"overview.html":{}}}],["archived",{"_index":758,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{}}}],["archivedat",{"_index":759,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["archivedocumentbyid",{"_index":1128,"title":{},"body":{"controllers/DocumentController.html":{}}}],["archivedocumentbyid(_datasetid",{"_index":1138,"title":{},"body":{"controllers/DocumentController.html":{}}}],["archivedreason",{"_index":760,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["args",{"_index":2699,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["argumentshost",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":884,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"interfaces/Pagination$.html":{}}}],["assistant",{"_index":256,"title":{},"body":{"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/ConversationAuthorDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["assistant\"'})@isnotempty()@isenum(role",{"_index":602,"title":{},"body":{"classes/ConversationAuthorDto.html":{}}}],["assistant.dto",{"_index":227,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"classes/UpdateAssistantDto.html":{}}}],["assistant.dto.ts",{"_index":660,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/UpdateAssistantDto.html":{}}}],["assistant.dto.ts:11",{"_index":673,"title":{},"body":{"classes/CreateAssistantDto.html":{}}}],["assistant.dto.ts:19",{"_index":671,"title":{},"body":{"classes/CreateAssistantDto.html":{}}}],["assistant.dto.ts:27",{"_index":669,"title":{},"body":{"classes/CreateAssistantDto.html":{}}}],["assistant.dto.ts:35",{"_index":675,"title":{},"body":{"classes/CreateAssistantDto.html":{}}}],["assistant.systemprompt",{"_index":371,"title":{},"body":{"injectables/AssistantService.html":{}}}],["assistant['id",{"_index":353,"title":{},"body":{"injectables/AssistantService.html":{}}}],["assistantcontroller",{"_index":164,"title":{"controllers/AssistantController.html":{}},"body":{"controllers/AssistantController.html":{},"modules/AssistantsModule.html":{}}}],["assistantmapper",{"_index":250,"title":{"classes/AssistantMapper.html":{}},"body":{"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{}}}],["assistantmapper.todomain(assistant",{"_index":303,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["assistantmapper.todomain(entity",{"_index":308,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["assistantmapper.topersistence(data",{"_index":302,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["assistantmapper.topersistence(payload",{"_index":310,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["assistantprompt",{"_index":368,"title":{},"body":{"injectables/AssistantService.html":{}}}],["assistantprompt.pipe",{"_index":375,"title":{},"body":{"injectables/AssistantService.html":{}}}],["assistantrelationalrepository",{"_index":282,"title":{"injectables/AssistantRelationalRepository.html":{}},"body":{"injectables/AssistantRelationalRepository.html":{},"modules/RelationalAssistantPersistenceModule.html":{}}}],["assistantrepository",{"_index":297,"title":{"classes/AssistantRepository.html":{}},"body":{"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"overview.html":{}}}],["assistants",{"_index":167,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{}}}],["assistants.controller",{"_index":411,"title":{},"body":{"modules/AssistantsModule.html":{}}}],["assistants.map(assistantmapper.todomain",{"_index":305,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["assistants.repository",{"_index":298,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"modules/RelationalAssistantPersistenceModule.html":{}}}],["assistants.service",{"_index":222,"title":{},"body":{"controllers/AssistantController.html":{},"modules/AssistantsModule.html":{}}}],["assistantservice",{"_index":221,"title":{"injectables/AssistantService.html":{}},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"overview.html":{}}}],["assistantsmodule",{"_index":110,"title":{"modules/AssistantsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":168,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/DatasetController.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekExcelLoader.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{}}}],["augmented",{"_index":2595,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["author",{"_index":653,"title":{},"body":{"classes/ConversationMessageDto.html":{},"classes/CreateDocumentDto.html":{},"classes/DocumentDto.html":{},"classes/LeekDocument.html":{},"properties.html":{}}}],["author.dto",{"_index":657,"title":{},"body":{"classes/ConversationMessageDto.html":{}}}],["author.dto.ts",{"_index":597,"title":{},"body":{"classes/ConversationAuthorDto.html":{}}}],["author.dto.ts:11",{"_index":603,"title":{},"body":{"classes/ConversationAuthorDto.html":{}}}],["authuserkey",{"_index":572,"title":{},"body":{"classes/ContextProvider.html":{}}}],["automatic",{"_index":716,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/ProcessRuleDto.html":{},"miscellaneous/enumerations.html":{}}}],["available",{"_index":2383,"title":{},"body":{"classes/PaginationResponseDto.html":{},"injectables/RetrievalService.html":{},"miscellaneous/enumerations.html":{}}}],["avoid",{"_index":2500,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["await",{"_index":300,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekExcelLoader.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{}}}],["awk",{"_index":630,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["aws",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["axios",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["b123",{"_index":2146,"title":{},"body":{"classes/LeekDocument.html":{}}}],["b34047227dfc",{"_index":838,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["b7615cf43272",{"_index":727,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["b7615cf43272'})@isuuid",{"_index":714,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{}}}],["bad",{"_index":1756,"title":{},"body":{"classes/ErrorResponseDto.html":{}}}],["badrequestexception",{"_index":1576,"title":{},"body":{"injectables/DocumentSegmentService.html":{},"injectables/FilesService.html":{}}}],["badrequestexception(\"excel",{"_index":1980,"title":{},"body":{"injectables/FilesService.html":{}}}],["badrequestexception('excel",{"_index":1967,"title":{},"body":{"injectables/FilesService.html":{}}}],["badrequestexception(`id",{"_index":1599,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["base_url",{"_index":519,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["based",{"_index":2357,"title":{},"body":{"interfaces/Pagination$.html":{},"miscellaneous/typealiases.html":{}}}],["basedocumentloader",{"_index":416,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/LeekExcelLoader.html":{}}}],["baseurl",{"_index":385,"title":{},"body":{"injectables/AssistantService.html":{}}}],["bash",{"_index":626,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["bb43b3d7dfc9.xlsx",{"_index":1804,"title":{},"body":{"controllers/ExampleController.html":{}}}],["bb73",{"_index":894,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["bbfa",{"_index":667,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekFile.html":{}}}],["being",{"_index":2349,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["binary",{"_index":2725,"title":{},"body":{"classes/UploadFileDto.html":{}}}],["blob",{"_index":2089,"title":{},"body":{"classes/LeekCSVLoader.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{}}}],["body",{"_index":206,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["body('fallbackmessage",{"_index":2583,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["boolean",{"_index":774,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/LeekDocument.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekFile.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekSegment.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/RetrievalModelDto.html":{}}}],["bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["browse",{"_index":2850,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2847,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":418,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["buffer",{"_index":1923,"title":{},"body":{"injectables/FilesService.html":{}}}],["buffer.from(originalname",{"_index":1955,"title":{},"body":{"injectables/FilesService.html":{}}}],["buffer.length",{"_index":1962,"title":{},"body":{"injectables/FilesService.html":{}}}],["build",{"_index":2640,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["byclassprefix",{"_index":1732,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["bydatasetdocumentandhash",{"_index":1555,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["bydatasetid",{"_index":1026,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["bydatasetidandhashes",{"_index":1548,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["bydocumentid",{"_index":1537,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["byhash",{"_index":1736,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["byhashandclassprefix",{"_index":1734,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["byhashanddatasetid",{"_index":1551,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["byid",{"_index":320,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["bynameanddatasetid",{"_index":1361,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["byqueryandfilter",{"_index":1743,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["c1e4e0560f31b6164bfb9ec9e91536a7581e80b6b96e788d93bededbb2d3d7f6",{"_index":2297,"title":{},"body":{"classes/LeekSegment.html":{}}}],["c6bd97a16ea91fc05155d82af79516c013c5488f175191372bbb07c7031c77fc",{"_index":2242,"title":{},"body":{"classes/LeekFile.html":{}}}],["c6bd97a16ea91fc05155d82af79516c013c5488f175191372bbb07c7031c77fc'})@exclude",{"_index":2216,"title":{},"body":{"classes/LeekFile.html":{}}}],["ca080e7e",{"_index":710,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["callback",{"_index":2683,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["callhandler",{"_index":1766,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["cat",{"_index":628,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["catch",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/DocumentSegmentService.html":{},"injectables/FilesService.html":{},"injectables/PrismaService.html":{}}}],["catch(exception",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catcherror",{"_index":1769,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["catcherror((error",{"_index":1772,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["caused",{"_index":2892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cc8e6900a3ae",{"_index":2295,"title":{},"body":{"classes/LeekSegment.html":{}}}],["ce9f2a1a",{"_index":792,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["chain",{"_index":374,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{}}}],["chain.invoke",{"_index":2067,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["chain.stream",{"_index":387,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["chalk",{"_index":2333,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["chalk.hex('#87e8de').bold(`${context.getargs()[0].route.path",{"_index":2341,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["chalk.hex('#87e8de').bold(`${context.getargs()[0].route.stack[0].method",{"_index":2342,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["chalk.hex('#87e8de').bold(`${context.getargs()[3].fieldname",{"_index":2338,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["chat",{"_index":2609,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["chat_history",{"_index":2646,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["chatopenai",{"_index":341,"title":{},"body":{"injectables/AssistantService.html":{}}}],["chatprompttemplate",{"_index":339,"title":{},"body":{"injectables/AssistantService.html":{}}}],["chatprompttemplate.frommessages",{"_index":369,"title":{},"body":{"injectables/AssistantService.html":{}}}],["chatsseresponse",{"_index":224,"title":{},"body":{"controllers/AssistantController.html":{},"classes/ConversationDto.html":{}}}],["china",{"_index":1795,"title":{},"body":{"controllers/ExampleController.html":{}}}],["chinagoodshinagoods平台是一款数字化贸易综合服务平台，它集中发挥义乌小商品市场的整体资源优势，无缝对接线上线下渠道，帮助用户一键触达全球小商品。无论你是经营户、生产厂家、采购商还是贸易服务商，只要有问题就上chinagoods",{"_index":1791,"title":{},"body":{"controllers/ExampleController.html":{}}}],["chinagoods和义乌购都是属于小商品城的平台，但它们有一些区别。总体来说，chinagoods",{"_index":1794,"title":{},"body":{"controllers/ExampleController.html":{}}}],["chinese",{"_index":748,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{}}}],["chinese'})@isoptional()@isstring",{"_index":739,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"classes/QueryDocumentDto.html":{}}}],["chunk",{"_index":391,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["chunk.content",{"_index":394,"title":{},"body":{"injectables/AssistantService.html":{}}}],["chunkcount",{"_index":2017,"title":{},"body":{"injectables/IndexingService.html":{},"classes/ResponseIndexingEstimateDto.html":{}}}],["chunkoverlap",{"_index":2484,"title":{},"body":{"injectables/ProcessDocumentService.html":{},"classes/SegmentationRuleDto.html":{}}}],["chunkpreview",{"_index":2014,"title":{},"body":{"injectables/IndexingService.html":{},"classes/ResponseIndexingEstimateDto.html":{}}}],["chunks",{"_index":389,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["chunksize",{"_index":2482,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["circular",{"_index":2889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["circumvent",{"_index":2887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/AssistantMapper.html":{},"classes/AssistantRepository.html":{},"classes/COSLoader.html":{},"classes/ConfigureAdapter.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentMapper.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingMapper.html":{},"classes/EmbeddingRepository.html":{},"classes/ErrorResponseDto.html":{},"classes/FilesMapper.html":{},"classes/FilesRepository.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AssistantMapper.html":{},"classes/AssistantRepository.html":{},"classes/COSLoader.html":{},"classes/ConfigureAdapter.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentMapper.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingMapper.html":{},"classes/EmbeddingRepository.html":{},"classes/ErrorResponseDto.html":{},"classes/FilesMapper.html":{},"classes/FilesRepository.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"overview.html":{}}}],["classprefix",{"_index":863,"title":{},"body":{"classes/CreateEmbeddingDto.html":{},"classes/DatasetMapper.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/LeekDataset.html":{},"classes/LeekEmbedding.html":{}}}],["classreference",{"_index":2382,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["clean",{"_index":499,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["cleandocumentsbypreprocessingrules",{"_index":2419,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["cleandocumentsbypreprocessingrules(documents",{"_index":2426,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["cleanuptempfile",{"_index":423,"title":{},"body":{"classes/COSLoader.html":{}}}],["cleanuptempfile(filepath",{"_index":436,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["cls",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextProvider.html":{},"injectables/PrismaService.html":{},"injectables/TransactionManager.html":{},"dependencies.html":{}}}],["clsmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["clsmodule.forroot",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["clsservice",{"_index":2407,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/TransactionManager.html":{}}}],["clsservicemanager",{"_index":589,"title":{},"body":{"classes/ContextProvider.html":{}}}],["clsservicemanager.getclsservice",{"_index":591,"title":{},"body":{"classes/ContextProvider.html":{}}}],["cluster_appmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_assistantsmodule",{"_index":403,"title":{},"body":{"modules/AssistantsModule.html":{},"overview.html":{}}}],["cluster_assistantsmodule_imports",{"_index":405,"title":{},"body":{"modules/AssistantsModule.html":{},"overview.html":{}}}],["cluster_assistantsmodule_providers",{"_index":404,"title":{},"body":{"modules/AssistantsModule.html":{},"overview.html":{}}}],["cluster_configuremodule",{"_index":526,"title":{},"body":{"modules/ConfigureModule.html":{},"overview.html":{}}}],["cluster_configuremodule_exports",{"_index":527,"title":{},"body":{"modules/ConfigureModule.html":{},"overview.html":{}}}],["cluster_datasetsmodule",{"_index":1088,"title":{},"body":{"modules/DatasetsModule.html":{},"overview.html":{}}}],["cluster_datasetsmodule_imports",{"_index":1090,"title":{},"body":{"modules/DatasetsModule.html":{},"overview.html":{}}}],["cluster_datasetsmodule_providers",{"_index":1089,"title":{},"body":{"modules/DatasetsModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1884,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_imports",{"_index":1885,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":1886,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_prismamodule",{"_index":2397,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":2399,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":2398,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_relationalassistantpersistencemodule",{"_index":2547,"title":{},"body":{"modules/RelationalAssistantPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalassistantpersistencemodule_exports",{"_index":2549,"title":{},"body":{"modules/RelationalAssistantPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalassistantpersistencemodule_imports",{"_index":2548,"title":{},"body":{"modules/RelationalAssistantPersistenceModule.html":{}}}],["cluster_relationaldatasetspersistencemodule",{"_index":2552,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaldatasetspersistencemodule_exports",{"_index":2553,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaldatasetspersistencemodule_imports",{"_index":2554,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{}}}],["cluster_relationaleekfilespersistencemodule",{"_index":2540,"title":{},"body":{"modules/RelationaLeekFilesPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaleekfilespersistencemodule_exports",{"_index":2542,"title":{},"body":{"modules/RelationaLeekFilesPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaleekfilespersistencemodule_imports",{"_index":2541,"title":{},"body":{"modules/RelationaLeekFilesPersistenceModule.html":{}}}],["code",{"_index":1774,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["collect",{"_index":2465,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["column",{"_index":2095,"title":{},"body":{"classes/LeekCSVLoader.html":{}}}],["columns",{"_index":1673,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["command",{"_index":627,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["completed",{"_index":1458,"title":{},"body":{"classes/DocumentSegmentMapper.html":{},"classes/LeekSegment.html":{}}}],["completion",{"_index":397,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["compression",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["concurrency",{"_index":2499,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["config",{"_index":539,"title":{},"body":{"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{}}}],["config.yaml",{"_index":629,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["configmodule",{"_index":529,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["configmodule.forroot",{"_index":534,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["configservice",{"_index":530,"title":{},"body":{"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{}}}],["configuration",{"_index":384,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{},"miscellaneous/typealiases.html":{}}}],["configure.service",{"_index":533,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["configureadapter",{"_index":130,"title":{"classes/ConfigureAdapter.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssistantService.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"overview.html":{}}}],["configuremodule",{"_index":111,"title":{"modules/ConfigureModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"modules.html":{},"overview.html":{}}}],["configureservice",{"_index":332,"title":{"injectables/ConfigureService.html":{}},"body":{"injectables/AssistantService.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["configureservice(config",{"_index":540,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["conflict",{"_index":1691,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["console.error",{"_index":1959,"title":{},"body":{"injectables/FilesService.html":{}}}],["console.log(docs",{"_index":1806,"title":{},"body":{"controllers/ExampleController.html":{}}}],["console.log(generatevectorclassprefixbydatasetid(datasetid",{"_index":2621,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["console.warn(`failed",{"_index":498,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["const",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ContextProvider.html":{},"classes/ConversationDto.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekExcelLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{}}}],["construct",{"_index":2643,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/ConfigureService.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{}}}],["constructor(cls",{"_index":2406,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(config",{"_index":542,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["constructor(configureservice",{"_index":328,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/FilesService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["constructor(datasetrepository",{"_index":1061,"title":{},"body":{"injectables/DatasetService.html":{}}}],["constructor(documentrepository",{"_index":1563,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["constructor(filepath",{"_index":2179,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["constructor(filepathorblob",{"_index":2088,"title":{},"body":{"classes/LeekCSVLoader.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{}}}],["constructor(filepathorbufferoptions",{"_index":2322,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["constructor(filesservice",{"_index":2002,"title":{},"body":{"injectables/IndexingService.html":{}}}],["constructor(httpadapterhost",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(prismaservice",{"_index":285,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/TransactionManager.html":{}}}],["constructor(private",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/ConfigureService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"controllers/IndexingController.html":{},"injectables/LLMGeneratorService.html":{},"injectables/PrismaService.html":{},"controllers/RetrievalController.html":{}}}],["constructor(undefined",{"_index":428,"title":{},"body":{"classes/COSLoader.html":{}}}],["containing",{"_index":2351,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["contains",{"_index":1335,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["content",{"_index":650,"title":{},"body":{"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"classes/DocumentDto.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"injectables/FilesService.html":{},"classes/LeekEmbedding.html":{},"classes/LeekSegment.html":{},"injectables/RetrievalService.html":{},"classes/UploadTextFileDto.html":{}}}],["content.'})@isstring",{"_index":1230,"title":{},"body":{"classes/DocumentDto.html":{}}}],["content.dto",{"_index":658,"title":{},"body":{"classes/ConversationMessageDto.html":{}}}],["content.dto.ts",{"_index":612,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["content.dto.ts:16",{"_index":618,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["content.dto.ts:24",{"_index":621,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["content.length",{"_index":1589,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["content_type",{"_index":613,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["context",{"_index":364,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TransactionOptions.html":{}}}],["context.getargs()[3",{"_index":2335,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["contextprovider",{"_index":570,"title":{"classes/ContextProvider.html":{}},"body":{"classes/ContextProvider.html":{}}}],["contextprovider.namespace}.${key",{"_index":594,"title":{},"body":{"classes/ContextProvider.html":{}}}],["controller",{"_index":94,"title":{"controllers/AppController.html":{},"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["controller('assistants",{"_index":229,"title":{},"body":{"controllers/AssistantController.html":{}}}],["controller('datasets",{"_index":923,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["controller('example",{"_index":1787,"title":{},"body":{"controllers/ExampleController.html":{}}}],["controller('files",{"_index":1841,"title":{},"body":{"controllers/FilesController.html":{}}}],["controllers",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AssistantController.html":{},"modules/AssistantsModule.html":{},"controllers/DatasetController.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{},"overview.html":{}}}],["controllers/dataset.controller",{"_index":1109,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["controllers/document",{"_index":1110,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["controllers/document.controller",{"_index":1112,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["controllers/example.controller",{"_index":1113,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["controllers/indexing.controller",{"_index":1114,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["controllers/retrieval.controller",{"_index":1115,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["conversation",{"_index":169,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{}}}],["conversation(@param('id",{"_index":248,"title":{},"body":{"controllers/AssistantController.html":{}}}],["conversation(id",{"_index":174,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{}}}],["conversationactionenum",{"_index":634,"title":{},"body":{"classes/ConversationDto.html":{},"miscellaneous/enumerations.html":{}}}],["conversationactionenum.next",{"_index":647,"title":{},"body":{"classes/ConversationDto.html":{}}}],["conversationauthordto",{"_index":595,"title":{"classes/ConversationAuthorDto.html":{}},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationMessageDto.html":{}}}],["conversationcontentdto",{"_index":611,"title":{"classes/ConversationContentDto.html":{}},"body":{"classes/ConversationContentDto.html":{},"classes/ConversationMessageDto.html":{}}}],["conversationcontentenum",{"_index":614,"title":{},"body":{"classes/ConversationContentDto.html":{},"miscellaneous/enumerations.html":{}}}],["conversationcontentenum.text",{"_index":623,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["conversationdto",{"_index":175,"title":{"classes/ConversationDto.html":{}},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"classes/ConversationDto.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["conversationmessagedto",{"_index":638,"title":{"classes/ConversationMessageDto.html":{}},"body":{"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{}}}],["cookie",{"_index":2756,"title":{},"body":{"dependencies.html":{}}}],["corresponding",{"_index":2466,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["cos",{"_index":448,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesService.html":{},"classes/LeekFile.html":{},"injectables/ProcessDocumentService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["cos'})@apicreatedresponse({description",{"_index":1822,"title":{},"body":{"controllers/FilesController.html":{}}}],["cos'})@exclude",{"_index":2234,"title":{},"body":{"classes/LeekFile.html":{}}}],["cos_bucket",{"_index":524,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["cos_region",{"_index":525,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["cosclient",{"_index":485,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["cosclient.getobject",{"_index":488,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["cosloader",{"_index":413,"title":{"classes/COSLoader.html":{}},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/ExampleController.html":{},"injectables/ProcessDocumentService.html":{}}}],["cosloaderparams",{"_index":429,"title":{"interfaces/COSLoaderParams.html":{}},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["count",{"_index":1198,"title":{},"body":{"controllers/DocumentController.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentRepository.html":{},"interfaces/Pagination$.html":{},"injectables/RetrievalService.html":{}}}],["countdocumentsbydatasetid",{"_index":1293,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["countdocumentsbydatasetid(datasetid",{"_index":1300,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["countsegmentsbydocumentid",{"_index":1467,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["countsegmentsbydocumentid(documentid",{"_index":1478,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["create",{"_index":316,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/RetrievalService.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["createassistant",{"_index":170,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["createassistant(@body",{"_index":233,"title":{},"body":{"controllers/AssistantController.html":{}}}],["createassistant(createassistantdto",{"_index":184,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{}}}],["createassistant(data",{"_index":288,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{}}}],["createassistantdto",{"_index":185,"title":{"classes/CreateAssistantDto.html":{}},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"classes/CreateAssistantDto.html":{},"classes/UpdateAssistantDto.html":{}}}],["createdapirequestid",{"_index":761,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["createdat",{"_index":318,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DocumentDto.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{}}}],["createdataset",{"_index":898,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["createdataset(@body",{"_index":924,"title":{},"body":{"controllers/DatasetController.html":{}}}],["createdataset(createdatasetdto",{"_index":903,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetService.html":{}}}],["createdataset(data",{"_index":1033,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{}}}],["createdatasetdto",{"_index":680,"title":{"classes/CreateDatasetDto.html":{}},"body":{"classes/CreateDatasetDto.html":{},"controllers/DatasetController.html":{},"injectables/DatasetService.html":{},"classes/UpdateDatasetDto.html":{}}}],["createdatasetprocessruledto",{"_index":705,"title":{"classes/CreateDatasetProcessRuleDto.html":{}},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{}}}],["createdfrom",{"_index":762,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{}}}],["createdfromenum",{"_index":829,"title":{},"body":{"classes/CreateDocumentDto.html":{},"controllers/DocumentController.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{},"miscellaneous/enumerations.html":{}}}],["createdfromenum.web",{"_index":832,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{}}}],["createdfromenum})@isoptional()@isstring",{"_index":2521,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["createdfromenum})@isstring",{"_index":789,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["createdocument",{"_index":1294,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["createdocument(data",{"_index":1302,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["createdocumentbyfile",{"_index":1129,"title":{},"body":{"controllers/DocumentController.html":{}}}],["createdocumentbyfile(createdocumentbyfiledto",{"_index":1148,"title":{},"body":{"controllers/DocumentController.html":{}}}],["createdocumentbyfiledto",{"_index":729,"title":{"classes/CreateDocumentByFileDto.html":{}},"body":{"classes/CreateDocumentByFileDto.html":{},"controllers/DocumentController.html":{},"classes/UpdateDocumentByFileDto.html":{}}}],["createdocumentbytext",{"_index":1130,"title":{},"body":{"controllers/DocumentController.html":{}}}],["createdocumentbytext(createdocumentbytextdto",{"_index":1152,"title":{},"body":{"controllers/DocumentController.html":{}}}],["createdocumentbytextdto",{"_index":749,"title":{"classes/CreateDocumentByTextDto.html":{}},"body":{"classes/CreateDocumentByTextDto.html":{},"controllers/DocumentController.html":{},"classes/UpdateDocumentByTextDto.html":{}}}],["createdocumentdto",{"_index":756,"title":{"classes/CreateDocumentDto.html":{}},"body":{"classes/CreateDocumentDto.html":{},"classes/UpdateDocumentDto.html":{}}}],["createdocumentloader",{"_index":454,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["createdocumentloader(getextensions(this.key",{"_index":470,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["createdocumentsegmentdto",{"_index":850,"title":{"classes/CreateDocumentSegmentDto.html":{}},"body":{"classes/CreateDocumentSegmentDto.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["createdsegment",{"_index":1587,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["createembedding",{"_index":1632,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["createembedding(data",{"_index":1641,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["createembeddingdto",{"_index":861,"title":{"classes/CreateEmbeddingDto.html":{}},"body":{"classes/CreateEmbeddingDto.html":{}}}],["createendcompletion",{"_index":348,"title":{},"body":{"injectables/AssistantService.html":{}}}],["createfile",{"_index":1891,"title":{},"body":{"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{}}}],["createfile(data",{"_index":1893,"title":{},"body":{"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{}}}],["createhash",{"_index":1433,"title":{},"body":{"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentService.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["createhash(buffer",{"_index":1952,"title":{},"body":{"injectables/FilesService.html":{}}}],["createhash(content",{"_index":1580,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["createhash(doc.question",{"_index":2497,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["createhash(domainentity.content",{"_index":1454,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["createhash(pagecontent",{"_index":2453,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["createmany",{"_index":1539,"title":{},"body":{"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["createmanyembeddingsandreturn",{"_index":1633,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["createmanyembeddingsandreturn(data",{"_index":1643,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["createmanysegments",{"_index":1468,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["createmanysegments(data",{"_index":1480,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["createmanysegmentsandreturn",{"_index":1469,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["createmanysegmentsandreturn(data",{"_index":1482,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["createpaginatedresponse",{"_index":1185,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"interfaces/Pagination$.html":{}}}],["createpaginatedresponse(documents",{"_index":1200,"title":{},"body":{"controllers/DocumentController.html":{}}}],["createpaginatedresponse(segments",{"_index":1418,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["createrule",{"_index":989,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["createrule(data",{"_index":996,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["createsegment",{"_index":1371,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["createsegment(data",{"_index":1484,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["createsegment(datasetid",{"_index":1378,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["createtempfilepath",{"_index":424,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["createtokencompletion",{"_index":347,"title":{},"body":{"injectables/AssistantService.html":{}}}],["csvloader",{"_index":2087,"title":{},"body":{"classes/LeekCSVLoader.html":{}}}],["csvloaderoptions",{"_index":2091,"title":{},"body":{"classes/LeekCSVLoader.html":{},"miscellaneous/typealiases.html":{}}}],["ctx",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":2353,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"interfaces/TransactionOptions.html":{}}}],["currentpage",{"_index":1195,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{}}}],["custom",{"_index":717,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/ProcessRuleDto.html":{},"miscellaneous/enumerations.html":{}}}],["d",{"_index":1710,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["d.\"archived",{"_index":1715,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["d.\"docform",{"_index":1701,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["d.\"enabled",{"_index":1714,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["d.\"id",{"_index":1712,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["d3",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["d8ff",{"_index":2300,"title":{},"body":{"classes/LeekSegment.html":{}}}],["data",{"_index":290,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/ConversationDto.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{},"injectables/RetrievalService.html":{}}}],["data')@useinterceptors(undefined",{"_index":1824,"title":{},"body":{"controllers/FilesController.html":{}}}],["data.hash",{"_index":1900,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["data.map(documentsegmentmapper.topersistence",{"_index":1516,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["data.map(embeddingmapper.topersistence",{"_index":1721,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["dataset",{"_index":706,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/DatasetMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/LeekDataset.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{},"classes/UpdateDatasetProcessRuleDto.html":{}}}],["dataset.dto",{"_index":920,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetService.html":{},"classes/UpdateDatasetDto.html":{}}}],["dataset.dto.ts",{"_index":682,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["dataset.dto.ts:17",{"_index":689,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["dataset.dto.ts:25",{"_index":687,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["dataset.dto.ts:44",{"_index":686,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["dataset.dto.ts:70",{"_index":692,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["dataset.repository",{"_index":1039,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["dataset.retrievalmodel",{"_index":2615,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["dataset_id",{"_index":1142,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/RetrievalController.html":{}}}],["datasetcontroller",{"_index":896,"title":{"controllers/DatasetController.html":{}},"body":{"controllers/DatasetController.html":{},"modules/DatasetsModule.html":{}}}],["datasetid",{"_index":661,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["datasetmapper",{"_index":932,"title":{"classes/DatasetMapper.html":{}},"body":{"classes/DatasetMapper.html":{},"injectables/DatasetRelationalRepository.html":{}}}],["datasetmapper.todomain(dataset",{"_index":1043,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["datasetmapper.todomain(entity",{"_index":1046,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["datasetmapper.topersistence(data",{"_index":1042,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["datasetmapper.topersistence(payload",{"_index":1048,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["datasetprocessrule",{"_index":977,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["datasetprocessruledto",{"_index":722,"title":{"classes/DatasetProcessRuleDto.html":{}},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/LeekDatasetProcessRule.html":{}}}],["datasetprocessruleid",{"_index":763,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["datasetprocessrulemapper",{"_index":974,"title":{"classes/DatasetProcessRuleMapper.html":{}},"body":{"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["datasetprocessrulemapper.todomain(datasetprocessrule",{"_index":1014,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["datasetprocessrulemapper.todomain(entity",{"_index":1016,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["datasetprocessrulemapper.topersistence(data",{"_index":1013,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["datasetprocessrulemapper.topersistence(payload",{"_index":1019,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["datasetprocessrulerelationalrepository",{"_index":986,"title":{"injectables/DatasetProcessRuleRelationalRepository.html":{}},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["datasetprocessrulerepository",{"_index":1008,"title":{"classes/DatasetProcessRuleRepository.html":{}},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetService.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["datasetrelationalrepository",{"_index":1030,"title":{"injectables/DatasetRelationalRepository.html":{}},"body":{"injectables/DatasetRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["datasetrepository",{"_index":329,"title":{"classes/DatasetRepository.html":{}},"body":{"injectables/AssistantService.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{},"overview.html":{}}}],["datasets",{"_index":358,"title":{},"body":{"injectables/AssistantService.html":{},"controllers/DatasetController.html":{},"classes/DatasetRepository.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["datasetservice",{"_index":921,"title":{"injectables/DatasetService.html":{}},"body":{"controllers/DatasetController.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"overview.html":{}}}],["datasetsmodule",{"_index":112,"title":{"modules/DatasetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourceenum",{"_index":693,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekDataset.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{},"miscellaneous/enumerations.html":{}}}],["datasourceenum.file",{"_index":699,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekDataset.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{}}}],["datasourceenum})@isoptional()@isstring",{"_index":685,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/QueryDocumentDto.html":{}}}],["datasourceenum})@isstring",{"_index":799,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["datasourceinfo",{"_index":764,"title":{"interfaces/DataSourceInfo.html":{}},"body":{"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"classes/LeekDocument.html":{}}}],["datasourceinfo.fileinfo.fileids[0",{"_index":2006,"title":{},"body":{"injectables/IndexingService.html":{}}}],["datasourcetype",{"_index":683,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekDataset.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{}}}],["date",{"_index":778,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{}}}],["date().toisostring",{"_index":82,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date.now()}.${extension",{"_index":484,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["dayjs",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["decorators",{"_index":176,"title":{},"body":{"controllers/AssistantController.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"controllers/DatasetController.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{},"classes/ErrorResponseDto.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PaginationDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDocumentDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDocument.html":{},"classes/LeekFile.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"injectables/RetrievalService.html":{}}}],["default_pre_processing_rules",{"_index":2442,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["default_segmentation_rule",{"_index":2441,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["define",{"_index":2882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["definitions",{"_index":2880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delete",{"_index":207,"title":{},"body":{"controllers/AssistantController.html":{},"classes/AssistantRepository.html":{},"controllers/DatasetController.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"controllers/DocumentController.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["delete(':dataset_id/documents/:document_id",{"_index":1212,"title":{},"body":{"controllers/DocumentController.html":{}}}],["delete(':dataset_id/documents/:document_id')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1156,"title":{},"body":{"controllers/DocumentController.html":{}}}],["delete(':dataset_id/documents/:document_id/segments/:segment_id",{"_index":1419,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["delete(':dataset_id/documents/:document_id/segments/:segment_id')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1385,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["delete(':id",{"_index":243,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["delete(':id')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":192,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["deleteassistantbyid",{"_index":171,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["deleteassistantbyid(@param('id",{"_index":244,"title":{},"body":{"controllers/AssistantController.html":{}}}],["deleteassistantbyid(id",{"_index":191,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["deletedat",{"_index":1053,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["deletedatasetbyid",{"_index":899,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["deletedatasetbyid(@param('id",{"_index":930,"title":{},"body":{"controllers/DatasetController.html":{}}}],["deletedatasetbyid(id",{"_index":906,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["deletedocumentbyid",{"_index":1131,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["deletedocumentbyid(datasetid",{"_index":1155,"title":{},"body":{"controllers/DocumentController.html":{}}}],["deletedocumentbyid(id",{"_index":1304,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["deleteembeddingbyid",{"_index":1634,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["deleteembeddingbyid(id",{"_index":1645,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["deletemany",{"_index":1358,"title":{},"body":{"classes/DocumentRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["deletemanydocumentsbydatasetid",{"_index":1295,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["deletemanydocumentsbydatasetid(datasetid",{"_index":1306,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["deletemanyembeddingsbyclassprefix",{"_index":1635,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["deletemanyembeddingsbyclassprefix(classprefix",{"_index":1647,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["deletemanyembeddingsbyhashandclassprefix",{"_index":1636,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["deletemanyembeddingsbyhashandclassprefix(hash",{"_index":1649,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["deletemanysegmentsbydatasetid",{"_index":1470,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["deletemanysegmentsbydatasetid(datasetid",{"_index":1486,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["deletemanysegmentsbydocumentid",{"_index":1471,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["deletemanysegmentsbydocumentid(documentid",{"_index":1488,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["deleterulebyid",{"_index":990,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["deleterulebyid(id",{"_index":998,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["deleterulesbydatasetid",{"_index":991,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["deleterulesbydatasetid(datasetid",{"_index":1000,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["deletesegmentbyid",{"_index":1372,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["deletesegmentbyid(datasetid",{"_index":1383,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["deletesegmentbyid(id",{"_index":1490,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["dependencies",{"_index":101,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":2890,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["desc",{"_index":1718,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["description",{"_index":178,"title":{},"body":{"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingRepository.html":{},"classes/ErrorResponseDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"properties.html":{}}}],["descriptor",{"_index":2695,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["descriptor.value",{"_index":2698,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["details",{"_index":2352,"title":{},"body":{"interfaces/Pagination$.html":{},"injectables/RetrievalService.html":{}}}],["disabledat",{"_index":765,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["disabledocumentbyid",{"_index":1132,"title":{},"body":{"controllers/DocumentController.html":{}}}],["disabledocumentbyid(_datasetid",{"_index":1158,"title":{},"body":{"controllers/DocumentController.html":{}}}],["disablesegmentbyid",{"_index":1373,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["disablesegmentbyid(_datasetid",{"_index":1388,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["disablesegmentbyid(segmentid",{"_index":1567,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["distance",{"_index":2631,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["doc",{"_index":2492,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["doc.answer",{"_index":2496,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["doc.metadata",{"_index":2452,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["doc.pagecontent",{"_index":2016,"title":{},"body":{"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{}}}],["doc.pagecontent.split",{"_index":2451,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["doc.question",{"_index":2495,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["docform",{"_index":732,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"injectables/EmbeddingRelationalRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/LeekDocument.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{},"injectables/RetrievalService.html":{}}}],["doclanguage",{"_index":733,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekDocument.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{}}}],["doclanguage='english",{"_index":2493,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["docmetadata",{"_index":766,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["docs",{"_index":1805,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ProcessDocumentService.html":{}}}],["docs.map((doc",{"_index":2450,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["doctype",{"_index":767,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{}}}],["document",{"_index":730,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekExcelLoader.html":{},"injectables/ProcessDocumentService.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadTextFileDto.html":{}}}],["document.'})@isstring",{"_index":754,"title":{},"body":{"classes/CreateDocumentByTextDto.html":{},"classes/UploadTextFileDto.html":{}}}],["document.dto",{"_index":1190,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"classes/UpdateDocumentDto.html":{}}}],["document.dto.ts",{"_index":757,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/QueryDocumentDto.html":{},"classes/UpdateDocumentDto.html":{}}}],["document.dto.ts:101",{"_index":815,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:108",{"_index":811,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:117",{"_index":803,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:124",{"_index":777,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:132",{"_index":785,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:141",{"_index":782,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:149",{"_index":809,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:15",{"_index":791,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:157",{"_index":807,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:16",{"_index":2534,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:166",{"_index":805,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:174",{"_index":806,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:22",{"_index":819,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:25",{"_index":2523,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:30",{"_index":800,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:34",{"_index":2522,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:37",{"_index":817,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:42",{"_index":2528,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:45",{"_index":790,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:50",{"_index":2520,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:53",{"_index":798,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:58",{"_index":2526,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:61",{"_index":797,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:67",{"_index":2524,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:69",{"_index":788,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:75",{"_index":2525,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["document.dto.ts:77",{"_index":813,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:85",{"_index":824,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.dto.ts:93",{"_index":822,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["document.loader",{"_index":455,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["document.metadata",{"_index":2479,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.pagecontent",{"_index":2477,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.pagecontent).join('\\n",{"_index":366,"title":{},"body":{"injectables/AssistantService.html":{}}}],["document.pagecontent).join('\\n\\n",{"_index":2642,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["document.repository",{"_index":1321,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["document.service",{"_index":1125,"title":{},"body":{"modules/DatasetsModule.html":{},"injectables/IndexingService.html":{}}}],["document.service.ts",{"_index":2418,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.service.ts:134",{"_index":2438,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.service.ts:15",{"_index":2425,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.service.ts:161",{"_index":2429,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.service.ts:179",{"_index":2434,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.service.ts:204",{"_index":2431,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.service.ts:32",{"_index":2436,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.service.ts:99",{"_index":2427,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["document.tokens",{"_index":1594,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["document.wordcount",{"_index":1593,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["document_id",{"_index":1144,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["documentcontroller",{"_index":1102,"title":{"controllers/DocumentController.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{}}}],["documentdto",{"_index":1222,"title":{"classes/DocumentDto.html":{}},"body":{"classes/DocumentDto.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["documentid",{"_index":1139,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekSegment.html":{}}}],["documentmapper",{"_index":1233,"title":{"classes/DocumentMapper.html":{}},"body":{"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{}}}],["documentmapper.todomain(document",{"_index":1325,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["documentmapper.todomain(entity",{"_index":1343,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["documentmapper.topersistence(data",{"_index":1324,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["documentmapper.topersistence(payload",{"_index":1346,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["documentrelationalrepository",{"_index":1291,"title":{"injectables/DocumentRelationalRepository.html":{}},"body":{"injectables/DocumentRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["documentrepository",{"_index":1062,"title":{"classes/DocumentRepository.html":{}},"body":{"injectables/DatasetService.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentService.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["documents",{"_index":362,"title":{},"body":{"injectables/AssistantService.html":{},"controllers/DocumentController.html":{},"classes/DocumentRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["documents.map",{"_index":2494,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["documents.map((doc",{"_index":2504,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["documents.map((document",{"_index":365,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["documentsegment",{"_index":1430,"title":{},"body":{"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{}}}],["documentsegmentcontroller",{"_index":1103,"title":{"controllers/DocumentSegmentController.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/DocumentSegmentController.html":{}}}],["documentsegmentmapper",{"_index":1427,"title":{"classes/DocumentSegmentMapper.html":{}},"body":{"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["documentsegmentmapper.todomain(documentsegment",{"_index":1514,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["documentsegmentmapper.todomain(entity",{"_index":1522,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["documentsegmentmapper.topersistence(data",{"_index":1513,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["documentsegmentmapper.topersistence(payload",{"_index":1529,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["documentsegmentrelationalrepository",{"_index":1464,"title":{"injectables/DocumentSegmentRelationalRepository.html":{}},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["documentsegmentrepository",{"_index":1063,"title":{"classes/DocumentSegmentRepository.html":{}},"body":{"injectables/DatasetService.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{},"overview.html":{}}}],["documentsegmentservice",{"_index":1093,"title":{"injectables/DocumentSegmentService.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{},"overview.html":{}}}],["documentservice",{"_index":1094,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"overview.html":{}}}],["docxloader",{"_index":2157,"title":{},"body":{"classes/LeekDocxLoader.html":{}}}],["doe",{"_index":847,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/DocumentDto.html":{},"classes/LeekDocument.html":{}}}],["domain/assistants",{"_index":223,"title":{},"body":{"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["domain/dataset",{"_index":919,"title":{},"body":{"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["domain/document",{"_index":1186,"title":{},"body":{"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["domain/embedding",{"_index":1614,"title":{},"body":{"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["domain/files",{"_index":1838,"title":{},"body":{"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{}}}],["domain/segment",{"_index":1407,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["domainentity",{"_index":261,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["domainentity.answer",{"_index":1446,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.archived",{"_index":1259,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.archivedat",{"_index":1263,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.archivedreason",{"_index":1261,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.classprefix",{"_index":1615,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["domainentity.content",{"_index":1436,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.content.length",{"_index":1450,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.createdapirequestid",{"_index":1245,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.createdat",{"_index":273,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["domainentity.createdfrom",{"_index":1243,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.datasetid",{"_index":269,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["domainentity.datasetprocessruleid",{"_index":1241,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.datasourceinfo",{"_index":1239,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.datasourcetype",{"_index":945,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{}}}],["domainentity.description",{"_index":267,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/FilesMapper.html":{}}}],["domainentity.disabledat",{"_index":1257,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["domainentity.docform",{"_index":1269,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.doclanguage",{"_index":1271,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.docmetadata",{"_index":1267,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.doctype",{"_index":1265,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.documentid",{"_index":1434,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.embeddingmodel",{"_index":949,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["domainentity.embeddingmodelprovider",{"_index":951,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["domainentity.enabled",{"_index":1255,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["domainentity.error",{"_index":1460,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.extension",{"_index":1869,"title":{},"body":{"classes/FilesMapper.html":{}}}],["domainentity.fileid",{"_index":1247,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.hash",{"_index":1617,"title":{},"body":{"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["domainentity.hitcount",{"_index":1444,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.id",{"_index":263,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["domainentity.indexinglatency",{"_index":1253,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["domainentity.indexnodehash",{"_index":1442,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.indexnodeid",{"_index":1440,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.indexstruct",{"_index":947,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["domainentity.key",{"_index":1865,"title":{},"body":{"classes/FilesMapper.html":{}}}],["domainentity.keywords",{"_index":1438,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.mimetype",{"_index":1871,"title":{},"body":{"classes/FilesMapper.html":{}}}],["domainentity.mode",{"_index":981,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["domainentity.modelname",{"_index":1619,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["domainentity.name",{"_index":265,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{},"classes/FilesMapper.html":{}}}],["domainentity.position",{"_index":1237,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["domainentity.provider",{"_index":943,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["domainentity.providername",{"_index":1621,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["domainentity.retrievalmodel",{"_index":953,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["domainentity.rules",{"_index":983,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["domainentity.size",{"_index":1867,"title":{},"body":{"classes/FilesMapper.html":{}}}],["domainentity.status",{"_index":1457,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["domainentity.storagetype",{"_index":1863,"title":{},"body":{"classes/FilesMapper.html":{}}}],["domainentity.systemprompt",{"_index":271,"title":{},"body":{"classes/AssistantMapper.html":{}}}],["domainentity.tokens",{"_index":1251,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["domainentity.updatedat",{"_index":275,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["domainentity.used",{"_index":1873,"title":{},"body":{"classes/FilesMapper.html":{}}}],["domainentity.usedat",{"_index":1875,"title":{},"body":{"classes/FilesMapper.html":{}}}],["domainentity.wordcount",{"_index":1249,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["don't",{"_index":2654,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["download",{"_index":493,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["downloadfile",{"_index":425,"title":{},"body":{"classes/COSLoader.html":{}}}],["downloadfile(filepath",{"_index":440,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["ds",{"_index":1707,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"answer",{"_index":1697,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"content",{"_index":1696,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"documentid",{"_index":1711,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"enabled",{"_index":1713,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"indexnodehash",{"_index":1708,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"keywords",{"_index":1698,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"tokens",{"_index":1700,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["ds.\"wordcount",{"_index":1699,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["dsv",{"_index":2760,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":335,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"classes/PreProcessingRuleDto.html":{}}}],["dto/conversation.dto",{"_index":225,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{}}}],["dto/create",{"_index":226,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["dto/dataset",{"_index":2123,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["dto/document.dto",{"_index":2575,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["dto/indexing",{"_index":1988,"title":{},"body":{"controllers/IndexingController.html":{},"injectables/IndexingService.html":{}}}],["dto/process",{"_index":2005,"title":{},"body":{"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{}}}],["dto/query",{"_index":1189,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["dto/response",{"_index":1990,"title":{},"body":{"controllers/IndexingController.html":{},"injectables/IndexingService.html":{}}}],["dto/retrieval",{"_index":2113,"title":{},"body":{"classes/LeekDataset.html":{},"injectables/RetrievalService.html":{}}}],["dto/similarity",{"_index":2576,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["dto/update",{"_index":228,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["dto/upload",{"_index":1839,"title":{},"body":{"controllers/FilesController.html":{}}}],["during",{"_index":2288,"title":{},"body":{"classes/LeekSegment.html":{}}}],["e",{"_index":1705,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["e.\"classprefix",{"_index":1709,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["e.\"embedding",{"_index":1702,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["e.\"hash",{"_index":1695,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["e49c",{"_index":793,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["each",{"_index":649,"title":{},"body":{"classes/ConversationDto.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{}}}],["email",{"_index":2530,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["embedding",{"_index":700,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateEmbeddingDto.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/LeekDataset.html":{},"classes/LeekEmbedding.html":{},"injectables/RetrievalService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["embedding.classprefix",{"_index":1686,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embedding.dto.ts",{"_index":862,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["embedding.dto.ts:12",{"_index":873,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["embedding.dto.ts:20",{"_index":870,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["embedding.dto.ts:23",{"_index":872,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["embedding.dto.ts:29",{"_index":874,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["embedding.dto.ts:35",{"_index":875,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["embedding.dto.ts:41",{"_index":867,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["embedding.embedding.join",{"_index":1680,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embedding.hash",{"_index":1687,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embedding.id",{"_index":1685,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embedding.modelname",{"_index":1689,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embedding.providername",{"_index":1690,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embedding.repository",{"_index":1662,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["embedding_model_name",{"_index":937,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"classes/LeekDataset.html":{}}}],["embedding_provider_name",{"_index":938,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"classes/LeekDataset.html":{}}}],["embeddinginstance",{"_index":2618,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["embeddinginstance.embedquery(similaritysearchdto.query",{"_index":2620,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["embeddingmapper",{"_index":1609,"title":{"classes/EmbeddingMapper.html":{}},"body":{"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{}}}],["embeddingmapper.todomain(embedding",{"_index":1676,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embeddingmapper.todomain(entity",{"_index":1723,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embeddingmapper.topersistence(data",{"_index":1675,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embeddingmetadata",{"_index":2630,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["embeddingmodel",{"_index":703,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/LeekDataset.html":{}}}],["embeddingmodelprovider",{"_index":704,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/LeekDataset.html":{}}}],["embeddingprovider",{"_index":2803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["embeddingrelationalrepository",{"_index":1627,"title":{"injectables/EmbeddingRelationalRepository.html":{}},"body":{"injectables/EmbeddingRelationalRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["embeddingrepository",{"_index":1064,"title":{"classes/EmbeddingRepository.html":{}},"body":{"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{},"overview.html":{}}}],["embeddings",{"_index":1541,"title":{},"body":{"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/RetrievalService.html":{}}}],["embeddings.map((embedding",{"_index":1678,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embeddings.map((embeddingmetadata",{"_index":2629,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["embeddings.map((item",{"_index":2635,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["embeddingsparams",{"_index":2863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["embeddingsselectcolumns",{"_index":1664,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["embeddingwithmetadata",{"_index":1660,"title":{"interfaces/EmbeddingWithMetadata.html":{}},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{}}}],["en",{"_index":545,"title":{},"body":{"injectables/ConfigureService.html":{},"injectables/LLMGeneratorService.html":{}}}],["en_us",{"_index":2832,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enabled",{"_index":768,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{},"classes/PreProcessingRuleDto.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"injectables/RetrievalService.html":{}}}],["enabledocumentbyid",{"_index":1133,"title":{},"body":{"controllers/DocumentController.html":{}}}],["enabledocumentbyid(_datasetid",{"_index":1161,"title":{},"body":{"controllers/DocumentController.html":{}}}],["enablesegmentbyid",{"_index":1374,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["enablesegmentbyid(_datasetid",{"_index":1392,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["enablesegmentbyid(segmentid",{"_index":1569,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["encodeasync",{"_index":1578,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["encodeasync(content",{"_index":1585,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["encountered",{"_index":87,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/LeekSegment.html":{}}}],["end_completion",{"_index":2606,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["english",{"_index":2432,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["entity",{"_index":306,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/FilesRelationalRepository.html":{}}}],["enum",{"_index":609,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2800,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env.${process.env.node_env",{"_index":536,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["env.local",{"_index":537,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["envfilepath",{"_index":535,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["epub2",{"_index":2763,"title":{},"body":{"dependencies.html":{}}}],["epubloader",{"_index":2162,"title":{},"body":{"classes/LeekEPubLoader.html":{}}}],["epubloaderoptions",{"_index":2163,"title":{},"body":{"classes/LeekEPubLoader.html":{},"miscellaneous/typealiases.html":{}}}],["err",{"_index":491,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["err.message",{"_index":494,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/DocumentSegmentService.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/FilesService.html":{},"classes/LeekSegment.html":{},"injectables/PrismaService.html":{}}}],["error('no",{"_index":2191,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["error('transactionmanager",{"_index":2701,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["error(`failed",{"_index":473,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["error(`sheet",{"_index":2193,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["error.code",{"_index":1777,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.details",{"_index":1778,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.getresponse",{"_index":1776,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.getstatus",{"_index":1775,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.message",{"_index":475,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["error.stack",{"_index":1597,"title":{},"body":{"injectables/DocumentSegmentService.html":{},"injectables/FilesService.html":{}}}],["errormessage",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errorresponsedto",{"_index":1752,"title":{"classes/ErrorResponseDto.html":{}},"body":{"classes/ErrorResponseDto.html":{}}}],["errorresponsepayload",{"_index":89,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errorsinterceptor",{"_index":1761,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"injectables/ErrorsInterceptor.html":{}}}],["esm",{"_index":2888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["estimate",{"_index":881,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{}}}],["estimate.dto",{"_index":1989,"title":{},"body":{"controllers/IndexingController.html":{},"injectables/IndexingService.html":{}}}],["estimate.dto.ts",{"_index":877,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/ResponseIndexingEstimateDto.html":{}}}],["estimate.dto.ts:14",{"_index":2563,"title":{},"body":{"classes/ResponseIndexingEstimateDto.html":{}}}],["estimate.dto.ts:42",{"_index":1997,"title":{},"body":{"classes/IndexingEstimateDto.html":{}}}],["estimate.dto.ts:49",{"_index":1999,"title":{},"body":{"classes/IndexingEstimateDto.html":{}}}],["estimate.dto.ts:56",{"_index":1995,"title":{},"body":{"classes/IndexingEstimateDto.html":{}}}],["estimate.dto.ts:8",{"_index":2562,"title":{},"body":{"classes/ResponseIndexingEstimateDto.html":{}}}],["example",{"_index":600,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DocumentDto.html":{},"classes/ErrorResponseDto.html":{},"controllers/ExampleController.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["example'})@isoptional()@isstring",{"_index":812,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["examplecontroller",{"_index":1106,"title":{"controllers/ExampleController.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/ExampleController.html":{}}}],["excel",{"_index":1780,"title":{},"body":{"controllers/ExampleController.html":{},"classes/LeekExcelLoader.html":{}}}],["exception",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.stack",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exclude",{"_index":2240,"title":{},"body":{"classes/LeekFile.html":{}}}],["excluded.\"embedding",{"_index":1692,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["executioncontext",{"_index":1765,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["existingsegment",{"_index":1581,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["existingsegment.indexnodehash",{"_index":1605,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["existingsegment.tokens",{"_index":1603,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["existingsegment.wordcount",{"_index":1602,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["exists",{"_index":2645,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["expandkeywordstosubtokens",{"_index":2021,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["expandkeywordstosubtokens(tokens",{"_index":2023,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["explain",{"_index":625,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["exports",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["express",{"_index":1834,"title":{},"body":{"controllers/FilesController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1819,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UploadFileDto.html":{}}}],["extends",{"_index":415,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/PrismaService.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["extension",{"_index":481,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{},"classes/LeekFile.html":{}}}],["extractdocumentsfromcos",{"_index":2420,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["extractdocumentsfromcos(key",{"_index":2428,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["extractkeywordsfromtext",{"_index":2022,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["extractkeywordsfromtext(text",{"_index":2025,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["extractqapairsfromtext",{"_index":2059,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["extractqapairsfromtext(qa",{"_index":2068,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["f0d2d08922ff/989efe03",{"_index":2223,"title":{},"body":{"classes/LeekFile.html":{}}}],["f58e",{"_index":2144,"title":{},"body":{"classes/LeekDocument.html":{}}}],["f607d5c1",{"_index":2143,"title":{},"body":{"classes/LeekDocument.html":{}}}],["f864",{"_index":2292,"title":{},"body":{"classes/LeekSegment.html":{}}}],["fails",{"_index":1949,"title":{},"body":{"injectables/FilesService.html":{}}}],["fallback_language",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["fallbacklanguage",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["fallbackmessage",{"_index":2567,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["false",{"_index":775,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/DatasetMapper.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekDocument.html":{},"classes/LeekFile.html":{},"classes/PaginationResponseDto.html":{},"classes/QueryDocumentDto.html":{},"classes/RetrievalModelDto.html":{}}}],["false})@exclude",{"_index":2236,"title":{},"body":{"classes/LeekFile.html":{}}}],["false})@isboolean",{"_index":776,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["false})@isoptional()@isboolean",{"_index":2519,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/RetrievalModelDto.html":{}}}],["fetch",{"_index":2612,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["fieldname",{"_index":2337,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["fields",{"_index":2532,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"miscellaneous/enumerations.html":{}}}],["file.dto",{"_index":1187,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/FilesController.html":{},"classes/UpdateDocumentByFileDto.html":{}}}],["file.dto.ts",{"_index":731,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["file.dto.ts:11",{"_index":2723,"title":{},"body":{"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["file.dto.ts:17",{"_index":742,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{}}}],["file.dto.ts:18",{"_index":2728,"title":{},"body":{"classes/UploadTextFileDto.html":{}}}],["file.dto.ts:24",{"_index":2727,"title":{},"body":{"classes/UploadTextFileDto.html":{}}}],["file.dto.ts:26",{"_index":745,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{}}}],["file.dto.ts:35",{"_index":738,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{}}}],["file.dto.ts:43",{"_index":740,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{}}}],["file.dto.ts:5",{"_index":2726,"title":{},"body":{"classes/UploadFileDto.html":{}}}],["file_upload_max_size",{"_index":1836,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileentity",{"_index":1860,"title":{},"body":{"classes/FilesMapper.html":{}}}],["filefilter",{"_index":1837,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileid",{"_index":769,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/IndexingService.html":{},"classes/LeekDocument.html":{}}}],["fileids",{"_index":882,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["fileinfo",{"_index":878,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["fileinterceptor",{"_index":1832,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor('file",{"_index":1844,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":1954,"title":{},"body":{"injectables/FilesService.html":{}}}],["filepath",{"_index":438,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["filepathorblob",{"_index":2093,"title":{},"body":{"classes/LeekCSVLoader.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{}}}],["filepathorbufferoptions",{"_index":2327,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["files",{"_index":1809,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.controller",{"_index":1888,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.repository",{"_index":1897,"title":{},"body":{"injectables/FilesRelationalRepository.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{}}}],["files.service",{"_index":1840,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["filescontroller",{"_index":1807,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["filesize",{"_index":1846,"title":{},"body":{"controllers/FilesController.html":{}}}],["filesmapper",{"_index":1858,"title":{"classes/FilesMapper.html":{}},"body":{"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{}}}],["filesmapper.todomain(entity",{"_index":1901,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["filesmapper.todomain(file",{"_index":1904,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["filesmapper.topersistence(data",{"_index":1903,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["filesmodule",{"_index":113,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesrelationalrepository",{"_index":1889,"title":{"injectables/FilesRelationalRepository.html":{}},"body":{"injectables/FilesRelationalRepository.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{}}}],["filesrepository",{"_index":1896,"title":{"classes/FilesRepository.html":{}},"body":{"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"overview.html":{}}}],["filesservice",{"_index":1095,"title":{"injectables/FilesService.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"overview.html":{}}}],["filter",{"_index":1745,"title":{},"body":{"classes/EmbeddingRepository.html":{},"injectables/ProcessDocumentService.html":{}}}],["filter((op",{"_index":2470,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["filtering",{"_index":2626,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["filteroptions",{"_index":1328,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["final",{"_index":396,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["finally",{"_index":476,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{},"injectables/TransactionManager.html":{}}}],["find",{"_index":322,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/FilesService.html":{}}}],["findassistantbyid",{"_index":172,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["findassistantbyid(@param('id",{"_index":237,"title":{},"body":{"controllers/AssistantController.html":{}}}],["findassistantbyid(id",{"_index":196,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["finddatasetbyid",{"_index":900,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["finddatasetbyid(@param('id",{"_index":927,"title":{},"body":{"controllers/DatasetController.html":{}}}],["finddatasetbyid(id",{"_index":909,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["finddocumentbyid",{"_index":1134,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["finddocumentbyid(@param('document_id",{"_index":1202,"title":{},"body":{"controllers/DocumentController.html":{}}}],["finddocumentbyid(documentid",{"_index":1164,"title":{},"body":{"controllers/DocumentController.html":{}}}],["finddocumentbyid(id",{"_index":1308,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["finddocumentbynameanddatasetid",{"_index":1296,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["finddocumentbynameanddatasetid(name",{"_index":1310,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["findembeddingbyhash",{"_index":1637,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["findembeddingbyhash(hash",{"_index":1651,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["findfilebyid",{"_index":1810,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{}}}],["findfilebyid(@param('id",{"_index":1856,"title":{},"body":{"controllers/FilesController.html":{}}}],["findfilebyid(id",{"_index":1813,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{}}}],["findmany",{"_index":1057,"title":{},"body":{"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findmanyassistants",{"_index":284,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{}}}],["findmanydatasets",{"_index":901,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["findmanydocumentsbydatasetid",{"_index":1297,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["findmanydocumentsbydatasetid(datasetid",{"_index":1312,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["findmanydocumentspaginatedbydatasetid",{"_index":1135,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["findmanydocumentspaginatedbydatasetid(datasetid",{"_index":1170,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["findmanyhashesbydatasetidandhashes",{"_index":1472,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findmanyhashesbydatasetidandhashes(hashes",{"_index":1492,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findmanysegmentsbydocumentid",{"_index":1473,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findmanysegmentsbydocumentid(documentid",{"_index":1495,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findmanysegmentsbyhashanddatasetid",{"_index":1474,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findmanysegmentsbyhashanddatasetid(hashes",{"_index":1497,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findmanysegmentspaginatedbydocumentid",{"_index":1375,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["findmanysegmentspaginatedbydocumentid(_datasetid",{"_index":1395,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["findmanysegmentspaginatedbydocumentid(documentid",{"_index":1499,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["findrulebydatasetid",{"_index":992,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["findrulebydatasetid(datasetid",{"_index":1002,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["findrulebyid",{"_index":993,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["findrulebyid(id",{"_index":1004,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["finds",{"_index":1915,"title":{},"body":{"injectables/FilesService.html":{}}}],["findsegmentbydatasetdocumentandhash",{"_index":1475,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findsegmentbydatasetdocumentandhash(datasetid",{"_index":1501,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findsegmentbyid",{"_index":1376,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["findsegmentbyid(_datasetid",{"_index":1399,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["findsegmentbyid(id",{"_index":1504,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["findsegmentbyid(segmentid",{"_index":1572,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["format",{"_index":2724,"title":{},"body":{"classes/UploadFileDto.html":{}}}],["found",{"_index":1917,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{},"interfaces/TransactionOptions.html":{}}}],["fs",{"_index":457,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["fs.mkdtempsync(path.join(os.tmpdir",{"_index":1940,"title":{},"body":{"injectables/FilesService.html":{}}}],["fs.readfilesync(filepath",{"_index":1944,"title":{},"body":{"injectables/FilesService.html":{}}}],["fs.unlinksync(filepath",{"_index":1947,"title":{},"body":{"injectables/FilesService.html":{}}}],["fs.writefilesync(filepath",{"_index":1942,"title":{},"body":{"injectables/FilesService.html":{}}}],["fsdefault",{"_index":443,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["function",{"_index":2364,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2468,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["generate",{"_index":2619,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["generated",{"_index":390,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["generateqadocumentfromtextandlanguage",{"_index":1781,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/LLMGeneratorService.html":{}}}],["generateqadocumentfromtextandlanguage(text",{"_index":2049,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["generateqadocumentsforbatch",{"_index":2421,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["generateqadocumentsforbatch(documents",{"_index":2430,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["generateqadocumentsforsingle",{"_index":2422,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["generateqadocumentsforsingle(document",{"_index":2433,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["generates",{"_index":2345,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["generatevectorclassprefixbydatasetid",{"_index":939,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekDataset.html":{},"injectables/RetrievalService.html":{}}}],["generatevectorclassprefixbydatasetid('3f29e2b7",{"_index":2114,"title":{},"body":{"classes/LeekDataset.html":{}}}],["generatevectorclassprefixbydatasetid(datasetid",{"_index":1596,"title":{},"body":{"injectables/DocumentSegmentService.html":{},"injectables/RetrievalService.html":{}}}],["generatevectorclassprefixbydatasetid(id",{"_index":960,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["generation",{"_index":2596,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["generator.service",{"_index":1123,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/ExampleController.html":{},"injectables/ProcessDocumentService.html":{}}}],["generator.service.ts",{"_index":2047,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["generator.service.ts:12",{"_index":2048,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["generator.service.ts:25",{"_index":2050,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["generatorqaprompt",{"_index":2056,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["generatorqaprompt.pipe(initmodels",{"_index":2063,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["generic",{"_index":2878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["get(':dataset_id/documents/:document_id",{"_index":1201,"title":{},"body":{"controllers/DocumentController.html":{}}}],["get(':dataset_id/documents/:document_id')@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":1165,"title":{},"body":{"controllers/DocumentController.html":{}}}],["get(':dataset_id/documents/:document_id/segments",{"_index":1414,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["get(':dataset_id/documents/:document_id/segments')@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":1397,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["get(':dataset_id/documents/:document_id/segments/:segment_id",{"_index":1411,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["get(':dataset_id/documents/:document_id/segments/:segment_id')@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":1400,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["get(':id",{"_index":235,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/FilesController.html":{}}}],["get(':id')@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":197,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/FilesController.html":{}}}],["get()@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":912,"title":{},"body":{"controllers/DatasetController.html":{}}}],["get(key",{"_index":582,"title":{},"body":{"classes/ContextProvider.html":{}}}],["getextensions",{"_index":453,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["getextensions(key",{"_index":2449,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["getextensions(originalname",{"_index":1938,"title":{},"body":{"injectables/FilesService.html":{}}}],["getextensions(this.key",{"_index":482,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["gethello",{"_index":159,"title":{},"body":{"injectables/AppService.html":{}}}],["getkeywithnamespace",{"_index":575,"title":{},"body":{"classes/ContextProvider.html":{}}}],["getkeywithnamespace(key",{"_index":585,"title":{},"body":{"classes/ContextProvider.html":{}}}],["getprisma",{"_index":2411,"title":{},"body":{"injectables/PrismaService.html":{}}}],["getting",{"_index":2845,"title":{"index.html":{}},"body":{}}],["global",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigureModule.html":{}}}],["gpt",{"_index":377,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["gpt4_o",{"_index":2837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gpt4_o_mini",{"_index":2838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["handler",{"_index":2467,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["handler(content",{"_index":2476,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["handlers",{"_index":2469,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["handlers.reduce((content",{"_index":2475,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["handles",{"_index":1927,"title":{},"body":{"injectables/FilesService.html":{},"injectables/RetrievalService.html":{}}}],["hash",{"_index":864,"title":{},"body":{"classes/CreateEmbeddingDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"injectables/ProcessDocumentService.html":{}}}],["hashes",{"_index":1494,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/RetrievalService.html":{}}}],["hasnextpage",{"_index":2367,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{}}}],["hasprevpage",{"_index":2375,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["header",{"_index":1972,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["headerresolver",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["headerresolver(['x",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["headers",{"_index":1975,"title":{},"body":{"injectables/FilesService.html":{}}}],["headers[0",{"_index":1977,"title":{},"body":{"injectables/FilesService.html":{}}}],["headers[1",{"_index":1979,"title":{},"body":{"injectables/FilesService.html":{}}}],["hello",{"_index":162,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":2767,"title":{},"body":{"dependencies.html":{}}}],["history",{"_index":2644,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["history.prompt",{"_index":2610,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["hit",{"_index":2632,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["hitcount",{"_index":1531,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/LeekSegment.html":{}}}],["hittesting(@param('dataset_id",{"_index":2579,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["host",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["host.switchtohttp",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["html",{"_index":2769,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":1759,"title":{},"body":{"classes/ErrorResponseDto.html":{}}}],["httpadapter",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(response",{"_index":91,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":208,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["httpcode(httpstatus.created",{"_index":231,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":240,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["httpcode(httpstatus.ok",{"_index":236,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"controllers/RetrievalController.html":{}}}],["httpexception",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ErrorsInterceptor.html":{}}}],["httpexception).message",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexceptionresponse",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexceptionresponse.hasownproperty('message",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["httpstatus.internal_server_error",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatuscode",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["human",{"_index":372,"title":{},"body":{"injectables/AssistantService.html":{}}}],["i18n",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["i18n/dist/i18n.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forrootasync",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":182,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PreProcessingRuleDto.html":{},"injectables/RetrievalService.html":{}}}],["id'})@isoptional()@isstring",{"_index":787,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["id.util",{"_index":942,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekDataset.html":{},"injectables/RetrievalService.html":{}}}],["id`、`createdat",{"_index":1368,"title":{},"body":{"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["id`、`createdat`、`updatedat",{"_index":1059,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["idcolumn",{"_index":1629,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["id、createdat",{"_index":1354,"title":{},"body":{"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["id、createdat、updatedat",{"_index":1052,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["id获取指定文件信息'})@apiparam({name",{"_index":1814,"title":{},"body":{"controllers/FilesController.html":{}}}],["id获取文档分段的详细信息。'})@apiparam({name",{"_index":1401,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/ConfigureService.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["include",{"_index":2350,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["increment",{"_index":1532,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":1750,"title":{},"body":{"interfaces/EmbeddingWithMetadata.html":{}}}],["indexenum",{"_index":746,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/LeekDocument.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{},"injectables/RetrievalService.html":{},"miscellaneous/enumerations.html":{}}}],["indexenum.paragraph_index",{"_index":747,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{},"injectables/RetrievalService.html":{}}}],["indexenum.qa_index",{"_index":2448,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["indexenum})@isoptional()@isstring",{"_index":737,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"classes/QueryDocumentDto.html":{}}}],["indexing",{"_index":880,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"classes/LeekSegment.html":{},"classes/ResponseIndexingEstimateDto.html":{}}}],["indexingcontroller",{"_index":1104,"title":{"controllers/IndexingController.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/IndexingController.html":{}}}],["indexingestimate",{"_index":1983,"title":{},"body":{"controllers/IndexingController.html":{},"injectables/IndexingService.html":{}}}],["indexingestimate(@body",{"_index":1992,"title":{},"body":{"controllers/IndexingController.html":{}}}],["indexingestimate(indexingestimatedto",{"_index":1984,"title":{},"body":{"controllers/IndexingController.html":{},"injectables/IndexingService.html":{}}}],["indexingestimatedto",{"_index":883,"title":{"classes/IndexingEstimateDto.html":{}},"body":{"interfaces/DataSourceInfo.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{}}}],["indexingestimateprocessruledto",{"_index":879,"title":{"classes/IndexingEstimateProcessRuleDto.html":{}},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{}}}],["indexingestimateprocessruledto})@isobject",{"_index":1998,"title":{},"body":{"classes/IndexingEstimateDto.html":{}}}],["indexinglatency",{"_index":770,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["indexingservice",{"_index":1096,"title":{"injectables/IndexingService.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"overview.html":{}}}],["indexnodehash",{"_index":1502,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekSegment.html":{}}}],["indexnodeid",{"_index":1591,"title":{},"body":{"injectables/DocumentSegmentService.html":{},"classes/LeekSegment.html":{}}}],["indexstruct",{"_index":2099,"title":{},"body":{"classes/LeekDataset.html":{}}}],["indicates",{"_index":2384,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["infrastructure/persistence/assistants.repository",{"_index":350,"title":{},"body":{"injectables/AssistantService.html":{}}}],["infrastructure/persistence/dataset",{"_index":1073,"title":{},"body":{"injectables/DatasetService.html":{}}}],["infrastructure/persistence/dataset.repository",{"_index":1074,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/RetrievalService.html":{}}}],["infrastructure/persistence/document",{"_index":1075,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"injectables/RetrievalService.html":{}}}],["infrastructure/persistence/document.repository",{"_index":1077,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{}}}],["infrastructure/persistence/embedding.repository",{"_index":1078,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"injectables/RetrievalService.html":{}}}],["infrastructure/persistence/files.repository",{"_index":1937,"title":{},"body":{"injectables/FilesService.html":{}}}],["infrastructure/persistence/relational",{"_index":412,"title":{},"body":{"modules/AssistantsModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{}}}],["inherit",{"_index":2710,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["initembeddings",{"_index":1670,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"injectables/RetrievalService.html":{}}}],["initialize",{"_index":2616,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["initmodels",{"_index":2055,"title":{},"body":{"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{},"miscellaneous/typealiases.html":{}}}],["inject",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigureModule.html":{}}}],["injectable",{"_index":156,"title":{"injectables/AppService.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"injectables/ConfigureService.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{}},"body":{"injectables/AppService.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"injectables/ConfigureService.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{}}}],["injectables",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"injectables/ConfigureService.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"overview.html":{}}}],["input",{"_index":373,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["insensitive",{"_index":1336,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["insert",{"_index":1683,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["instance",{"_index":2617,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["instanceof",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ErrorsInterceptor.html":{}}}],["intercept",{"_index":1763,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1764,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interface",{"_index":456,"title":{"interfaces/COSLoaderParams.html":{},"interfaces/DataSourceInfo.html":{},"interfaces/EmbeddingWithMetadata.html":{},"interfaces/Pagination$.html":{},"interfaces/TransactionOptions.html":{}},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"interfaces/DataSourceInfo.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/IndexingEstimateDto.html":{},"interfaces/Pagination$.html":{},"interfaces/TransactionOptions.html":{}}}],["interfaces",{"_index":502,"title":{},"body":{"interfaces/COSLoaderParams.html":{},"interfaces/DataSourceInfo.html":{},"interfaces/EmbeddingWithMetadata.html":{},"interfaces/Pagination$.html":{},"interfaces/TransactionOptions.html":{},"overview.html":{}}}],["internal",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["internalservererrorexception",{"_index":1577,"title":{},"body":{"injectables/DocumentSegmentService.html":{},"injectables/FilesService.html":{}}}],["isarray",{"_index":622,"title":{},"body":{"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/ProcessRuleDto.html":{}}}],["isarray()@isnotempty",{"_index":620,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["isarray()@validatenested({each",{"_index":640,"title":{},"body":{"classes/ConversationDto.html":{}}}],["isboolean",{"_index":826,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/RetrievalModelDto.html":{}}}],["isdate",{"_index":827,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["isempty",{"_index":2605,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["isempty(messages",{"_index":2647,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["isempty(retrievalmodel",{"_index":2613,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["isenum",{"_index":606,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{}}}],["isenum(conversationactionenum",{"_index":648,"title":{},"body":{"classes/ConversationDto.html":{}}}],["isenum(conversationcontentenum",{"_index":624,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["isenum(role",{"_index":610,"title":{},"body":{"classes/ConversationAuthorDto.html":{}}}],["isint",{"_index":825,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["isjson",{"_index":725,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{}}}],["isnotempty",{"_index":605,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/CreateDatasetDto.html":{}}}],["isnumber",{"_index":828,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/RetrievalModelDto.html":{}}}],["isobject",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateDatasetDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DocumentDto.html":{},"classes/IndexingEstimateDto.html":{},"classes/SimilaritySearchDto.html":{}}}],["isobject(httpexceptionresponse",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["isolationlevel",{"_index":2689,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["isoptional",{"_index":677,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/DocumentDto.html":{},"classes/PaginationDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":2511,"title":{},"body":{"classes/ProcessRuleDto.html":{}}}],["isoptional()@isstring",{"_index":670,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/SegmentationRuleDto.html":{}}}],["ispositive",{"_index":2373,"title":{},"body":{"classes/PaginationDto.html":{}}}],["isstring",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConversationContentDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"classes/DocumentDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadTextFileDto.html":{}}}],["isstring()@isnotempty",{"_index":688,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["isstring()@isnotempty()@isenum(conversationcontentenum",{"_index":617,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["isstring(httpexceptionresponse",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["issue",{"_index":2891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["isuuid",{"_index":678,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{}}}],["item",{"_index":2206,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["item.author.role",{"_index":2649,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["item.content.parts[0]}`).join('\\n",{"_index":2650,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["item.hash",{"_index":2636,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["item.metadata",{"_index":2208,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["item.pagecontent",{"_index":2207,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["item.word",{"_index":2034,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["items",{"_index":885,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{}}}],["jieba",{"_index":1579,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["jiebakeywordservice",{"_index":1097,"title":{"injectables/JiebaKeywordService.html":{}},"body":{"modules/DatasetsModule.html":{},"injectables/DocumentSegmentService.html":{},"injectables/JiebaKeywordService.html":{},"overview.html":{}}}],["john",{"_index":846,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/DocumentDto.html":{},"classes/LeekDocument.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["john'})@isoptional()@isstring",{"_index":2533,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["join",{"_index":1706,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["json",{"_index":721,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["json.stringify",{"_index":2657,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["jsondata",{"_index":2194,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["jsondata.slice(1",{"_index":2196,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["jsonlinesloader",{"_index":2245,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{}}}],["jsonlinesloaderoptions",{"_index":2247,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"miscellaneous/typealiases.html":{}}}],["jsonloader",{"_index":2249,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{}}}],["jsonloaderoptions",{"_index":2251,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1656,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["key",{"_index":419,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ContextProvider.html":{},"interfaces/EmbeddingWithMetadata.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"classes/LeekFile.html":{},"injectables/ProcessDocumentService.html":{}}}],["keyword.service",{"_index":1121,"title":{},"body":{"modules/DatasetsModule.html":{},"injectables/DocumentSegmentService.html":{}}}],["keyword.service.ts",{"_index":2020,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["keyword.service.ts:15",{"_index":2027,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["keyword.service.ts:26",{"_index":2024,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["keywords",{"_index":853,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekSegment.html":{}}}],["know",{"_index":2655,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["lang",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["langchain",{"_index":2771,"title":{},"body":{"dependencies.html":{}}}],["langchain/baidu",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["langchain/community",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["langchain/community/document_loaders/fs/csv",{"_index":2094,"title":{},"body":{"classes/LeekCSVLoader.html":{}}}],["langchain/community/document_loaders/fs/docx",{"_index":2159,"title":{},"body":{"classes/LeekDocxLoader.html":{}}}],["langchain/community/document_loaders/fs/epub",{"_index":2165,"title":{},"body":{"classes/LeekEPubLoader.html":{}}}],["langchain/community/document_loaders/fs/pdf",{"_index":2260,"title":{},"body":{"classes/LeekPDFLoader.html":{}}}],["langchain/community/document_loaders/fs/pptx",{"_index":2268,"title":{},"body":{"classes/LeekPPTXLoader.html":{}}}],["langchain/community/document_loaders/fs/srt",{"_index":2273,"title":{},"body":{"classes/LeekSRTLoader.html":{}}}],["langchain/community/document_loaders/fs/unstructured",{"_index":2328,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["langchain/core",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["langchain/core/document_loaders/base",{"_index":2187,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["langchain/core/documents",{"_index":2188,"title":{},"body":{"classes/LeekExcelLoader.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["langchain/core/output_parsers",{"_index":2054,"title":{},"body":{"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{}}}],["langchain/core/prompts",{"_index":340,"title":{},"body":{"injectables/AssistantService.html":{}}}],["langchain/document_loaders/base",{"_index":452,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["langchain/document_loaders/fs/json",{"_index":2250,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{}}}],["langchain/document_loaders/fs/text",{"_index":2318,"title":{},"body":{"classes/LeekTextLoader.html":{}}}],["langchain/langgraph",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["langchain/openai",{"_index":342,"title":{},"body":{"injectables/AssistantService.html":{},"dependencies.html":{}}}],["language",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/LLMGeneratorService.html":{}}}],["language_key",{"_index":579,"title":{},"body":{"classes/ContextProvider.html":{}}}],["languagecode",{"_index":2805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["languagekey",{"_index":573,"title":{},"body":{"classes/ContextProvider.html":{}}}],["languagemodel",{"_index":2807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["large",{"_index":702,"title":{},"body":{"classes/CreateDatasetDto.html":{},"injectables/LLMGeneratorService.html":{}}}],["latin1').tostring('utf",{"_index":1956,"title":{},"body":{"injectables/FilesService.html":{}}}],["leek/assistants/assistants.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["leek/assistants/dto/conversation.dto",{"_index":2574,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["leek/common",{"_index":1072,"title":{},"body":{"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{},"interfaces/Pagination$.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"injectables/TransactionManager.html":{}}}],["leek/configure",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"modules/DatasetsModule.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/ProcessDocumentService.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{}}}],["leek/constants",{"_index":608,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DatasetMapper.html":{},"controllers/DocumentController.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"interfaces/EmbeddingWithMetadata.html":{},"controllers/FilesController.html":{},"classes/IndexingEstimateDto.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"injectables/RetrievalService.html":{}}}],["leek/datasets/datasets.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["leek/datasets/infrastructure/persistence/dataset.repository",{"_index":345,"title":{},"body":{"injectables/AssistantService.html":{}}}],["leek/datasets/infrastructure/persistence/relational",{"_index":409,"title":{},"body":{"modules/AssistantsModule.html":{}}}],["leek/datasets/services/retrieval.service",{"_index":346,"title":{},"body":{"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{}}}],["leek/files/files.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["leek/files/files.service",{"_index":1107,"title":{},"body":{"modules/DatasetsModule.html":{},"injectables/IndexingService.html":{}}}],["leek/files/infrastructure/persistence/relational",{"_index":1108,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["leek/interfaces",{"_index":1320,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["leek/langchain",{"_index":1786,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/LLMGeneratorService.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["leek/prisma",{"_index":296,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"modules/DatasetsModule.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/FilesRelationalRepository.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"interfaces/TransactionOptions.html":{}}}],["leek/upload_files/${uuid()}.${extension",{"_index":1953,"title":{},"body":{"injectables/FilesService.html":{}}}],["leek/upload_files/52f9bfc0",{"_index":1800,"title":{},"body":{"controllers/ExampleController.html":{}}}],["leek/utils",{"_index":349,"title":{},"body":{"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/DatasetMapper.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["leekassistant",{"_index":188,"title":{"classes/LeekAssistant.html":{}},"body":{"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/LeekAssistant.html":{}}}],["leekcsvloader",{"_index":2085,"title":{"classes/LeekCSVLoader.html":{}},"body":{"classes/LeekCSVLoader.html":{}}}],["leekdataset",{"_index":904,"title":{"classes/LeekDataset.html":{}},"body":{"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"classes/LeekDataset.html":{}}}],["leekdatasetprocessrule",{"_index":979,"title":{"classes/LeekDatasetProcessRule.html":{}},"body":{"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/LeekDatasetProcessRule.html":{}}}],["leekdocument",{"_index":1168,"title":{"classes/LeekDocument.html":{}},"body":{"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"classes/LeekDocument.html":{}}}],["leekdocument})@apiparam({name",{"_index":1150,"title":{},"body":{"controllers/DocumentController.html":{}}}],["leekdocxloader",{"_index":2155,"title":{"classes/LeekDocxLoader.html":{}},"body":{"classes/LeekDocxLoader.html":{}}}],["leekembedding",{"_index":1612,"title":{"classes/LeekEmbedding.html":{}},"body":{"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/LeekEmbedding.html":{}}}],["leekembedding['id",{"_index":1724,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["leekepubloader",{"_index":2160,"title":{"classes/LeekEPubLoader.html":{}},"body":{"classes/LeekEPubLoader.html":{}}}],["leekexcelloader",{"_index":2175,"title":{"classes/LeekExcelLoader.html":{}},"body":{"classes/LeekExcelLoader.html":{}}}],["leekfile",{"_index":1816,"title":{"classes/LeekFile.html":{}},"body":{"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"classes/LeekFile.html":{}}}],["leekfile['id",{"_index":1905,"title":{},"body":{"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{}}}],["leekfile})@apiconsumes('multipart/form",{"_index":1823,"title":{},"body":{"controllers/FilesController.html":{}}}],["leekjsonlinesloader",{"_index":2243,"title":{"classes/LeekJSONLinesLoader.html":{}},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{}}}],["leekjsonloader",{"_index":2252,"title":{"classes/LeekJSONLoader.html":{}},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{}}}],["leekpdfloader",{"_index":2255,"title":{"classes/LeekPDFLoader.html":{}},"body":{"classes/LeekPDFLoader.html":{}}}],["leekpptxloader",{"_index":2264,"title":{"classes/LeekPPTXLoader.html":{}},"body":{"classes/LeekPPTXLoader.html":{}}}],["leeksegment",{"_index":1381,"title":{"classes/LeekSegment.html":{}},"body":{"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekSegment.html":{}}}],["leeksrtloader",{"_index":2269,"title":{"classes/LeekSRTLoader.html":{}},"body":{"classes/LeekSRTLoader.html":{}}}],["leektextloader",{"_index":2314,"title":{"classes/LeekTextLoader.html":{}},"body":{"classes/LeekTextLoader.html":{}}}],["leekunstructuredloader",{"_index":2319,"title":{"classes/LeekUnstructuredLoader.html":{}},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["legend",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["license",{"_index":2857,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":1719,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"injectables/ProcessDocumentService.html":{},"dependencies.html":{}}}],["limit(async",{"_index":2505,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["limits",{"_index":1845,"title":{},"body":{"controllers/FilesController.html":{}}}],["list",{"_index":2604,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["literal",{"_index":511,"title":{},"body":{"classes/ConfigureAdapter.html":{},"interfaces/DataSourceInfo.html":{},"classes/LeekExcelLoader.html":{},"miscellaneous/typealiases.html":{}}}],["llm",{"_index":2051,"title":{},"body":{"injectables/LLMGeneratorService.html":{},"injectables/ProcessDocumentService.html":{},"miscellaneous/enumerations.html":{}}}],["llmgeneratorservice",{"_index":1098,"title":{"injectables/LLMGeneratorService.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/ExampleController.html":{},"injectables/LLMGeneratorService.html":{},"injectables/ProcessDocumentService.html":{},"overview.html":{}}}],["llmroletype",{"_index":2866,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":427,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/LeekExcelLoader.html":{}}}],["loader",{"_index":469,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/ExampleController.html":{},"injectables/ProcessDocumentService.html":{}}}],["loader.load",{"_index":471,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/ExampleController.html":{},"injectables/ProcessDocumentService.html":{}}}],["loaderoptions",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":2843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["locale",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost",{"_index":548,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["lodash",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/RetrievalService.html":{},"dependencies.html":{}}}],["logger",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DocumentSegmentService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{}}}],["logger(allexceptionsfilter.name",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logger(documentsegmentservice.name",{"_index":1575,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["logger.debug",{"_index":2339,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger.error(error",{"_index":2415,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logginginterceptor",{"_index":2330,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{}}}],["longer",{"_index":783,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["mammoth",{"_index":2774,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":2627,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["map((op",{"_index":2473,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["mappers/assistants.mapper",{"_index":299,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["mappers/dataset",{"_index":1010,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["mappers/dataset.mapper",{"_index":1040,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["mappers/document",{"_index":1510,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["mappers/document.mapper",{"_index":1322,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["mappers/embedding.mapper",{"_index":1663,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["mappers/files.mapper",{"_index":1898,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["marker",{"_index":398,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["matched",{"_index":2633,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["matches",{"_index":2039,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["matching",{"_index":93,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.ceil(count",{"_index":2366,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["math.max(currentpage",{"_index":1330,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["math.max(pagesize",{"_index":1332,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["maxkeywords=10",{"_index":2031,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["maxkeywordsperchunk",{"_index":2026,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["maxkeywordsperchunk).map((item",{"_index":2033,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["maxposition",{"_index":1583,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["maxtokens",{"_index":2064,"title":{},"body":{"injectables/LLMGeneratorService.html":{},"classes/SegmentationRuleDto.html":{}}}],["maxwait",{"_index":2690,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["message",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/RetrievalService.html":{}}}],["message\":{\"author\":{\"role\":\"assistant\"},\"content\":{\"content_type\":\"text\",\"parts\":[\"i",{"_index":651,"title":{},"body":{"classes/ConversationDto.html":{}}}],["message.dto",{"_index":646,"title":{},"body":{"classes/ConversationDto.html":{}}}],["message.dto.ts",{"_index":652,"title":{},"body":{"classes/ConversationMessageDto.html":{}}}],["message.dto.ts:13",{"_index":655,"title":{},"body":{"classes/ConversationMessageDto.html":{}}}],["message.dto.ts:18",{"_index":656,"title":{},"body":{"classes/ConversationMessageDto.html":{}}}],["messages",{"_index":357,"title":{},"body":{"injectables/AssistantService.html":{},"classes/ConversationDto.html":{},"injectables/RetrievalService.html":{}}}],["messages.map((item",{"_index":2648,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["messages[0].content.parts[0",{"_index":361,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["metadata",{"_index":1224,"title":{},"body":{"classes/DocumentDto.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{},"interfaces/Pagination$.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.ts",{"_index":1749,"title":{},"body":{"interfaces/EmbeddingWithMetadata.html":{}}}],["metadata.ts:8",{"_index":1751,"title":{},"body":{"interfaces/EmbeddingWithMetadata.html":{}}}],["method",{"_index":79,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"classes/ContextProvider.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekExcelLoader.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{}}}],["middleware",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["mime",{"_index":1930,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekFile.html":{}}}],["mimetype",{"_index":1925,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekFile.html":{}}}],["mini",{"_index":2839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellaneous",{"_index":2799,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":708,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleDto.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/IndexingService.html":{},"classes/LeekDatasetProcessRule.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{}}}],["model",{"_index":376,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["model.dto",{"_index":696,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/LeekDataset.html":{},"injectables/RetrievalService.html":{},"classes/SimilaritySearchDto.html":{}}}],["model.dto.ts",{"_index":2586,"title":{},"body":{"classes/RetrievalModelDto.html":{}}}],["model.dto.ts:12",{"_index":2591,"title":{},"body":{"classes/RetrievalModelDto.html":{}}}],["model.dto.ts:20",{"_index":2588,"title":{},"body":{"classes/RetrievalModelDto.html":{}}}],["model.dto.ts:28",{"_index":2589,"title":{},"body":{"classes/RetrievalModelDto.html":{}}}],["modelinstancesmap",{"_index":2868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["modelname",{"_index":865,"title":{},"body":{"classes/CreateEmbeddingDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekEmbedding.html":{}}}],["modelprovider",{"_index":2809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modelreturntype",{"_index":2869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["modelsparams",{"_index":2870,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["module",{"_index":98,"title":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["modules",{"_index":100,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["mount",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["multimodal_text",{"_index":2816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multimodaltext",{"_index":2815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["n",{"_index":367,"title":{},"body":{"injectables/AssistantService.html":{},"classes/SegmentationRuleDto.html":{}}}],["n\\n",{"_index":2666,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginationResponseDto.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadTextFileDto.html":{}}}],["name.dto",{"_index":1191,"title":{},"body":{"controllers/DocumentController.html":{}}}],["name.dto.ts",{"_index":2719,"title":{},"body":{"classes/UpdateDocumentNameDto.html":{}}}],["name.dto.ts:11",{"_index":2720,"title":{},"body":{"classes/UpdateDocumentNameDto.html":{}}}],["namespace",{"_index":574,"title":{},"body":{"classes/ContextProvider.html":{}}}],["needed",{"_index":844,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["needed'})@isoptional()@isstring",{"_index":784,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["nestinterceptor",{"_index":1768,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextProvider.html":{},"injectables/PrismaService.html":{},"injectables/TransactionManager.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginationResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":531,"title":{},"body":{"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1833,"title":{},"body":{"controllers/FilesController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":220,"title":{},"body":{"controllers/AssistantController.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetProcessRuleDto.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"controllers/DocumentSegmentController.html":{},"classes/ErrorResponseDto.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"dependencies.html":{}}}],["new",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"modules/ConfigureModule.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesService.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"interfaces/TransactionOptions.html":{}}}],["next",{"_index":635,"title":{},"body":{"classes/ConversationDto.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginationResponseDto.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["next.handle().pipe",{"_index":1771,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["next.handle().pipe(timeout(5000",{"_index":2676,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["nf",{"_index":631,"title":{},"body":{"classes/ConversationContentDto.html":{}}}],["node:fs",{"_index":444,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["node:os",{"_index":446,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["node:path",{"_index":447,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["nodejieba",{"_index":2029,"title":{},"body":{"injectables/JiebaKeywordService.html":{},"dependencies.html":{}}}],["nodejieba.extract(text",{"_index":2032,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["nodejs",{"_index":449,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{},"dependencies.html":{}}}],["nodemailer",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["notion",{"_index":2820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notion_import",{"_index":2821,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["null",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"injectables/TransactionManager.html":{}}}],["number",{"_index":513,"title":{},"body":{"classes/ConfigureAdapter.html":{},"classes/CreateDocumentDto.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"interfaces/TransactionOptions.html":{},"miscellaneous/typealiases.html":{}}}],["number})@isoptional()@ispositive()@type(undefined",{"_index":2370,"title":{},"body":{"classes/PaginationDto.html":{}}}],["object",{"_index":550,"title":{},"body":{"injectables/ConfigureService.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"interfaces/Pagination$.html":{}}}],["object.defineproperty(pagination",{"_index":2386,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["objects",{"_index":2628,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["observable",{"_index":343,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["observable((subscriber",{"_index":388,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["officeparser",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["omit",{"_index":314,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/FilesRepository.html":{}}}],["omittype",{"_index":972,"title":{},"body":{"classes/DatasetProcessRuleDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{}}}],["onmoduledestroy",{"_index":2403,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":2404,"title":{},"body":{"injectables/PrismaService.html":{}}}],["op.enabled",{"_index":2471,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["openai",{"_index":504,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{},"classes/CreateDatasetDto.html":{},"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginationDto.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateDatasetDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["options",{"_index":2090,"title":{},"body":{"classes/LeekCSVLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekPDFLoader.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{}}}],["order",{"_index":1717,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["orderby",{"_index":1339,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["original",{"_index":1929,"title":{},"body":{"injectables/FilesService.html":{}}}],["originaldocumentid",{"_index":734,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{}}}],["originalmethod",{"_index":2697,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["originalmethod.apply(this",{"_index":2703,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["originalname",{"_index":1924,"title":{},"body":{"injectables/FilesService.html":{}}}],["originalname}.txt",{"_index":1941,"title":{},"body":{"injectables/FilesService.html":{}}}],["os",{"_index":445,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["out",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["output",{"_index":489,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/RetrievalService.html":{}}}],["overloading",{"_index":2501,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["overview",{"_index":2851,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":2440,"title":{},"body":{"injectables/ProcessDocumentService.html":{},"dependencies.html":{}}}],["package",{"_index":2729,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":2356,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{}}}],["pagecontent",{"_index":1225,"title":{},"body":{"classes/DocumentDto.html":{},"classes/LeekExcelLoader.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{}}}],["pages",{"_index":2362,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{}}}],["pagesize",{"_index":1197,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{}}}],["paginated",{"_index":2346,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["paginatedresult",{"_index":1319,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":2343,"title":{"interfaces/Pagination$.html":{}},"body":{"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{}}}],["pagination${classreference.name}responsedto",{"_index":2388,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["pagination.count",{"_index":2360,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["pagination.currentpage",{"_index":2355,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["pagination.size",{"_index":2358,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["paginationdto",{"_index":2368,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginationDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["paginationresponse",{"_index":1184,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["paginationresponse(classreference",{"_index":2381,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["paginationresponse(leekdocument",{"_index":1193,"title":{},"body":{"controllers/DocumentController.html":{}}}],["paginationresponse(leeksegment",{"_index":1415,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["paginationresponsedto",{"_index":1183,"title":{"classes/PaginationResponseDto.html":{}},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{}}}],["pairs",{"_index":2061,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["paragraph_index",{"_index":2823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["param",{"_index":209,"title":{},"body":{"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"controllers/DatasetController.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingRepository.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"interfaces/Pagination$.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["param('dataset_id",{"_index":1194,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/RetrievalController.html":{}}}],["param('document_id",{"_index":1210,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["param('id",{"_index":241,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["param('segment_id",{"_index":1412,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{}}}],["parenttype",{"_index":2336,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["parse",{"_index":2178,"title":{},"body":{"classes/LeekExcelLoader.html":{},"dependencies.html":{}}}],["parse(workbook",{"_index":2184,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["parsed",{"_index":2201,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["parsed.length",{"_index":2204,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["parsed.map",{"_index":2205,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["parseditemseparator",{"_index":2263,"title":{},"body":{"classes/LeekPDFLoader.html":{}}}],["parseint(this.config.get('port",{"_index":554,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["parseint(this.config.get('rate_limit_max",{"_index":560,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["parseint(this.config.get('rate_limit_window_ms",{"_index":557,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["parser",{"_index":2651,"title":{},"body":{"injectables/RetrievalService.html":{},"dependencies.html":{}}}],["parseuuidpipe",{"_index":210,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"controllers/RetrievalController.html":{}}}],["partial",{"_index":323,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["partialtype",{"_index":973,"title":{},"body":{"classes/DatasetProcessRuleDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["partialtype(createassistantdto",{"_index":2705,"title":{},"body":{"classes/UpdateAssistantDto.html":{}}}],["partialtype(createdatasetprocessruledto",{"_index":2712,"title":{},"body":{"classes/UpdateDatasetProcessRuleDto.html":{}}}],["partialtype(createdocumentbyfiledto",{"_index":2714,"title":{},"body":{"classes/UpdateDocumentByFileDto.html":{}}}],["partialtype(createdocumentbytextdto",{"_index":2716,"title":{},"body":{"classes/UpdateDocumentByTextDto.html":{}}}],["partialtype(createdocumentdto",{"_index":2718,"title":{},"body":{"classes/UpdateDocumentDto.html":{}}}],["partialtype(createdocumentsegmentdto",{"_index":2721,"title":{},"body":{"classes/UpdateDocumentSegmentDto.html":{}}}],["partialtype(omittype(createdatasetprocessruledto",{"_index":2000,"title":{},"body":{"classes/IndexingEstimateProcessRuleDto.html":{}}}],["partialtype(omittype(processruledto",{"_index":971,"title":{},"body":{"classes/DatasetProcessRuleDto.html":{}}}],["partialtype(paginationdto",{"_index":2518,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["parts",{"_index":393,"title":{},"body":{"injectables/AssistantService.html":{},"classes/ConversationContentDto.html":{}}}],["patch",{"_index":211,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["patch(':dataset_id/documents/:document_id/rename",{"_index":1209,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/rename')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1178,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/segments/:segment_id",{"_index":1421,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["patch(':dataset_id/documents/:document_id/segments/:segment_id')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1405,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["patch(':dataset_id/documents/:document_id/segments/:segment_id/disable",{"_index":1423,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["patch(':dataset_id/documents/:document_id/segments/:segment_id/disable')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1390,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["patch(':dataset_id/documents/:document_id/segments/:segment_id/enable",{"_index":1425,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["patch(':dataset_id/documents/:document_id/segments/:segment_id/enable')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1393,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/archive",{"_index":1218,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/archive')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1140,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/disable",{"_index":1214,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/disable')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1159,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/enable",{"_index":1216,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/enable')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1162,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/un_archive",{"_index":1220,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':dataset_id/documents/:document_id/status/un_archive')@version('1')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":1181,"title":{},"body":{"controllers/DocumentController.html":{}}}],["patch(':id",{"_index":239,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["path",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["path.join(__dirname",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(tempdir",{"_index":483,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["payload",{"_index":294,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["pdf",{"_index":736,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{},"classes/LeekFile.html":{},"classes/QueryDocumentDto.html":{},"dependencies.html":{}}}],["pdf'})@isoptional()@isstring",{"_index":808,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/QueryDocumentDto.html":{}}}],["pdfjs",{"_index":2262,"title":{},"body":{"classes/LeekPDFLoader.html":{}}}],["pdfloader",{"_index":2257,"title":{},"body":{"classes/LeekPDFLoader.html":{}}}],["pdfloaderoptions",{"_index":2258,"title":{},"body":{"classes/LeekPDFLoader.html":{},"miscellaneous/typealiases.html":{}}}],["per",{"_index":2359,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{}}}],["perform",{"_index":2622,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["performs",{"_index":2599,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["persistence.module",{"_index":410,"title":{},"body":{"modules/AssistantsModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{}}}],["persistence.module.ts",{"_index":2544,"title":{},"body":{"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["persistenceentity",{"_index":277,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["persistenceentity.answer",{"_index":1462,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.archived",{"_index":1283,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.archivedat",{"_index":1285,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.archivedreason",{"_index":1284,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.classprefix",{"_index":1623,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["persistenceentity.content",{"_index":1449,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.createdapirequestid",{"_index":1277,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.createdat",{"_index":1461,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.createdfrom",{"_index":1276,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.datasetid",{"_index":280,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.datasetprocessruleid",{"_index":1275,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.datasourceinfo",{"_index":1274,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.datasourcetype",{"_index":956,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{}}}],["persistenceentity.description",{"_index":279,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/FilesMapper.html":{}}}],["persistenceentity.disabledat",{"_index":1282,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.docform",{"_index":1288,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.doclanguage",{"_index":1289,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.docmetadata",{"_index":1287,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.doctype",{"_index":1286,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.documentid",{"_index":1448,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.embeddingmodel",{"_index":961,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["persistenceentity.embeddingmodelprovider",{"_index":962,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["persistenceentity.enabled",{"_index":1281,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.error",{"_index":1459,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.extension",{"_index":1880,"title":{},"body":{"classes/FilesMapper.html":{}}}],["persistenceentity.fileid",{"_index":1290,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.hash",{"_index":1624,"title":{},"body":{"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["persistenceentity.hitcount",{"_index":1455,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.id",{"_index":955,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.indexinglatency",{"_index":1280,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["persistenceentity.indexnodehash",{"_index":1453,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.indexnodeid",{"_index":1452,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.indexstruct",{"_index":957,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["persistenceentity.key",{"_index":1878,"title":{},"body":{"classes/FilesMapper.html":{}}}],["persistenceentity.keywords",{"_index":1451,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.mimetype",{"_index":1881,"title":{},"body":{"classes/FilesMapper.html":{}}}],["persistenceentity.mode",{"_index":984,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["persistenceentity.modelname",{"_index":1625,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["persistenceentity.name",{"_index":278,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{},"classes/FilesMapper.html":{}}}],["persistenceentity.position",{"_index":1273,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.providername",{"_index":1626,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["persistenceentity.retrievalmodel",{"_index":963,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["persistenceentity.rules",{"_index":985,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["persistenceentity.size",{"_index":1879,"title":{},"body":{"classes/FilesMapper.html":{}}}],["persistenceentity.status",{"_index":1456,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.storagetype",{"_index":1877,"title":{},"body":{"classes/FilesMapper.html":{}}}],["persistenceentity.systemprompt",{"_index":281,"title":{},"body":{"classes/AssistantMapper.html":{}}}],["persistenceentity.tokens",{"_index":1279,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.updatedat",{"_index":1463,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["persistenceentity.used",{"_index":1882,"title":{},"body":{"classes/FilesMapper.html":{}}}],["persistenceentity.usedat",{"_index":1883,"title":{},"body":{"classes/FilesMapper.html":{}}}],["persistenceentity.wordcount",{"_index":1278,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["pg",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["pgvector",{"_index":958,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/LeekDataset.html":{}}}],["phone",{"_index":2531,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["picktype",{"_index":2708,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["picktype(createdatasetdto",{"_index":2707,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["pipe",{"_index":2653,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["pipe(new",{"_index":2066,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["plain",{"_index":1933,"title":{},"body":{"injectables/FilesService.html":{}}}],["playwright",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["plimit",{"_index":2439,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["plimit(10",{"_index":2498,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["pointer",{"_index":2246,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{}}}],["pointers",{"_index":2253,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{}}}],["port",{"_index":505,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["position",{"_index":771,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["post",{"_index":212,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["post(':dataset_id/document/create_by_file",{"_index":1207,"title":{},"body":{"controllers/DocumentController.html":{}}}],["post(':dataset_id/document/create_by_file')@version('1')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1149,"title":{},"body":{"controllers/DocumentController.html":{}}}],["post(':dataset_id/document/create_by_text",{"_index":1204,"title":{},"body":{"controllers/DocumentController.html":{}}}],["post(':dataset_id/document/create_by_text')@version('1')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1153,"title":{},"body":{"controllers/DocumentController.html":{}}}],["post(':dataset_id/documents",{"_index":1192,"title":{},"body":{"controllers/DocumentController.html":{}}}],["post(':dataset_id/documents')@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":1172,"title":{},"body":{"controllers/DocumentController.html":{}}}],["post(':dataset_id/documents/:document_id/segments",{"_index":1409,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["post(':dataset_id/documents/:document_id/segments')@version('1')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1379,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["post(':dataset_id/hit_testing",{"_index":2578,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["post(':dataset_id/rag",{"_index":2582,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["post(':dataset_id/rag')@sse()@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":2568,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["post(':dataset_id/retrieve",{"_index":2580,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["post(':dataset_id/retrieve')@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":2572,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["post(':id/conversation",{"_index":246,"title":{},"body":{"controllers/AssistantController.html":{}}}],["post(':id/conversation')@sse()@version('1')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":177,"title":{},"body":{"controllers/AssistantController.html":{}}}],["post('generateqadocumentfromtextandlanguage",{"_index":1788,"title":{},"body":{"controllers/ExampleController.html":{}}}],["post('generateqadocumentfromtextandlanguage')@version('1')@httpcode(httpstatus.created",{"_index":1783,"title":{},"body":{"controllers/ExampleController.html":{}}}],["post('indexing_estimate",{"_index":1991,"title":{},"body":{"controllers/IndexingController.html":{}}}],["post('indexing_estimate')@version('1')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1985,"title":{},"body":{"controllers/IndexingController.html":{}}}],["post('upload_file",{"_index":1842,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload_file')@version('1')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1821,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload_text_file",{"_index":1850,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload_text_file')@version('1')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1828,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@version('1')@httpcode(httpstatus.created)@apioperation({summary",{"_index":186,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["pptxloader",{"_index":2266,"title":{},"body":{"classes/LeekPPTXLoader.html":{}}}],["pre",{"_index":2516,"title":{},"body":{"classes/ProcessRuleDto.html":{}}}],["prefix",{"_index":166,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"classes/LeekDataset.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["preprocessingruledto",{"_index":2389,"title":{"classes/PreProcessingRuleDto.html":{}},"body":{"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{}}}],["preprocessingrules",{"_index":2010,"title":{},"body":{"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{}}}],["previous",{"_index":2385,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["prisma",{"_index":326,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{},"injectables/PrismaService.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{}}}],["prisma.documentsegmentwhereinput",{"_index":1519,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["prisma.documentwhereinput",{"_index":1334,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["prisma.jsonvalue",{"_index":690,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["prisma.service",{"_index":2401,"title":{},"body":{"modules/PrismaModule.html":{},"injectables/TransactionManager.html":{}}}],["prisma.sortorder.desc",{"_index":1340,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["prisma.sql",{"_index":1682,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["prisma.sql`and",{"_index":1716,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["prisma.transactionclient",{"_index":1352,"title":{},"body":{"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["prisma.transactionisolationlevel",{"_index":2691,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["prisma/client",{"_index":262,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/FilesMapper.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{},"injectables/PrismaService.html":{},"interfaces/TransactionOptions.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":1351,"title":{},"body":{"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":1091,"title":{"modules/PrismaModule.html":{}},"body":{"modules/DatasetsModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":286,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AssistantRelationalRepository.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/FilesRelationalRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/TransactionManager.html":{},"overview.html":{}}}],["prismasqlfilter",{"_index":1747,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["prismavectorstore",{"_index":1667,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["prismavectorstore.contentcolumn",{"_index":1666,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["prismavectorstore.idcolumn",{"_index":1665,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["prismavectorstore.withmodel(this.prismaservice).create",{"_index":1669,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["private",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ContextProvider.html":{},"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekExcelLoader.html":{},"injectables/ProcessDocumentService.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{}}}],["process",{"_index":474,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetService.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"classes/LeekDatasetProcessRule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{},"classes/UpdateDatasetProcessRuleDto.html":{}}}],["processdocumentservice",{"_index":1099,"title":{"injectables/ProcessDocumentService.html":{}},"body":{"modules/DatasetsModule.html":{},"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{},"overview.html":{}}}],["processdocumentswithrules",{"_index":2423,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["processdocumentswithrules(key",{"_index":2435,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["processeddocuments",{"_index":2008,"title":{},"body":{"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{}}}],["processeddocuments.length",{"_index":2018,"title":{},"body":{"injectables/IndexingService.html":{}}}],["processeddocuments.map((doc",{"_index":2015,"title":{},"body":{"injectables/IndexingService.html":{}}}],["processedrule",{"_index":2457,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["processing",{"_index":2391,"title":{},"body":{"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"injectables/RetrievalService.html":{}}}],["processrule",{"_index":735,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{}}}],["processrule.mode",{"_index":2446,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["processruledto",{"_index":743,"title":{"classes/ProcessRuleDto.html":{}},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/DatasetProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{}}}],["processruledto).preprocessingrules",{"_index":2011,"title":{},"body":{"injectables/IndexingService.html":{}}}],["processruledto).segmentation",{"_index":2013,"title":{},"body":{"injectables/IndexingService.html":{}}}],["processruledto['preprocessingrules",{"_index":2458,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["processruledto['segmentation",{"_index":2480,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["processruledto})@isoptional()@validatenested()@type(undefined",{"_index":744,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{}}}],["promise",{"_index":190,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/DatasetController.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekExcelLoader.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{}}}],["promise((resolve",{"_index":486,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["promise.all",{"_index":1337,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["promise.all(tasks",{"_index":2507,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["promise.resolve",{"_index":1773,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["prompt",{"_index":674,"title":{},"body":{"classes/CreateAssistantDto.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"injectables/RetrievalService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DocumentDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"classes/IndexingEstimateDto.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekSegment.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"properties.html":{}}}],["property",{"_index":2895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["propertydescriptor",{"_index":2696,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["propertyname",{"_index":2694,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["protected",{"_index":2177,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["provide",{"_index":538,"title":{},"body":{"modules/ConfigureModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["provided",{"_index":2611,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["provider",{"_index":698,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/LeekDataset.html":{},"miscellaneous/typealiases.html":{}}}],["providerconfigmap",{"_index":2874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["providername",{"_index":866,"title":{},"body":{"classes/CreateEmbeddingDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekEmbedding.html":{}}}],["providers",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["public",{"_index":426,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/LeekExcelLoader.html":{},"injectables/PrismaService.html":{}}}],["q",{"_index":1327,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["qa",{"_index":804,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekDocument.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{}}}],["qa.prompt",{"_index":2058,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["qa_index",{"_index":2825,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qa_model",{"_index":2826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qianfan",{"_index":2735,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["queries",{"_index":1677,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["query",{"_index":360,"title":{},"body":{"injectables/AssistantService.html":{},"controllers/DocumentSegmentController.html":{},"classes/EmbeddingRepository.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"injectables/RetrievalService.html":{},"classes/SimilaritySearchDto.html":{}}}],["query_context_prefix",{"_index":936,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["querydocumentdto",{"_index":1171,"title":{"classes/QueryDocumentDto.html":{}},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"classes/QueryDocumentDto.html":{}}}],["queryresolver",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["queryresolver(['lang",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["querysegmentdto",{"_index":1396,"title":{"classes/QuerySegmentDto.html":{}},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/QuerySegmentDto.html":{}}}],["question",{"_index":1978,"title":{},"body":{"injectables/FilesService.html":{},"injectables/RetrievalService.html":{}}}],["rag",{"_index":2565,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["rag(datasetid",{"_index":2566,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["ragchathistoryprompt",{"_index":2607,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["ragchathistoryprompt.pipe(initmodels",{"_index":2652,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["rate_limit_max",{"_index":521,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["rate_limit_window_ms",{"_index":520,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["raw",{"_index":258,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["raw.answer",{"_index":1447,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["raw.archived",{"_index":1260,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.archivedat",{"_index":1264,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.archivedreason",{"_index":1262,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.classprefix",{"_index":1616,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["raw.content",{"_index":1437,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["raw.createdapirequestid",{"_index":1246,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.createdat",{"_index":274,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["raw.createdfrom",{"_index":1244,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.datasetid",{"_index":270,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["raw.datasetprocessruleid",{"_index":1242,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.datasourceinfo",{"_index":1240,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.datasourcetype",{"_index":946,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{}}}],["raw.description",{"_index":268,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/FilesMapper.html":{}}}],["raw.disabledat",{"_index":1258,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["raw.docform",{"_index":1270,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.doclanguage",{"_index":1272,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.docmetadata",{"_index":1268,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.doctype",{"_index":1266,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.documentid",{"_index":1435,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["raw.embeddingmodel",{"_index":950,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["raw.embeddingmodelprovider",{"_index":952,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["raw.enabled",{"_index":1256,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["raw.extension",{"_index":1870,"title":{},"body":{"classes/FilesMapper.html":{}}}],["raw.fileid",{"_index":1248,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.hash",{"_index":1618,"title":{},"body":{"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["raw.hitcount",{"_index":1445,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["raw.id",{"_index":264,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["raw.indexinglatency",{"_index":1254,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["raw.indexnodehash",{"_index":1443,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["raw.indexnodeid",{"_index":1441,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["raw.indexstruct",{"_index":948,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["raw.key",{"_index":1866,"title":{},"body":{"classes/FilesMapper.html":{}}}],["raw.keywords",{"_index":1439,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["raw.mimetype",{"_index":1872,"title":{},"body":{"classes/FilesMapper.html":{}}}],["raw.mode",{"_index":982,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["raw.modelname",{"_index":1620,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["raw.name",{"_index":266,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{},"classes/FilesMapper.html":{}}}],["raw.position",{"_index":1238,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["raw.provider",{"_index":944,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["raw.providername",{"_index":1622,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["raw.retrievalmodel",{"_index":954,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["raw.size",{"_index":1868,"title":{},"body":{"classes/FilesMapper.html":{}}}],["raw.storagetype",{"_index":1864,"title":{},"body":{"classes/FilesMapper.html":{}}}],["raw.systemprompt",{"_index":272,"title":{},"body":{"classes/AssistantMapper.html":{}}}],["raw.tokens",{"_index":1252,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["raw.updatedat",{"_index":276,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["raw.used",{"_index":1874,"title":{},"body":{"classes/FilesMapper.html":{}}}],["raw.usedat",{"_index":1876,"title":{},"body":{"classes/FilesMapper.html":{}}}],["raw.wordcount",{"_index":1250,"title":{},"body":{"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"controllers/DatasetController.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{}}}],["record",{"_index":1226,"title":{},"body":{"classes/DocumentDto.html":{},"classes/LeekExcelLoader.html":{},"injectables/ProcessDocumentService.html":{},"miscellaneous/typealiases.html":{}}}],["recursivechunksplitter",{"_index":2443,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["recursivechunksplitter(documents",{"_index":2481,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["reflect",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["reflection",{"_index":2893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["region",{"_index":420,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["register",{"_index":1739,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["registerembedding(data",{"_index":1744,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["registerembeddings",{"_index":1638,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["registerembeddings(data",{"_index":1737,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["registerembeddings(embeddings",{"_index":1653,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["reject",{"_index":487,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["reject(new",{"_index":492,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["relationalassistantpersistencemodule",{"_index":406,"title":{"modules/RelationalAssistantPersistenceModule.html":{}},"body":{"modules/AssistantsModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules.html":{},"overview.html":{}}}],["relationaldatasetspersistencemodule",{"_index":407,"title":{"modules/RelationalDatasetsPersistenceModule.html":{}},"body":{"modules/AssistantsModule.html":{},"modules/DatasetsModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"modules.html":{},"overview.html":{}}}],["relationaleekfilespersistencemodule",{"_index":1092,"title":{"modules/RelationaLeekFilesPersistenceModule.html":{}},"body":{"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules.html":{},"overview.html":{}}}],["relevant",{"_index":2638,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["removeextraspaces",{"_index":2395,"title":{},"body":{"classes/PreProcessingRuleDto.html":{},"injectables/ProcessDocumentService.html":{}}}],["removeextraspaces'})@isstring",{"_index":2393,"title":{},"body":{"classes/PreProcessingRuleDto.html":{}}}],["removeurlsemails",{"_index":2396,"title":{},"body":{"classes/PreProcessingRuleDto.html":{},"injectables/ProcessDocumentService.html":{}}}],["rename",{"_index":1366,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["renamedocumentbyid",{"_index":1136,"title":{},"body":{"controllers/DocumentController.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["renamedocumentbyid(_datasetid",{"_index":1176,"title":{},"body":{"controllers/DocumentController.html":{}}}],["renamedocumentbyid(id",{"_index":1315,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["replace('/\\n/g",{"_index":968,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["replace('/\\r/g",{"_index":969,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["report",{"_index":849,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["repositories/assistants.repository",{"_index":2551,"title":{},"body":{"modules/RelationalAssistantPersistenceModule.html":{}}}],["repositories/dataset",{"_index":2556,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{}}}],["repositories/dataset.repository",{"_index":2557,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{}}}],["repositories/document",{"_index":2558,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{}}}],["repositories/document.repository",{"_index":2559,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{}}}],["repositories/embedding.repository",{"_index":2560,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{}}}],["repositories/files.repository",{"_index":2545,"title":{},"body":{"modules/RelationaLeekFilesPersistenceModule.html":{}}}],["repository",{"_index":1916,"title":{},"body":{"injectables/FilesService.html":{},"injectables/RetrievalService.html":{}}}],["represent",{"_index":2879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["request",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ContextProvider.html":{},"classes/CreateDocumentDto.html":{},"classes/ErrorResponseDto.html":{},"classes/LeekDocument.html":{}}}],["request.headers.accept",{"_index":83,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.method",{"_index":80,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.url",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["required",{"_index":868,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["reset",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}],["resolve",{"_index":495,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["resolvers",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["resources",{"_index":2502,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["response",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/Pagination$.html":{},"injectables/RetrievalService.html":{}}}],["response.dto.ts",{"_index":1754,"title":{},"body":{"classes/ErrorResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:10",{"_index":2380,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:11",{"_index":2377,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:12",{"_index":2378,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:14",{"_index":1755,"title":{},"body":{"classes/ErrorResponseDto.html":{}}}],["response.dto.ts:5",{"_index":1760,"title":{},"body":{"classes/ErrorResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:7",{"_index":2379,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:8",{"_index":1757,"title":{},"body":{"classes/ErrorResponseDto.html":{},"classes/PaginationResponseDto.html":{}}}],["response.dto.ts:9",{"_index":2376,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["responseindexingestimatedto",{"_index":1986,"title":{"classes/ResponseIndexingEstimateDto.html":{}},"body":{"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"classes/ResponseIndexingEstimateDto.html":{}}}],["restful",{"_index":2340,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["result",{"_index":1524,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["result.map((segment",{"_index":1526,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["result.ts",{"_index":2872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["results",{"_index":92,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["results.add(subtoken",{"_index":2045,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["results.add(token",{"_index":2037,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["results.flat",{"_index":2508,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["retrieval",{"_index":695,"title":{},"body":{"classes/CreateDatasetDto.html":{},"injectables/RetrievalService.html":{},"classes/SimilaritySearchDto.html":{}}}],["retrievalcontroller",{"_index":1105,"title":{"controllers/RetrievalController.html":{}},"body":{"modules/DatasetsModule.html":{},"controllers/RetrievalController.html":{}}}],["retrievalmodel",{"_index":684,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/LeekDataset.html":{},"injectables/RetrievalService.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["retrievalmodeldto",{"_index":694,"title":{"classes/RetrievalModelDto.html":{}},"body":{"classes/CreateDatasetDto.html":{},"classes/LeekDataset.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SimilaritySearchDto.html":{}}}],["retrievalmodeldto})@isoptional()@isobject",{"_index":691,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["retrievalmodeldto})@isoptional()@isobject()@validatenested()@type(undefined",{"_index":2670,"title":{},"body":{"classes/SimilaritySearchDto.html":{}}}],["retrievalservice",{"_index":330,"title":{"injectables/RetrievalService.html":{}},"body":{"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"modules/DatasetsModule.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"overview.html":{}}}],["retrieve",{"_index":2637,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["retrieved",{"_index":2641,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["return",{"_index":88,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"modules/ConfigureModule.html":{},"classes/ContextProvider.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekExcelLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/QuerySegmentDto.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"classes/ContextProvider.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekExcelLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{}}}],["role",{"_index":598,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"miscellaneous/enumerations.html":{}}}],["row.join(this.separator",{"_index":2198,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["rowindex",{"_index":2199,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["rows",{"_index":1970,"title":{},"body":{"injectables/FilesService.html":{}}}],["rows.length",{"_index":1973,"title":{},"body":{"injectables/FilesService.html":{}}}],["rows[0",{"_index":1976,"title":{},"body":{"injectables/FilesService.html":{}}}],["rowswithoutheader",{"_index":2195,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["rowswithoutheader.map((row",{"_index":2197,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["ru_ru",{"_index":2833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rule",{"_index":317,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["rule.dto",{"_index":726,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"classes/LeekDatasetProcessRule.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{}}}],["rule.dto.ts",{"_index":707,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{}}}],["rule.dto.ts:12",{"_index":2665,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["rule.dto.ts:13",{"_index":2394,"title":{},"body":{"classes/PreProcessingRuleDto.html":{}}}],["rule.dto.ts:16",{"_index":715,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{}}}],["rule.dto.ts:18",{"_index":2510,"title":{},"body":{"classes/ProcessRuleDto.html":{}}}],["rule.dto.ts:19",{"_index":2664,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["rule.dto.ts:20",{"_index":2392,"title":{},"body":{"classes/PreProcessingRuleDto.html":{}}}],["rule.dto.ts:24",{"_index":720,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{}}}],["rule.dto.ts:26",{"_index":2661,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["rule.dto.ts:28",{"_index":2512,"title":{},"body":{"classes/ProcessRuleDto.html":{}}}],["rule.dto.ts:33",{"_index":724,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{}}}],["rule.dto.ts:37",{"_index":2515,"title":{},"body":{"classes/ProcessRuleDto.html":{}}}],["rule.mapper",{"_index":1011,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.mapper.ts",{"_index":976,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["rule.mapper.ts:19",{"_index":980,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["rule.mapper.ts:6",{"_index":978,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["rule.repository",{"_index":1009,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"injectables/DatasetService.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["rule.repository.ts",{"_index":988,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["rule.repository.ts:10",{"_index":995,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.repository.ts:13",{"_index":997,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.repository.ts:18",{"_index":1023,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{}}}],["rule.repository.ts:21",{"_index":1005,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.repository.ts:28",{"_index":1003,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.repository.ts:29",{"_index":1028,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{}}}],["rule.repository.ts:35",{"_index":1007,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.repository.ts:40",{"_index":1027,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{}}}],["rule.repository.ts:42",{"_index":999,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.repository.ts:48",{"_index":1001,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["rule.repository.ts:51",{"_index":1029,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{}}}],["rule.repository.ts:61",{"_index":1024,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{}}}],["rule.repository.ts:71",{"_index":1025,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{}}}],["rule.ts",{"_index":2116,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["rule.ts:14",{"_index":2120,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["rule.ts:20",{"_index":2119,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["rule.ts:27",{"_index":2121,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["rule.ts:33",{"_index":2122,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["rule.ts:39",{"_index":2118,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["rules",{"_index":709,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/IndexingService.html":{},"classes/LeekDatasetProcessRule.html":{},"injectables/ProcessDocumentService.html":{}}}],["ruleshandlers",{"_index":2459,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["ruleshandlers[op.id",{"_index":2472,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["runintransaction",{"_index":2678,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["runintransaction(callback",{"_index":2680,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["rxjs",{"_index":344,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/RetrievalService.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1770,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2732,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["s3fileloader",{"_index":480,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["safepage",{"_index":1329,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["safepagesize",{"_index":1331,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["sample",{"_index":1229,"title":{},"body":{"classes/DocumentDto.html":{}}}],["saving",{"_index":2894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["score",{"_index":2624,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["scores",{"_index":2602,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["scorethreshold",{"_index":965,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{}}}],["scorethresholdenabled",{"_index":967,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{}}}],["sdk",{"_index":450,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{},"dependencies.html":{}}}],["sdk/client",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2529,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"injectables/RetrievalService.html":{}}}],["search.dto",{"_index":2577,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["search.dto.ts",{"_index":2668,"title":{},"body":{"classes/SimilaritySearchDto.html":{}}}],["search.dto.ts:14",{"_index":2669,"title":{},"body":{"classes/SimilaritySearchDto.html":{}}}],["search.dto.ts:24",{"_index":2671,"title":{},"body":{"classes/SimilaritySearchDto.html":{}}}],["secret_id",{"_index":522,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["secret_key",{"_index":523,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["secretid",{"_index":421,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["secretkey",{"_index":422,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["security",{"_index":506,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["segment",{"_index":1543,"title":{},"body":{"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["segment.controller",{"_index":1111,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["segment.controller.ts",{"_index":1370,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.controller.ts:112",{"_index":1398,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.controller.ts:152",{"_index":1387,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.controller.ts:183",{"_index":1406,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.controller.ts:214",{"_index":1391,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.controller.ts:244",{"_index":1394,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.controller.ts:54",{"_index":1382,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.controller.ts:85",{"_index":1402,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segment.dto",{"_index":1408,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["segment.dto.ts",{"_index":851,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["segment.dto.ts:12",{"_index":856,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{}}}],["segment.dto.ts:15",{"_index":2537,"title":{},"body":{"classes/QuerySegmentDto.html":{}}}],["segment.dto.ts:20",{"_index":859,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{}}}],["segment.dto.ts:27",{"_index":857,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{}}}],["segment.dto.ts:29",{"_index":2536,"title":{},"body":{"classes/QuerySegmentDto.html":{}}}],["segment.dto.ts:35",{"_index":855,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{}}}],["segment.indexnodehash",{"_index":1527,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["segment.mapper",{"_index":1511,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.mapper.ts",{"_index":1429,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["segment.mapper.ts:31",{"_index":1432,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["segment.mapper.ts:8",{"_index":1431,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["segment.repository",{"_index":1076,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"injectables/RetrievalService.html":{}}}],["segment.repository.ts",{"_index":1466,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:102",{"_index":1554,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:110",{"_index":1493,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:118",{"_index":1550,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:125",{"_index":1509,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:130",{"_index":1547,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:132",{"_index":1507,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:14",{"_index":1477,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:142",{"_index":1560,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:148",{"_index":1491,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:154",{"_index":1489,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:158",{"_index":1557,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:160",{"_index":1487,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:166",{"_index":1479,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:169",{"_index":1536,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:17",{"_index":1485,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:180",{"_index":1546,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:190",{"_index":1545,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:200",{"_index":1544,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:24",{"_index":1542,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:25",{"_index":1481,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:31",{"_index":1483,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:37",{"_index":1496,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:39",{"_index":1540,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:43",{"_index":1500,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:50",{"_index":1538,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:64",{"_index":1549,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:75",{"_index":1552,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:79",{"_index":1505,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:87",{"_index":1503,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.repository.ts:89",{"_index":1556,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["segment.repository.ts:99",{"_index":1498,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["segment.service",{"_index":1117,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/DocumentSegmentController.html":{}}}],["segment.service.ts",{"_index":1562,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:105",{"_index":1573,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:121",{"_index":1571,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:137",{"_index":1574,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:197",{"_index":1566,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:20",{"_index":1564,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:227",{"_index":1568,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:239",{"_index":1570,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.service.ts:40",{"_index":1565,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.tokens",{"_index":1608,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment.wordcount",{"_index":1607,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["segment_id",{"_index":1386,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["segmentation",{"_index":2012,"title":{},"body":{"injectables/IndexingService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{}}}],["segmentation.chunkoverlap",{"_index":2485,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["segmentation.maxtokens",{"_index":2483,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["segmentation.separator.split",{"_index":2487,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["segmentationenum",{"_index":718,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/LeekDatasetProcessRule.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"miscellaneous/enumerations.html":{}}}],["segmentationenum.automatic",{"_index":728,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/LeekDatasetProcessRule.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{}}}],["segmentationruledto",{"_index":2513,"title":{"classes/SegmentationRuleDto.html":{}},"body":{"classes/ProcessRuleDto.html":{},"classes/SegmentationRuleDto.html":{}}}],["segmentationruledto})@isoptional()@validatenested()@type(undefined",{"_index":2514,"title":{},"body":{"classes/ProcessRuleDto.html":{}}}],["segmentid",{"_index":1384,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["segments",{"_index":1416,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/RetrievalService.html":{}}}],["segmentshitcount",{"_index":1559,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["select",{"_index":1525,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/EmbeddingRelationalRepository.html":{}}}],["send",{"_index":395,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["separator",{"_index":2096,"title":{},"body":{"classes/LeekCSVLoader.html":{},"classes/LeekExcelLoader.html":{},"classes/SegmentationRuleDto.html":{}}}],["separators",{"_index":2486,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["server",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["service",{"_index":2830,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["services/dataset.service",{"_index":922,"title":{},"body":{"controllers/DatasetController.html":{},"modules/DatasetsModule.html":{}}}],["services/document",{"_index":1116,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/DocumentSegmentController.html":{}}}],["services/document.service",{"_index":1118,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{}}}],["services/indexing.service",{"_index":1119,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/IndexingController.html":{}}}],["services/jieba",{"_index":1120,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["services/llm",{"_index":1122,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/ExampleController.html":{}}}],["services/process",{"_index":1124,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["services/retrieval.service",{"_index":1126,"title":{},"body":{"modules/DatasetsModule.html":{},"controllers/RetrievalController.html":{}}}],["set",{"_index":576,"title":{},"body":{"classes/ContextProvider.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/JiebaKeywordService.html":{}}}],["set(key",{"_index":587,"title":{},"body":{"classes/ContextProvider.html":{}}}],["set(keywords",{"_index":2036,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["settimeout",{"_index":400,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["shared/interfaces/embedding",{"_index":1661,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["shared/prompts/generator",{"_index":2057,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["shared/prompts/rag",{"_index":2608,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["shared/utils/extract",{"_index":2060,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["shared/utils/generate",{"_index":940,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"classes/LeekDataset.html":{},"injectables/RetrievalService.html":{}}}],["sheet",{"_index":1968,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["sheetname",{"_index":1965,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["sheets",{"_index":2192,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["similarity",{"_index":2600,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["similaritysearch",{"_index":1741,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["similaritysearch(query",{"_index":1746,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["similaritysearchdto",{"_index":2571,"title":{"classes/SimilaritySearchDto.html":{}},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"classes/SimilaritySearchDto.html":{}}}],["similaritysearchvectorwithscore",{"_index":1639,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["similaritysearchvectorwithscore(datasetid",{"_index":2570,"title":{},"body":{"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{}}}],["similaritysearchvectorwithscore(vector",{"_index":1655,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{}}}],["size",{"_index":1961,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekFile.html":{}}}],["skip",{"_index":1333,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"modules/AssistantsModule.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"modules/ConfigureModule.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleDto.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"modules/DatasetsModule.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"modules/FilesModule.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateAssistantDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["source('web",{"_index":1205,"title":{},"body":{"controllers/DocumentController.html":{}}}],["specify",{"_index":2829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["splitchapters",{"_index":2166,"title":{},"body":{"classes/LeekEPubLoader.html":{}}}],["splitdocs",{"_index":2447,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["splitdocs.map",{"_index":2491,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["splitdocumentsbysegmentationrules",{"_index":2424,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["splitdocumentsbysegmentationrules(documents",{"_index":2437,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["splitpages",{"_index":2261,"title":{},"body":{"classes/LeekPDFLoader.html":{}}}],["src/.../chat.ts",{"_index":2801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../csv.loader.ts",{"_index":2862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../datasets.ts",{"_index":2802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../document.loader.ts",{"_index":2867,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../epub.loader.ts",{"_index":2864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../init.embeddings.ts",{"_index":2804,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../init.models.ts",{"_index":2810,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../json.loader.ts",{"_index":2865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../language.ts",{"_index":2806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../llm.ts",{"_index":2808,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../paginated",{"_index":2871,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../pdf.loader.ts",{"_index":2873,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../storage.ts",{"_index":2812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wrapper",{"_index":2876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":158,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":160,"title":{},"body":{"injectables/AppService.html":{}}}],["src/assistants/assistants.controller.ts",{"_index":165,"title":{},"body":{"controllers/AssistantController.html":{}}}],["src/assistants/assistants.controller.ts:104",{"_index":195,"title":{},"body":{"controllers/AssistantController.html":{}}}],["src/assistants/assistants.controller.ts:121",{"_index":183,"title":{},"body":{"controllers/AssistantController.html":{}}}],["src/assistants/assistants.controller.ts:46",{"_index":189,"title":{},"body":{"controllers/AssistantController.html":{}}}],["src/assistants/assistants.controller.ts:65",{"_index":200,"title":{},"body":{"controllers/AssistantController.html":{}}}],["src/assistants/assistants.controller.ts:83",{"_index":205,"title":{},"body":{"controllers/AssistantController.html":{}}}],["src/assistants/assistants.module.ts",{"_index":408,"title":{},"body":{"modules/AssistantsModule.html":{}}}],["src/assistants/assistants.service.ts",{"_index":327,"title":{},"body":{"injectables/AssistantService.html":{}}}],["src/assistants/assistants.service.ts:19",{"_index":331,"title":{},"body":{"injectables/AssistantService.html":{}}}],["src/assistants/assistants.service.ts:35",{"_index":334,"title":{},"body":{"injectables/AssistantService.html":{}}}],["src/assistants/assistants.service.ts:58",{"_index":337,"title":{},"body":{"injectables/AssistantService.html":{}}}],["src/assistants/assistants.service.ts:71",{"_index":338,"title":{},"body":{"injectables/AssistantService.html":{}}}],["src/assistants/assistants.service.ts:83",{"_index":336,"title":{},"body":{"injectables/AssistantService.html":{}}}],["src/assistants/assistants.service.ts:87",{"_index":333,"title":{},"body":{"injectables/AssistantService.html":{}}}],["src/assistants/domain/assistants.ts",{"_index":2069,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/domain/assistants.ts:14",{"_index":2081,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/domain/assistants.ts:20",{"_index":2074,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/domain/assistants.ts:26",{"_index":2073,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/domain/assistants.ts:32",{"_index":2082,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/domain/assistants.ts:38",{"_index":2072,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/domain/assistants.ts:44",{"_index":2084,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/domain/assistants.ts:8",{"_index":2080,"title":{},"body":{"classes/LeekAssistant.html":{}}}],["src/assistants/dto/conversation",{"_index":596,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationMessageDto.html":{}}}],["src/assistants/dto/conversation.dto.ts",{"_index":632,"title":{},"body":{"classes/ConversationDto.html":{}}}],["src/assistants/dto/conversation.dto.ts:17",{"_index":637,"title":{},"body":{"classes/ConversationDto.html":{}}}],["src/assistants/dto/conversation.dto.ts:23",{"_index":642,"title":{},"body":{"classes/ConversationDto.html":{}}}],["src/assistants/dto/create",{"_index":659,"title":{},"body":{"classes/CreateAssistantDto.html":{}}}],["src/assistants/dto/update",{"_index":2704,"title":{},"body":{"classes/UpdateAssistantDto.html":{}}}],["src/assistants/infrastructure/persistence/assistants.repository.ts",{"_index":312,"title":{},"body":{"classes/AssistantRepository.html":{}}}],["src/assistants/infrastructure/persistence/assistants.repository.ts:18",{"_index":315,"title":{},"body":{"classes/AssistantRepository.html":{}}}],["src/assistants/infrastructure/persistence/assistants.repository.ts:29",{"_index":321,"title":{},"body":{"classes/AssistantRepository.html":{}}}],["src/assistants/infrastructure/persistence/assistants.repository.ts:40",{"_index":324,"title":{},"body":{"classes/AssistantRepository.html":{}}}],["src/assistants/infrastructure/persistence/assistants.repository.ts:50",{"_index":319,"title":{},"body":{"classes/AssistantRepository.html":{}}}],["src/assistants/infrastructure/persistence/mappers/assistants.mapper.ts",{"_index":251,"title":{},"body":{"classes/AssistantMapper.html":{}}}],["src/assistants/infrastructure/persistence/mappers/assistants.mapper.ts:12",{"_index":257,"title":{},"body":{"classes/AssistantMapper.html":{}}}],["src/assistants/infrastructure/persistence/mappers/assistants.mapper.ts:33",{"_index":260,"title":{},"body":{"classes/AssistantMapper.html":{}}}],["src/assistants/infrastructure/persistence/relational",{"_index":2550,"title":{},"body":{"modules/RelationalAssistantPersistenceModule.html":{}}}],["src/assistants/infrastructure/persistence/repositories/assistants.repository.ts",{"_index":283,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:10",{"_index":287,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:19",{"_index":289,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:32",{"_index":293,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:43",{"_index":292,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:58",{"_index":295,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:71",{"_index":291,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["src/common/decorators/transactional.decorator.ts",{"_index":2688,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["src/common/dto/error",{"_index":1753,"title":{},"body":{"classes/ErrorResponseDto.html":{}}}],["src/common/dto/pagination",{"_index":2374,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["src/common/dto/pagination.dto.ts",{"_index":2369,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/dto/pagination.dto.ts:15",{"_index":2371,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/dto/pagination.dto.ts:25",{"_index":2372,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/filters/all_exceptions.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/all_exceptions.filter.ts:12",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/all_exceptions.filter.ts:8",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/interceptors/errors.interceptor.ts",{"_index":1762,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["src/common/interceptors/errors.interceptor.ts:8",{"_index":1767,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["src/common/interceptors/logging.interceptor.ts",{"_index":2331,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptors/logging.interceptor.ts:9",{"_index":2332,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptors/timeout.interceptors.ts",{"_index":2673,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/common/interceptors/timeout.interceptors.ts:8",{"_index":2674,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/configure/adapter.ts",{"_index":503,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/adapter.ts:10",{"_index":515,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/adapter.ts:14",{"_index":516,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/adapter.ts:2",{"_index":514,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/adapter.ts:3",{"_index":510,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/adapter.ts:4",{"_index":517,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/adapter.ts:5",{"_index":509,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/adapter.ts:6",{"_index":512,"title":{},"body":{"classes/ConfigureAdapter.html":{}}}],["src/configure/configure.module.ts",{"_index":528,"title":{},"body":{"modules/ConfigureModule.html":{}}}],["src/configure/configure.service.ts",{"_index":541,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:10",{"_index":556,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:11",{"_index":549,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:12",{"_index":569,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:13",{"_index":546,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:15",{"_index":553,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:19",{"_index":566,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:25",{"_index":561,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/configure/configure.service.ts:7",{"_index":543,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["src/constants/chat.ts",{"_index":2813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/datasets.ts",{"_index":2817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/language.ts",{"_index":2831,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/llm.ts",{"_index":2836,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/constants/storage.ts",{"_index":2842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/datasets/controllers/dataset.controller.ts",{"_index":897,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/datasets/controllers/dataset.controller.ts:117",{"_index":908,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/datasets/controllers/dataset.controller.ts:44",{"_index":905,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/datasets/controllers/dataset.controller.ts:59",{"_index":914,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/datasets/controllers/dataset.controller.ts:78",{"_index":911,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/datasets/controllers/dataset.controller.ts:96",{"_index":918,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/datasets/controllers/document",{"_index":1369,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["src/datasets/controllers/document.controller.ts",{"_index":1127,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:108",{"_index":1154,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:131",{"_index":1151,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:155",{"_index":1179,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:179",{"_index":1157,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:202",{"_index":1160,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:225",{"_index":1163,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:248",{"_index":1146,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:271",{"_index":1182,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:54",{"_index":1174,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/document.controller.ts:89",{"_index":1169,"title":{},"body":{"controllers/DocumentController.html":{}}}],["src/datasets/controllers/example.controller.ts",{"_index":1779,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/datasets/controllers/example.controller.ts:21",{"_index":1784,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/datasets/controllers/example.controller.ts:58",{"_index":1782,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/datasets/controllers/indexing.controller.ts",{"_index":1982,"title":{},"body":{"controllers/IndexingController.html":{}}}],["src/datasets/controllers/indexing.controller.ts:24",{"_index":1987,"title":{},"body":{"controllers/IndexingController.html":{}}}],["src/datasets/controllers/retrieval.controller.ts",{"_index":2564,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["src/datasets/controllers/retrieval.controller.ts:43",{"_index":2573,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["src/datasets/controllers/retrieval.controller.ts:62",{"_index":2569,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["src/datasets/datasets.module.ts",{"_index":1101,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["src/datasets/domain/dataset",{"_index":2115,"title":{},"body":{"classes/LeekDatasetProcessRule.html":{}}}],["src/datasets/domain/dataset.ts",{"_index":2098,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:15",{"_index":2107,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:21",{"_index":2109,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:27",{"_index":2102,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:34",{"_index":2110,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:41",{"_index":2101,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:52",{"_index":2108,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:59",{"_index":2105,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:66",{"_index":2106,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:72",{"_index":2111,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:78",{"_index":2100,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/dataset.ts:84",{"_index":2112,"title":{},"body":{"classes/LeekDataset.html":{}}}],["src/datasets/domain/document.ts",{"_index":2124,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:104",{"_index":2125,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:110",{"_index":2127,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:116",{"_index":2126,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:12",{"_index":2148,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:122",{"_index":2140,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:128",{"_index":2139,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:135",{"_index":2137,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:141",{"_index":2138,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:147",{"_index":2129,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:153",{"_index":2153,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:18",{"_index":2131,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:24",{"_index":2151,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:31",{"_index":2135,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:37",{"_index":2134,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:43",{"_index":2132,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:49",{"_index":2150,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:56",{"_index":2130,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:62",{"_index":2128,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:68",{"_index":2142,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:74",{"_index":2154,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:80",{"_index":2152,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:86",{"_index":2149,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:92",{"_index":2141,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/document.ts:98",{"_index":2136,"title":{},"body":{"classes/LeekDocument.html":{}}}],["src/datasets/domain/embedding.ts",{"_index":2167,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/embedding.ts:12",{"_index":2171,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/embedding.ts:22",{"_index":2170,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/embedding.ts:27",{"_index":2173,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/embedding.ts:32",{"_index":2174,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/embedding.ts:37",{"_index":2168,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/embedding.ts:43",{"_index":2169,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/embedding.ts:7",{"_index":2172,"title":{},"body":{"classes/LeekEmbedding.html":{}}}],["src/datasets/domain/segment.ts",{"_index":2274,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:10",{"_index":2296,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:100",{"_index":2289,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:106",{"_index":2276,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:112",{"_index":2311,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:16",{"_index":2279,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:22",{"_index":2286,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:28",{"_index":2307,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:34",{"_index":2277,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:40",{"_index":2313,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:46",{"_index":2310,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:52",{"_index":2305,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:58",{"_index":2304,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:64",{"_index":2298,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:70",{"_index":2290,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:76",{"_index":2287,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:82",{"_index":2280,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:88",{"_index":2308,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/domain/segment.ts:94",{"_index":2278,"title":{},"body":{"classes/LeekSegment.html":{}}}],["src/datasets/dto/create",{"_index":681,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{}}}],["src/datasets/dto/dataset",{"_index":970,"title":{},"body":{"classes/DatasetProcessRuleDto.html":{}}}],["src/datasets/dto/document.dto.ts",{"_index":1223,"title":{},"body":{"classes/DocumentDto.html":{}}}],["src/datasets/dto/document.dto.ts:11",{"_index":1231,"title":{},"body":{"classes/DocumentDto.html":{}}}],["src/datasets/dto/document.dto.ts:19",{"_index":1228,"title":{},"body":{"classes/DocumentDto.html":{}}}],["src/datasets/dto/indexing",{"_index":876,"title":{},"body":{"interfaces/DataSourceInfo.html":{},"classes/IndexingEstimateDto.html":{},"classes/IndexingEstimateProcessRuleDto.html":{}}}],["src/datasets/dto/pre",{"_index":2390,"title":{},"body":{"classes/PreProcessingRuleDto.html":{}}}],["src/datasets/dto/process",{"_index":2509,"title":{},"body":{"classes/ProcessRuleDto.html":{}}}],["src/datasets/dto/query",{"_index":2517,"title":{},"body":{"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{}}}],["src/datasets/dto/response",{"_index":2561,"title":{},"body":{"classes/ResponseIndexingEstimateDto.html":{}}}],["src/datasets/dto/retrieval",{"_index":2585,"title":{},"body":{"classes/RetrievalModelDto.html":{}}}],["src/datasets/dto/segmentation",{"_index":2658,"title":{},"body":{"classes/SegmentationRuleDto.html":{}}}],["src/datasets/dto/similarity",{"_index":2667,"title":{},"body":{"classes/SimilaritySearchDto.html":{}}}],["src/datasets/dto/update",{"_index":2706,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"classes/UpdateDatasetProcessRuleDto.html":{},"classes/UpdateDocumentByFileDto.html":{},"classes/UpdateDocumentByTextDto.html":{},"classes/UpdateDocumentDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["src/datasets/infrastructure/persistence/dataset",{"_index":1022,"title":{},"body":{"classes/DatasetProcessRuleRepository.html":{}}}],["src/datasets/infrastructure/persistence/dataset.repository.ts",{"_index":1050,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["src/datasets/infrastructure/persistence/dataset.repository.ts:17",{"_index":1051,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["src/datasets/infrastructure/persistence/dataset.repository.ts:27",{"_index":1056,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["src/datasets/infrastructure/persistence/dataset.repository.ts:38",{"_index":1055,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["src/datasets/infrastructure/persistence/dataset.repository.ts:49",{"_index":1058,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["src/datasets/infrastructure/persistence/dataset.repository.ts:59",{"_index":1054,"title":{},"body":{"classes/DatasetRepository.html":{}}}],["src/datasets/infrastructure/persistence/document",{"_index":1535,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts",{"_index":1349,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:100",{"_index":1365,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:111",{"_index":1350,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:123",{"_index":1360,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:133",{"_index":1357,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:23",{"_index":1353,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:37",{"_index":1362,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:48",{"_index":1363,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:62",{"_index":1359,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:74",{"_index":1367,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/document.repository.ts:88",{"_index":1356,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts",{"_index":1727,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:106",{"_index":1731,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:133",{"_index":1740,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:21",{"_index":1728,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:36",{"_index":1729,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:59",{"_index":1738,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:70",{"_index":1735,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:80",{"_index":1730,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/embedding.repository.ts:92",{"_index":1733,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["src/datasets/infrastructure/persistence/mappers/dataset",{"_index":975,"title":{},"body":{"classes/DatasetProcessRuleMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/dataset.mapper.ts",{"_index":933,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/dataset.mapper.ts:10",{"_index":934,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/dataset.mapper.ts:29",{"_index":935,"title":{},"body":{"classes/DatasetMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/document",{"_index":1428,"title":{},"body":{"classes/DocumentSegmentMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/document.mapper.ts",{"_index":1234,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/document.mapper.ts:37",{"_index":1236,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/document.mapper.ts:6",{"_index":1235,"title":{},"body":{"classes/DocumentMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/embedding.mapper.ts",{"_index":1610,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/embedding.mapper.ts:22",{"_index":1613,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["src/datasets/infrastructure/persistence/mappers/embedding.mapper.ts:8",{"_index":1611,"title":{},"body":{"classes/EmbeddingMapper.html":{}}}],["src/datasets/infrastructure/persistence/relational",{"_index":2555,"title":{},"body":{"modules/RelationalDatasetsPersistenceModule.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset",{"_index":987,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset.repository.ts",{"_index":1031,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:10",{"_index":1032,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:13",{"_index":1034,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:21",{"_index":1037,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:25",{"_index":1036,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:33",{"_index":1038,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:40",{"_index":1035,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document",{"_index":1465,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts",{"_index":1292,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:102",{"_index":1307,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:14",{"_index":1299,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:17",{"_index":1303,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:25",{"_index":1313,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:31",{"_index":1314,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:60",{"_index":1309,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:67",{"_index":1311,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:76",{"_index":1318,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:83",{"_index":1305,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:89",{"_index":1301,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/document.repository.ts:95",{"_index":1316,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts",{"_index":1628,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:105",{"_index":1644,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:111",{"_index":1652,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:119",{"_index":1646,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:125",{"_index":1650,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:131",{"_index":1648,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:21",{"_index":1658,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:22",{"_index":1659,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:23",{"_index":1640,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:51",{"_index":1642,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:59",{"_index":1654,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:74",{"_index":1657,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["src/datasets/services/dataset.service.ts",{"_index":1060,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/datasets/services/dataset.service.ts:16",{"_index":1065,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/datasets/services/dataset.service.ts:33",{"_index":1066,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/datasets/services/dataset.service.ts:44",{"_index":1070,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/datasets/services/dataset.service.ts:56",{"_index":1069,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/datasets/services/dataset.service.ts:69",{"_index":1071,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/datasets/services/dataset.service.ts:82",{"_index":1068,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/datasets/services/document",{"_index":1561,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["src/datasets/services/indexing.service.ts",{"_index":2001,"title":{},"body":{"injectables/IndexingService.html":{}}}],["src/datasets/services/indexing.service.ts:11",{"_index":2003,"title":{},"body":{"injectables/IndexingService.html":{}}}],["src/datasets/services/indexing.service.ts:25",{"_index":2004,"title":{},"body":{"injectables/IndexingService.html":{}}}],["src/datasets/services/jieba",{"_index":2019,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["src/datasets/services/llm",{"_index":2046,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["src/datasets/services/process",{"_index":2417,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["src/datasets/services/retrieval.service.ts",{"_index":2592,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["src/datasets/services/retrieval.service.ts:23",{"_index":2593,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["src/datasets/services/retrieval.service.ts:38",{"_index":2598,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["src/datasets/services/retrieval.service.ts:99",{"_index":2594,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["src/datasets/shared/interfaces/embedding",{"_index":1748,"title":{},"body":{"interfaces/EmbeddingWithMetadata.html":{}}}],["src/files/domain/files.ts",{"_index":2209,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:10",{"_index":2218,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:18",{"_index":2235,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:25",{"_index":2228,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:31",{"_index":2231,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:37",{"_index":2214,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:43",{"_index":2233,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:49",{"_index":2215,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:55",{"_index":2230,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:62",{"_index":2237,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:69",{"_index":2239,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:76",{"_index":2217,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/domain/files.ts:82",{"_index":2213,"title":{},"body":{"classes/LeekFile.html":{}}}],["src/files/dto/upload",{"_index":2722,"title":{},"body":{"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{}}}],["src/files/files.controller.ts",{"_index":1808,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:45",{"_index":1825,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:57",{"_index":1829,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:77",{"_index":1817,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":1887,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":1910,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:117",{"_index":1935,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:152",{"_index":1914,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:17",{"_index":1913,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:29",{"_index":1918,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:46",{"_index":1932,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:74",{"_index":1926,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/infrastructure/persistence/files.repository.ts",{"_index":1907,"title":{},"body":{"classes/FilesRepository.html":{}}}],["src/files/infrastructure/persistence/files.repository.ts:4",{"_index":1908,"title":{},"body":{"classes/FilesRepository.html":{}}}],["src/files/infrastructure/persistence/files.repository.ts:5",{"_index":1909,"title":{},"body":{"classes/FilesRepository.html":{}}}],["src/files/infrastructure/persistence/mappers/files.mapper.ts",{"_index":1859,"title":{},"body":{"classes/FilesMapper.html":{}}}],["src/files/infrastructure/persistence/mappers/files.mapper.ts:26",{"_index":1862,"title":{},"body":{"classes/FilesMapper.html":{}}}],["src/files/infrastructure/persistence/mappers/files.mapper.ts:6",{"_index":1861,"title":{},"body":{"classes/FilesMapper.html":{}}}],["src/files/infrastructure/persistence/relational",{"_index":2543,"title":{},"body":{"modules/RelationaLeekFilesPersistenceModule.html":{}}}],["src/files/infrastructure/persistence/repositories/files.repository.ts",{"_index":1890,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["src/files/infrastructure/persistence/repositories/files.repository.ts:10",{"_index":1892,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["src/files/infrastructure/persistence/repositories/files.repository.ts:13",{"_index":1894,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["src/files/infrastructure/persistence/repositories/files.repository.ts:24",{"_index":1895,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["src/interfaces/paginated",{"_index":2884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/interfaces/wrapper",{"_index":2885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/langchain/embeddings/init.embeddings.ts",{"_index":2828,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/langchain/loaders/cos.loader.ts",{"_index":414,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["src/langchain/loaders/cos.loader.ts:23",{"_index":434,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:24",{"_index":435,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:25",{"_index":431,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:26",{"_index":433,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:27",{"_index":432,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:28",{"_index":430,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:40",{"_index":442,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:54",{"_index":439,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:60",{"_index":441,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/cos.loader.ts:85",{"_index":437,"title":{},"body":{"classes/COSLoader.html":{}}}],["src/langchain/loaders/csv.loader.ts",{"_index":2086,"title":{},"body":{"classes/LeekCSVLoader.html":{},"miscellaneous/typealiases.html":{}}}],["src/langchain/loaders/csv.loader.ts:8",{"_index":2092,"title":{},"body":{"classes/LeekCSVLoader.html":{}}}],["src/langchain/loaders/document.loader.ts",{"_index":2881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/langchain/loaders/docx.loader.ts",{"_index":2156,"title":{},"body":{"classes/LeekDocxLoader.html":{}}}],["src/langchain/loaders/docx.loader.ts:3",{"_index":2158,"title":{},"body":{"classes/LeekDocxLoader.html":{}}}],["src/langchain/loaders/epub.loader.ts",{"_index":2161,"title":{},"body":{"classes/LeekEPubLoader.html":{},"miscellaneous/typealiases.html":{}}}],["src/langchain/loaders/epub.loader.ts:7",{"_index":2164,"title":{},"body":{"classes/LeekEPubLoader.html":{}}}],["src/langchain/loaders/excel.loader.ts",{"_index":2176,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["src/langchain/loaders/excel.loader.ts:10",{"_index":2181,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["src/langchain/loaders/excel.loader.ts:18",{"_index":2186,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["src/langchain/loaders/excel.loader.ts:41",{"_index":2183,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["src/langchain/loaders/excel.loader.ts:6",{"_index":2182,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["src/langchain/loaders/excel.loader.ts:7",{"_index":2180,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["src/langchain/loaders/json.loader.ts",{"_index":2244,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"miscellaneous/typealiases.html":{}}}],["src/langchain/loaders/json.loader.ts:12",{"_index":2248,"title":{},"body":{"classes/LeekJSONLinesLoader.html":{}}}],["src/langchain/loaders/json.loader.ts:6",{"_index":2254,"title":{},"body":{"classes/LeekJSONLoader.html":{}}}],["src/langchain/loaders/pdf.loader.ts",{"_index":2256,"title":{},"body":{"classes/LeekPDFLoader.html":{},"miscellaneous/typealiases.html":{}}}],["src/langchain/loaders/pdf.loader.ts:9",{"_index":2259,"title":{},"body":{"classes/LeekPDFLoader.html":{}}}],["src/langchain/loaders/pptx.loader.ts",{"_index":2265,"title":{},"body":{"classes/LeekPPTXLoader.html":{}}}],["src/langchain/loaders/pptx.loader.ts:3",{"_index":2267,"title":{},"body":{"classes/LeekPPTXLoader.html":{}}}],["src/langchain/loaders/srt.loader.ts",{"_index":2270,"title":{},"body":{"classes/LeekSRTLoader.html":{}}}],["src/langchain/loaders/srt.loader.ts:3",{"_index":2272,"title":{},"body":{"classes/LeekSRTLoader.html":{}}}],["src/langchain/loaders/text.loader.ts",{"_index":2315,"title":{},"body":{"classes/LeekTextLoader.html":{}}}],["src/langchain/loaders/text.loader.ts:3",{"_index":2317,"title":{},"body":{"classes/LeekTextLoader.html":{}}}],["src/langchain/loaders/unstructured.loader.ts",{"_index":2320,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["src/langchain/loaders/unstructured.loader.ts:7",{"_index":2326,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["src/langchain/model/init.models.ts",{"_index":2841,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/prisma/prisma.module.ts",{"_index":2400,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":2402,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:12",{"_index":2412,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:16",{"_index":2410,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:24",{"_index":2409,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":2408,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/transaction.manager.ts",{"_index":2677,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["src/prisma/transaction.manager.ts:12",{"_index":2679,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["src/prisma/transaction.manager.ts:18",{"_index":2682,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["src/providers/context.provider.ts",{"_index":571,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:10",{"_index":583,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:16",{"_index":588,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:22",{"_index":586,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:4",{"_index":581,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:6",{"_index":578,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:8",{"_index":580,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/utils/create_paginated_response.util.ts",{"_index":2344,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["srt",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["srtloader",{"_index":2271,"title":{},"body":{"classes/LeekSRTLoader.html":{}}}],["sse",{"_index":180,"title":{},"body":{"controllers/AssistantController.html":{},"classes/ConversationDto.html":{},"controllers/RetrievalController.html":{}}}],["stacktrace",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["started",{"_index":2846,"title":{"index.html":{}},"body":{}}],["state",{"_index":2354,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["static",{"_index":252,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/ContextProvider.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["status",{"_index":2275,"title":{},"body":{"classes/LeekSegment.html":{}}}],["statuscode",{"_index":90,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ErrorResponseDto.html":{}}}],["stopwords",{"_index":2030,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["stopwords.has(subtoken",{"_index":2044,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["storagekind",{"_index":2811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storagetype",{"_index":2210,"title":{},"body":{"classes/LeekFile.html":{}}}],["store",{"_index":590,"title":{},"body":{"classes/ContextProvider.html":{}}}],["store.get(contextprovider.getkeywithnamespace(key",{"_index":592,"title":{},"body":{"classes/ContextProvider.html":{}}}],["store.set(contextprovider.getkeywithnamespace(key",{"_index":593,"title":{},"body":{"classes/ContextProvider.html":{}}}],["stores",{"_index":1920,"title":{},"body":{"injectables/FilesService.html":{}}}],["stream",{"_index":85,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AssistantService.html":{},"classes/ConversationDto.html":{},"injectables/RetrievalService.html":{}}}],["streaming",{"_index":381,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["streams",{"_index":2597,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["string",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/IndexingEstimateDto.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"classes/PreProcessingRuleDto.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"miscellaneous/typealiases.html":{}}}],["stringoutputparser",{"_index":2053,"title":{},"body":{"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{}}}],["structure",{"_index":2347,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["structured",{"_index":2363,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["subject",{"_index":848,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/LeekDocument.html":{}}}],["subscriber.complete",{"_index":401,"title":{},"body":{"injectables/AssistantService.html":{},"injectables/RetrievalService.html":{}}}],["subscriber.next",{"_index":2656,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["subscriber.next(createendcompletion",{"_index":399,"title":{},"body":{"injectables/AssistantService.html":{}}}],["subscriber.next(createtokencompletion",{"_index":392,"title":{},"body":{"injectables/AssistantService.html":{}}}],["substrings",{"_index":2041,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["subtokens",{"_index":2028,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["subtokens.foreach((subtoken",{"_index":2043,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["subtokens.length",{"_index":2042,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["summary",{"_index":232,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["summary_index",{"_index":2827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":459,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/LeekExcelLoader.html":{},"injectables/PrismaService.html":{}}}],["super(filepathorblob",{"_index":2097,"title":{},"body":{"classes/LeekCSVLoader.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekTextLoader.html":{}}}],["super(filepathorbufferoptions",{"_index":2329,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["support",{"_index":2848,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2849,"title":{},"body":{"modules.html":{}}}],["system",{"_index":370,"title":{},"body":{"injectables/AssistantService.html":{},"miscellaneous/typealiases.html":{}}}],["systemprompt",{"_index":662,"title":{},"body":{"classes/CreateAssistantDto.html":{},"classes/LeekAssistant.html":{}}}],["t",{"_index":584,"title":{},"body":{"classes/ContextProvider.html":{},"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{},"injectables/TransactionManager.html":{},"miscellaneous/typealiases.html":{}}}],["tablename",{"_index":1630,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["take",{"_index":1338,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"injectables/DocumentSegmentRelationalRepository.html":{}}}],["tap",{"_index":2334,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["target",{"_index":2693,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["tasks",{"_index":2503,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["tempdir",{"_index":478,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{}}}],["temperature",{"_index":379,"title":{},"body":{"injectables/AssistantService.html":{}}}],["template",{"_index":2348,"title":{},"body":{"interfaces/Pagination$.html":{}}}],["temporary",{"_index":501,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["tencent",{"_index":507,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{},"injectables/FilesService.html":{},"miscellaneous/enumerations.html":{}}}],["tencent_cos",{"_index":2844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tencentcos",{"_index":1951,"title":{},"body":{"injectables/FilesService.html":{}}}],["tencentcos.putobject",{"_index":1958,"title":{},"body":{"injectables/FilesService.html":{}}}],["text",{"_index":616,"title":{},"body":{"classes/ConversationContentDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDocumentByTextDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekDataset.html":{},"injectables/ProcessDocumentService.html":{},"classes/UploadTextFileDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["text'})@isstring",{"_index":751,"title":{},"body":{"classes/CreateDocumentByTextDto.html":{},"classes/UploadTextFileDto.html":{}}}],["text.dto",{"_index":1188,"title":{},"body":{"controllers/DocumentController.html":{},"classes/UpdateDocumentByTextDto.html":{}}}],["text.dto.ts",{"_index":750,"title":{},"body":{"classes/CreateDocumentByTextDto.html":{},"classes/UpdateDocumentByTextDto.html":{}}}],["text.dto.ts:14",{"_index":752,"title":{},"body":{"classes/CreateDocumentByTextDto.html":{}}}],["text.dto.ts:21",{"_index":755,"title":{},"body":{"classes/CreateDocumentByTextDto.html":{}}}],["text.dto.ts:30",{"_index":753,"title":{},"body":{"classes/CreateDocumentByTextDto.html":{}}}],["text.replace(/\\s+/g",{"_index":2460,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["text.replace(/https?:\\/\\/[^\\s]+|www\\.[^\\s]+|[\\w",{"_index":2462,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["text.util",{"_index":2062,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["text/event",{"_index":84,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ConversationDto.html":{}}}],["text/plain",{"_index":1946,"title":{},"body":{"injectables/FilesService.html":{}}}],["text_model",{"_index":2824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["textloader",{"_index":2316,"title":{},"body":{"classes/LeekTextLoader.html":{}}}],["this.$connect",{"_index":2414,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":2416,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._fs",{"_index":465,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this._fs.createwritestream(filepath",{"_index":490,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this._fs.existssync(filepath",{"_index":496,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this._fs.mkdtempsync(path.join(os.tmpdir",{"_index":479,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this._fs.unlinksync(filepath",{"_index":497,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.assistantrepository.createassistant(createassistantdto",{"_index":351,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.assistantrepository.deleteassistantbyid(id",{"_index":356,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.assistantrepository.findassistantbyid(id",{"_index":354,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.assistantrepository.findmanyassistants",{"_index":352,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.assistantrepository.updateassistantbyid(id",{"_index":355,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.assistantservice.conversation(id",{"_index":249,"title":{},"body":{"controllers/AssistantController.html":{}}}],["this.assistantservice.createassistant(createassistantdto",{"_index":234,"title":{},"body":{"controllers/AssistantController.html":{}}}],["this.assistantservice.deleteassistantbyid(id",{"_index":245,"title":{},"body":{"controllers/AssistantController.html":{}}}],["this.assistantservice.findassistantbyid(id",{"_index":238,"title":{},"body":{"controllers/AssistantController.html":{}}}],["this.assistantservice.updateassistantbyid(id",{"_index":242,"title":{},"body":{"controllers/AssistantController.html":{}}}],["this.bucket",{"_index":462,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.cleandocumentsbypreprocessingrules(splitdocs",{"_index":2456,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["this.cleanuptempfile(filepath",{"_index":477,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.cls.get('prisma",{"_index":2413,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.cls.set('prisma",{"_index":2687,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["this.config.get('fallback_language",{"_index":544,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('host",{"_index":547,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('openai_api_host",{"_index":552,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('openai_api_key",{"_index":551,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('tencent_cos_bucket",{"_index":564,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('tencent_cos_region",{"_index":565,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('tencent_secret_id",{"_index":562,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('tencent_secret_key",{"_index":563,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.config.get('tz",{"_index":567,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["this.configureservice.openai.api_key",{"_index":383,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.configureservice.openai.base_url",{"_index":386,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.configureservice.tencent.cos_bucket",{"_index":1798,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["this.configureservice.tencent.cos_region",{"_index":1799,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["this.configureservice.tencent.secret_id",{"_index":1796,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["this.configureservice.tencent.secret_key",{"_index":1797,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/FilesService.html":{},"injectables/ProcessDocumentService.html":{}}}],["this.createtempfilepath",{"_index":466,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.datasetprocessrulerepository.deleterulesbydatasetid(id",{"_index":1083,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.datasetrepository.createdataset(createdatasetdto",{"_index":1079,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.datasetrepository.deletedatasetbyid(id",{"_index":1087,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.datasetrepository.finddatasetbyid(assistant.datasetid",{"_index":359,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.datasetrepository.finddatasetbyid(datasetid",{"_index":2614,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["this.datasetrepository.finddatasetbyid(id",{"_index":1081,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.datasetrepository.findmanydatasets",{"_index":1080,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.datasetrepository.updatedatasetbyid(id",{"_index":1082,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.datasetservice.createdataset(createdatasetdto",{"_index":925,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.datasetservice.deletedatasetbyid(id",{"_index":931,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.datasetservice.finddatasetbyid(id",{"_index":928,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.datasetservice.findmanydatasets",{"_index":926,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.datasetservice.updatedatasetbyid(id",{"_index":929,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.documentrepository.deletemanydocumentsbydatasetid(id",{"_index":1086,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.documentrepository.finddocumentbyid(documentid",{"_index":1586,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentrepository.updatedocumentbyid(documentid",{"_index":1592,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentrepository.countsegmentsbydocumentid(documentid",{"_index":1584,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentrepository.createsegment",{"_index":1588,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentrepository.deletemanysegmentsbydatasetid(id",{"_index":1085,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.documentsegmentrepository.deletesegmentbyid(segmentid",{"_index":1606,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentrepository.findmanysegmentspaginatedbydocumentid(documentid",{"_index":1600,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentrepository.findsegmentbydatasetdocumentandhash",{"_index":1582,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentrepository.findsegmentbyid(segmentid",{"_index":1598,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentrepository.updatemanyhitcountbydatasetidandhashes",{"_index":2634,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["this.documentsegmentrepository.updatesegmentbyid(segmentid",{"_index":1601,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.documentsegmentservice.createsegment(datasetid",{"_index":1410,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["this.documentsegmentservice.deletesegmentbyid(datasetid",{"_index":1420,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["this.documentsegmentservice.disablesegmentbyid(segmentid",{"_index":1424,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["this.documentsegmentservice.enablesegmentbyid(segmentid",{"_index":1426,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["this.documentsegmentservice.findmanysegmentspaginatedbydocumentid",{"_index":1417,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["this.documentsegmentservice.findsegmentbyid(segmentid",{"_index":1413,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["this.documentsegmentservice.updatesegmentbyid(datasetid",{"_index":1422,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["this.documentservice.archivedocumentbyid(documentid",{"_index":1219,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.createdocumentbyfile(createdocumentbyfiledto",{"_index":1208,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.createdocumentbytext(createdocumentbytextdto",{"_index":1206,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.deletedocumentbyid(datasetid",{"_index":1213,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.disabledocumentbyid(documentid",{"_index":1215,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.enabledocumentbyid(documentid",{"_index":1217,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.finddocumentbyid(documentid",{"_index":1203,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.findmanydocumentspaginatedbydatasetid",{"_index":1199,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.renamedocumentbyid(documentid",{"_index":1211,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.documentservice.unarchivedocumentbyid(documentid",{"_index":1221,"title":{},"body":{"controllers/DocumentController.html":{}}}],["this.downloadfile(filepath",{"_index":468,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.embeddingrepository.deletemanyembeddingsbyclassprefix(generatevectorclassprefixbydatasetid(id",{"_index":1084,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.embeddingrepository.deletemanyembeddingsbyhashandclassprefix",{"_index":1604,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.embeddingrepository.registerembeddings",{"_index":1595,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.embeddingrepository.similaritysearchvectorwithscore",{"_index":2623,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["this.expandkeywordstosubtokens(new",{"_index":2035,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["this.extractdocumentsfromcos(key",{"_index":2445,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["this.filepath",{"_index":2203,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["this.filesrepository.createfile",{"_index":1960,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.filesrepository.findfilebyid(id",{"_index":1981,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.filesservice.findfilebyid(fileid",{"_index":2007,"title":{},"body":{"injectables/IndexingService.html":{}}}],["this.filesservice.findfilebyid(id",{"_index":1857,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.uploadfile(file",{"_index":1848,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.uploadtextfile",{"_index":1852,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.generateqadocumentsforbatch(splitdocs",{"_index":2455,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["this.generateqadocumentsforsingle(doc",{"_index":2506,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["this.httpadapterhost",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.indexingservice.indexingestimate(indexingestimatedto",{"_index":1993,"title":{},"body":{"controllers/IndexingController.html":{}}}],["this.jiebakeywordservice.extractkeywordsfromtext(content",{"_index":1590,"title":{},"body":{"injectables/DocumentSegmentService.html":{}}}],["this.key",{"_index":464,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.llmgeneratorservice.generateqadocumentfromtextandlanguage",{"_index":1789,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ProcessDocumentService.html":{}}}],["this.logger.error",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DocumentSegmentService.html":{}}}],["this.logger.warn(`sse",{"_index":86,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.parse(workbook",{"_index":2202,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["this.prismaservice.$transaction(async",{"_index":2686,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["this.prismaservice.assistant.create",{"_index":301,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["this.prismaservice.assistant.delete",{"_index":311,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["this.prismaservice.assistant.findmany",{"_index":304,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["this.prismaservice.assistant.findunique",{"_index":307,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["this.prismaservice.assistant.update",{"_index":309,"title":{},"body":{"injectables/AssistantRelationalRepository.html":{}}}],["this.prismaservice.prisma.$executeraw",{"_index":1681,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.prisma.$queryraw",{"_index":1694,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.prisma.$transaction(queries",{"_index":1693,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.prisma.dataset.create",{"_index":1041,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["this.prismaservice.prisma.dataset.delete",{"_index":1049,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["this.prismaservice.prisma.dataset.findmany",{"_index":1044,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["this.prismaservice.prisma.dataset.findunique",{"_index":1045,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["this.prismaservice.prisma.dataset.update",{"_index":1047,"title":{},"body":{"injectables/DatasetRelationalRepository.html":{}}}],["this.prismaservice.prisma.datasetprocessrule.create",{"_index":1012,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["this.prismaservice.prisma.datasetprocessrule.delete",{"_index":1020,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["this.prismaservice.prisma.datasetprocessrule.deletemany",{"_index":1021,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["this.prismaservice.prisma.datasetprocessrule.findfirst",{"_index":1017,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["this.prismaservice.prisma.datasetprocessrule.findunique",{"_index":1015,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["this.prismaservice.prisma.datasetprocessrule.update",{"_index":1018,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.count",{"_index":1341,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.create",{"_index":1323,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.delete",{"_index":1347,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.deletemany",{"_index":1348,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.findfirst",{"_index":1344,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.findmany",{"_index":1326,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.findunique",{"_index":1342,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.document.update",{"_index":1345,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.count",{"_index":1520,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.create",{"_index":1512,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.createmany",{"_index":1515,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.createmanyandreturn",{"_index":1517,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.delete",{"_index":1533,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.deletemany",{"_index":1534,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.findfirst",{"_index":1523,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.findmany",{"_index":1518,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.findunique",{"_index":1521,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.update",{"_index":1528,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.documentsegment.updatemany",{"_index":1530,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{}}}],["this.prismaservice.prisma.embeddings.create",{"_index":1674,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.prisma.embeddings.createmanyandreturn",{"_index":1720,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.prisma.embeddings.delete",{"_index":1725,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.prisma.embeddings.deletemany",{"_index":1726,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.prisma.embeddings.findfirst",{"_index":1722,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.prismaservice.uploadfile.create",{"_index":1902,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["this.prismaservice.uploadfile.findfirst",{"_index":1899,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["this.prismaservice.uploadfile.findunique",{"_index":1906,"title":{},"body":{"injectables/FilesRelationalRepository.html":{}}}],["this.processdocumentservice.processdocumentswithrules(file.key",{"_index":2009,"title":{},"body":{"injectables/IndexingService.html":{}}}],["this.region",{"_index":463,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.retrievalservice.rag(datasetid",{"_index":2584,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["this.retrievalservice.similaritysearchvectorwithscore(datasetid",{"_index":2581,"title":{},"body":{"controllers/RetrievalController.html":{}}}],["this.retrievalservice.similaritysearchvectorwithscore(datasets.id",{"_index":363,"title":{},"body":{"injectables/AssistantService.html":{}}}],["this.secretid",{"_index":460,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.secretkey",{"_index":461,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["this.separator",{"_index":2190,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["this.sheetname",{"_index":2189,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["this.similaritysearchvectorwithscore(datasetid",{"_index":2639,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["this.splitdocumentsbysegmentationrules(docs",{"_index":2454,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["this.tablename",{"_index":1671,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.transactionmanager",{"_index":2700,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["this.uploadfiletocos(buffer",{"_index":1939,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.validateexcel(buffer",{"_index":1950,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.vectorcolumnname",{"_index":1672,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["this.vectorstore",{"_index":1668,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["threshold",{"_index":2625,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["throw",{"_index":472,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/DocumentSegmentService.html":{},"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{},"interfaces/TransactionOptions.html":{}}}],["throws",{"_index":1948,"title":{},"body":{"injectables/FilesService.html":{}}}],["timeout",{"_index":2675,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{}}}],["timeoutinterceptor",{"_index":2672,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timestamp",{"_index":81,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["todomain",{"_index":253,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["todomain(raw",{"_index":255,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["token",{"_index":820,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{},"classes/SegmentationRuleDto.html":{}}}],["token.match(/\\w+/g",{"_index":2038,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["tokenizer",{"_index":2765,"title":{},"body":{"dependencies.html":{}}}],["tokens",{"_index":772,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["topersistence",{"_index":254,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["topersistence(domainentity",{"_index":259,"title":{},"body":{"classes/AssistantMapper.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"classes/DocumentMapper.html":{},"classes/DocumentSegmentMapper.html":{},"classes/EmbeddingMapper.html":{},"classes/FilesMapper.html":{}}}],["topk",{"_index":964,"title":{},"body":{"classes/DatasetMapper.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{}}}],["total",{"_index":2361,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{}}}],["totalpage",{"_index":2365,"title":{},"body":{"interfaces/Pagination$.html":{},"classes/PaginationResponseDto.html":{}}}],["tracking",{"_index":2489,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["transactional",{"_index":1067,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{}}}],["transactional(options",{"_index":2692,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["transactional_timeout",{"_index":2684,"title":{},"body":{"injectables/TransactionManager.html":{}}}],["transactionmanager",{"_index":1100,"title":{"injectables/TransactionManager.html":{}},"body":{"modules/DatasetsModule.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"overview.html":{}}}],["transactionmanager.runintransaction(async",{"_index":2702,"title":{},"body":{"interfaces/TransactionOptions.html":{}}}],["transactionoptions",{"_index":2681,"title":{"interfaces/TransactionOptions.html":{}},"body":{"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{}}}],["transform",{"_index":2538,"title":{},"body":{"classes/QuerySegmentDto.html":{}}}],["transformer",{"_index":644,"title":{},"body":{"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/LeekFile.html":{},"classes/PaginationDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QuerySegmentDto.html":{},"classes/SimilaritySearchDto.html":{},"dependencies.html":{}}}],["trim",{"_index":2461,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["trimleadingpunctuation",{"_index":2444,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["trimleadingpunctuation(updatedcontent",{"_index":2478,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["true",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssistantService.html":{},"classes/ConversationDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"injectables/RetrievalService.html":{}}}],["true})@isboolean",{"_index":810,"title":{},"body":{"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/PreProcessingRuleDto.html":{}}}],["true})@isoptional()@isboolean",{"_index":2527,"title":{},"body":{"classes/QueryDocumentDto.html":{}}}],["true})@isoptional()@transform",{"_index":2535,"title":{},"body":{"classes/QuerySegmentDto.html":{}}}],["true})@isstring",{"_index":869,"title":{},"body":{"classes/CreateEmbeddingDto.html":{}}}],["true})@type(undefined",{"_index":641,"title":{},"body":{"classes/ConversationDto.html":{},"classes/ProcessRuleDto.html":{}}}],["try",{"_index":467,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/DocumentSegmentService.html":{},"injectables/FilesService.html":{},"injectables/PrismaService.html":{},"injectables/TransactionManager.html":{}}}],["txt",{"_index":1945,"title":{},"body":{"injectables/FilesService.html":{}}}],["type",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"classes/AssistantMapper.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"classes/DatasetProcessRuleMapper.html":{},"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{},"controllers/DocumentController.html":{},"classes/DocumentDto.html":{},"classes/DocumentMapper.html":{},"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"classes/EmbeddingMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"interfaces/EmbeddingWithMetadata.html":{},"classes/ErrorResponseDto.html":{},"injectables/ErrorsInterceptor.html":{},"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesRelationalRepository.html":{},"classes/FilesRepository.html":{},"injectables/FilesService.html":{},"controllers/IndexingController.html":{},"classes/IndexingEstimateDto.html":{},"injectables/IndexingService.html":{},"injectables/JiebaKeywordService.html":{},"injectables/LLMGeneratorService.html":{},"classes/LeekAssistant.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekDocxLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekEmbedding.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekFile.html":{},"classes/LeekJSONLinesLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekPPTXLoader.html":{},"classes/LeekSRTLoader.html":{},"classes/LeekSegment.html":{},"classes/LeekTextLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Pagination$.html":{},"classes/PaginationDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PreProcessingRuleDto.html":{},"injectables/PrismaService.html":{},"injectables/ProcessDocumentService.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"controllers/RetrievalController.html":{},"classes/RetrievalModelDto.html":{},"injectables/RetrievalService.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransactionManager.html":{},"interfaces/TransactionOptions.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadFileDto.html":{},"classes/UploadTextFileDto.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":2877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2860,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":458,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/QuerySegmentDto.html":{}}}],["types",{"_index":2883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tz",{"_index":508,"title":{},"body":{"classes/ConfigureAdapter.html":{},"injectables/ConfigureService.html":{}}}],["unarchivedocumentbyid",{"_index":1137,"title":{},"body":{"controllers/DocumentController.html":{}}}],["unarchivedocumentbyid(_datasetid",{"_index":1180,"title":{},"body":{"controllers/DocumentController.html":{}}}],["undefined",{"_index":615,"title":{},"body":{"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentDto.html":{},"controllers/DatasetController.html":{},"controllers/DocumentSegmentController.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekDataset.html":{},"classes/LeekDatasetProcessRule.html":{},"classes/LeekDocument.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekExcelLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekSegment.html":{},"classes/PreProcessingRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/ResponseIndexingEstimateDto.html":{},"injectables/RetrievalService.html":{}}}],["undefined})@apiparam({name",{"_index":1173,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/RetrievalController.html":{}}}],["undefined})@isenum(conversationactionenum",{"_index":636,"title":{},"body":{"classes/ConversationDto.html":{}}}],["undefined})@isobject",{"_index":1996,"title":{},"body":{"classes/IndexingEstimateDto.html":{}}}],["undefined})@isoptional()@isarray",{"_index":858,"title":{},"body":{"classes/CreateDocumentSegmentDto.html":{}}}],["undefined})@isoptional()@isjson",{"_index":723,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentDto.html":{}}}],["undefined})@isoptional()@isobject",{"_index":1227,"title":{},"body":{"classes/DocumentDto.html":{}}}],["undefined})@isstring",{"_index":719,"title":{},"body":{"classes/CreateDatasetProcessRuleDto.html":{},"classes/ProcessRuleDto.html":{}}}],["uniqueness",{"_index":2490,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["unknown",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"classes/COSLoader.html":{},"controllers/DocumentController.html":{},"controllers/ExampleController.html":{},"injectables/IndexingService.html":{},"injectables/LLMGeneratorService.html":{},"injectables/RetrievalService.html":{}}}],["unlicensed",{"_index":2858,"title":{},"body":{"properties.html":{}}}],["unstructuredloader",{"_index":2321,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["unstructuredloaderoptions",{"_index":2325,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["unstructuredmemoryloaderoptions",{"_index":2323,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["unstructuredoptions",{"_index":2324,"title":{},"body":{"classes/LeekUnstructuredLoader.html":{}}}],["up",{"_index":500,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{}}}],["update",{"_index":325,"title":{},"body":{"classes/AssistantRepository.html":{},"classes/DatasetProcessRuleRepository.html":{},"classes/DatasetRepository.html":{},"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/RetrievalService.html":{}}}],["updateassistantbyid",{"_index":173,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["updateassistantbyid(id",{"_index":201,"title":{},"body":{"controllers/AssistantController.html":{},"injectables/AssistantRelationalRepository.html":{},"classes/AssistantRepository.html":{},"injectables/AssistantService.html":{}}}],["updateassistantdto",{"_index":202,"title":{"classes/UpdateAssistantDto.html":{}},"body":{"controllers/AssistantController.html":{},"injectables/AssistantService.html":{},"classes/UpdateAssistantDto.html":{}}}],["updatedat",{"_index":1355,"title":{},"body":{"classes/DocumentRepository.html":{},"classes/DocumentSegmentRepository.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["updatedatasetbyid",{"_index":902,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["updatedatasetbyid(id",{"_index":915,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetRelationalRepository.html":{},"classes/DatasetRepository.html":{},"injectables/DatasetService.html":{}}}],["updatedatasetdto",{"_index":916,"title":{"classes/UpdateDatasetDto.html":{}},"body":{"controllers/DatasetController.html":{},"injectables/DatasetService.html":{},"classes/UpdateDatasetDto.html":{}}}],["updatedatasetprocessruledto",{"_index":2711,"title":{"classes/UpdateDatasetProcessRuleDto.html":{}},"body":{"classes/UpdateDatasetProcessRuleDto.html":{}}}],["updatedcontent",{"_index":2474,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["updatedocumentbyfiledto",{"_index":2713,"title":{"classes/UpdateDocumentByFileDto.html":{}},"body":{"classes/UpdateDocumentByFileDto.html":{}}}],["updatedocumentbyid",{"_index":1298,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["updatedocumentbyid(id",{"_index":1317,"title":{},"body":{"injectables/DocumentRelationalRepository.html":{},"classes/DocumentRepository.html":{}}}],["updatedocumentbytextdto",{"_index":2715,"title":{"classes/UpdateDocumentByTextDto.html":{}},"body":{"classes/UpdateDocumentByTextDto.html":{}}}],["updatedocumentdto",{"_index":2717,"title":{"classes/UpdateDocumentDto.html":{}},"body":{"classes/UpdateDocumentDto.html":{}}}],["updatedocumentnamedto",{"_index":1177,"title":{"classes/UpdateDocumentNameDto.html":{}},"body":{"controllers/DocumentController.html":{},"classes/UpdateDocumentNameDto.html":{}}}],["updatedocumentsegmentdto",{"_index":1404,"title":{"classes/UpdateDocumentSegmentDto.html":{}},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{},"classes/UpdateDocumentSegmentDto.html":{}}}],["updatemany",{"_index":1558,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["updatemanyhitcountbydatasetidandhashes",{"_index":1476,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["updatemanyhitcountbydatasetidandhashes(hashes",{"_index":1506,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["updaterulebyid",{"_index":994,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["updaterulebyid(id",{"_index":1006,"title":{},"body":{"injectables/DatasetProcessRuleRelationalRepository.html":{},"classes/DatasetProcessRuleRepository.html":{}}}],["updatesegmentbyid",{"_index":1377,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{}}}],["updatesegmentbyid(datasetid",{"_index":1403,"title":{},"body":{"controllers/DocumentSegmentController.html":{},"injectables/DocumentSegmentService.html":{}}}],["updatesegmentbyid(id",{"_index":1508,"title":{},"body":{"injectables/DocumentSegmentRelationalRepository.html":{},"classes/DocumentSegmentRepository.html":{}}}],["upload",{"_index":1928,"title":{},"body":{"injectables/FilesService.html":{}}}],["upload_file",{"_index":2819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["upload_file_id",{"_index":2133,"title":{},"body":{"classes/LeekDocument.html":{}}}],["upload_files/804f3d62",{"_index":2219,"title":{},"body":{"classes/LeekFile.html":{}}}],["uploaded",{"_index":1921,"title":{},"body":{"injectables/FilesService.html":{}}}],["uploadedfile",{"_index":1830,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":1811,"title":{},"body":{"controllers/FilesController.html":{},"classes/FilesMapper.html":{},"injectables/FilesService.html":{}}}],["uploadfile(@uploadedfile",{"_index":1847,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":1818,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["uploadfiledto",{"_index":1820,"title":{"classes/UploadFileDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/UploadFileDto.html":{}}}],["uploadfiledto.description",{"_index":1849,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfileid",{"_index":833,"title":{},"body":{"classes/CreateDocumentDto.html":{}}}],["uploadfiletocos",{"_index":1911,"title":{},"body":{"injectables/FilesService.html":{}}}],["uploadfiletocos(buffer",{"_index":1922,"title":{},"body":{"injectables/FilesService.html":{}}}],["uploads",{"_index":1919,"title":{},"body":{"injectables/FilesService.html":{}}}],["uploadtextfile",{"_index":1812,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["uploadtextfile(@body",{"_index":1851,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadtextfile(originalname",{"_index":1931,"title":{},"body":{"injectables/FilesService.html":{}}}],["uploadtextfile(uploadtextfiledto",{"_index":1826,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadtextfiledto",{"_index":1827,"title":{"classes/UploadTextFileDto.html":{}},"body":{"controllers/FilesController.html":{},"classes/UploadTextFileDto.html":{}}}],["uploadtextfiledto.description",{"_index":1855,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadtextfiledto.name",{"_index":1853,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadtextfiledto.text",{"_index":1854,"title":{},"body":{"controllers/FilesController.html":{}}}],["useclass",{"_index":2546,"title":{},"body":{"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{}}}],["used",{"_index":2211,"title":{},"body":{"classes/LeekFile.html":{},"miscellaneous/typealiases.html":{}}}],["usedat",{"_index":2212,"title":{},"body":{"classes/LeekFile.html":{}}}],["usefactory",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigureModule.html":{}}}],["useinterceptors",{"_index":1831,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":601,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["user_key",{"_index":577,"title":{},"body":{"classes/ContextProvider.html":{}}}],["uses",{"_index":2709,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["using",{"_index":2601,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["utc",{"_index":568,"title":{},"body":{"injectables/ConfigureService.html":{}}}],["utf8",{"_index":1943,"title":{},"body":{"injectables/FilesService.html":{}}}],["uuid",{"_index":179,"title":{},"body":{"controllers/AssistantController.html":{},"classes/CreateDocumentByFileDto.html":{},"controllers/DatasetController.html":{},"classes/DatasetMapper.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentMapper.html":{},"injectables/DocumentSegmentService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/RetrievalController.html":{},"dependencies.html":{}}}],["uuid'})@apiokresponse({description",{"_index":1815,"title":{},"body":{"controllers/FilesController.html":{}}}],["uuid'})@isoptional()@isuuid",{"_index":741,"title":{},"body":{"classes/CreateDocumentByFileDto.html":{}}}],["uuid)'})@apicreatedresponse({description",{"_index":1380,"title":{},"body":{"controllers/DocumentSegmentController.html":{}}}],["uuid)'})@apinocontentresponse({description",{"_index":1145,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["uuid)'})@apiokresponse({description",{"_index":1167,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["uuid)'})@apiparam({name",{"_index":1143,"title":{},"body":{"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{}}}],["uuid)，获取文档的详细信息。'})@apiparam({name",{"_index":1166,"title":{},"body":{"controllers/DocumentController.html":{}}}],["uuid。'})@apinocontentresponse({description",{"_index":194,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["uuid。'})@apiokresponse({description",{"_index":199,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["uuid助手的特定属性，未包含在请求体中的属性将保持不变。'})@apiparam({name",{"_index":204,"title":{},"body":{"controllers/AssistantController.html":{}}}],["uuid数据集的特定属性，未包含在请求体中的属性将保持不变。'})@apiparam({name",{"_index":917,"title":{},"body":{"controllers/DatasetController.html":{}}}],["uuid检索特定助手的详细信息。'})@apiparam({name",{"_index":198,"title":{},"body":{"controllers/AssistantController.html":{}}}],["uuid检索特定数据集的详细信息。'})@apiparam({name",{"_index":910,"title":{},"body":{"controllers/DatasetController.html":{}}}],["uuid的助手。此操作不可逆。'})@apiparam({name",{"_index":193,"title":{},"body":{"controllers/AssistantController.html":{}}}],["uuid的数据集。此操作不可逆。'})@apiparam({name",{"_index":907,"title":{},"body":{"controllers/DatasetController.html":{}}}],["v5",{"_index":451,"title":{},"body":{"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"injectables/FilesService.html":{},"dependencies.html":{}}}],["validateexcel",{"_index":1912,"title":{},"body":{"injectables/FilesService.html":{}}}],["validateexcel(buffer",{"_index":1934,"title":{},"body":{"injectables/FilesService.html":{}}}],["validatenested",{"_index":645,"title":{},"body":{"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/ProcessRuleDto.html":{},"classes/SimilaritySearchDto.html":{}}}],["validatenested()@type(undefined",{"_index":654,"title":{},"body":{"classes/ConversationMessageDto.html":{}}}],["validator",{"_index":607,"title":{},"body":{"classes/ConversationAuthorDto.html":{},"classes/ConversationContentDto.html":{},"classes/ConversationDto.html":{},"classes/ConversationMessageDto.html":{},"classes/CreateAssistantDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateDatasetProcessRuleDto.html":{},"classes/CreateDocumentByFileDto.html":{},"classes/CreateDocumentByTextDto.html":{},"classes/CreateDocumentDto.html":{},"classes/CreateDocumentSegmentDto.html":{},"classes/CreateEmbeddingDto.html":{},"interfaces/DataSourceInfo.html":{},"classes/DocumentDto.html":{},"classes/IndexingEstimateDto.html":{},"classes/PaginationDto.html":{},"classes/PreProcessingRuleDto.html":{},"classes/ProcessRuleDto.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"classes/RetrievalModelDto.html":{},"classes/SegmentationRuleDto.html":{},"classes/SimilaritySearchDto.html":{},"classes/UpdateDocumentNameDto.html":{},"classes/UploadTextFileDto.html":{},"dependencies.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ConfigureService.html":{},"classes/ContextProvider.html":{},"classes/CreateDocumentDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"injectables/JiebaKeywordService.html":{},"classes/LeekAssistant.html":{},"classes/LeekDataset.html":{},"classes/LeekDocument.html":{},"classes/LeekFile.html":{},"classes/PaginationResponseDto.html":{},"injectables/ProcessDocumentService.html":{},"classes/QueryDocumentDto.html":{},"classes/QuerySegmentDto.html":{},"miscellaneous/enumerations.html":{}}}],["value.tolowercase",{"_index":2539,"title":{},"body":{"classes/QuerySegmentDto.html":{}}}],["values",{"_index":1684,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["variant",{"_index":2814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vector",{"_index":941,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/DatasetService.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"classes/LeekDataset.html":{},"injectables/RetrievalService.html":{}}}],["vectorcolumnname",{"_index":1631,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["vectorstore",{"_index":959,"title":{},"body":{"classes/DatasetMapper.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekDataset.html":{}}}],["vectorstring",{"_index":1679,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["vectorstring}::vector",{"_index":1688,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["vector}::vector",{"_index":1703,"title":{},"body":{"injectables/EmbeddingRelationalRepository.html":{}}}],["vendor",{"_index":697,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/LeekDataset.html":{}}}],["version",{"_index":213,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{},"properties.html":{}}}],["version('1",{"_index":230,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{},"controllers/DocumentController.html":{},"controllers/DocumentSegmentController.html":{},"controllers/ExampleController.html":{},"controllers/FilesController.html":{},"controllers/IndexingController.html":{},"controllers/RetrievalController.html":{}}}],["version('1')@patch(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":203,"title":{},"body":{"controllers/AssistantController.html":{},"controllers/DatasetController.html":{}}}],["void",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/COSLoader.html":{},"interfaces/COSLoaderParams.html":{},"classes/ContextProvider.html":{},"injectables/TransactionManager.html":{}}}],["w",{"_index":2463,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["watch",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["web",{"_index":2818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["website_crawl",{"_index":2822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["within",{"_index":2603,"title":{},"body":{"injectables/RetrievalService.html":{}}}],["withpaginationbydatasetid",{"_index":1364,"title":{},"body":{"classes/DocumentRepository.html":{}}}],["withpaginationbydocumentid",{"_index":1553,"title":{},"body":{"classes/DocumentSegmentRepository.html":{}}}],["withscore",{"_index":1742,"title":{},"body":{"classes/EmbeddingRepository.html":{}}}],["word",{"_index":2040,"title":{},"body":{"injectables/JiebaKeywordService.html":{}}}],["wordcount",{"_index":773,"title":{},"body":{"classes/CreateDocumentDto.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/LeekDocument.html":{},"classes/LeekSegment.html":{}}}],["workbook",{"_index":1963,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["workbook.sheetnames[0",{"_index":1966,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["workbook.sheets[sheetname",{"_index":1969,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["world",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["wrapper",{"_index":2886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wrappertype",{"_index":2875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writable",{"_index":2387,"title":{},"body":{"classes/PaginationResponseDto.html":{}}}],["x",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["xlsx",{"_index":1936,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{},"injectables/ProcessDocumentService.html":{},"dependencies.html":{}}}],["xlsx.read(buffer",{"_index":1964,"title":{},"body":{"injectables/FilesService.html":{}}}],["xlsx.readfile(this.filepath",{"_index":2200,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["xlsx.utils.sheet_to_json(sheet",{"_index":1971,"title":{},"body":{"injectables/FilesService.html":{},"classes/LeekExcelLoader.html":{}}}],["xlsx.workbook",{"_index":2185,"title":{},"body":{"classes/LeekExcelLoader.html":{}}}],["yes",{"_index":1175,"title":{},"body":{"controllers/DocumentController.html":{},"classes/DocumentRepository.html":{},"controllers/DocumentSegmentController.html":{},"classes/DocumentSegmentRepository.html":{},"injectables/DocumentSegmentService.html":{},"injectables/EmbeddingRelationalRepository.html":{},"classes/EmbeddingRepository.html":{},"injectables/FilesService.html":{},"classes/LeekCSVLoader.html":{},"classes/LeekEPubLoader.html":{},"classes/LeekJSONLoader.html":{},"classes/LeekPDFLoader.html":{},"classes/LeekUnstructuredLoader.html":{},"injectables/ProcessDocumentService.html":{},"controllers/RetrievalController.html":{},"injectables/RetrievalService.html":{},"injectables/TransactionManager.html":{}}}],["z]{2,}/gi",{"_index":2464,"title":{},"body":{"injectables/ProcessDocumentService.html":{}}}],["zane",{"_index":2859,"title":{},"body":{"properties.html":{}}}],["zh",{"_index":2052,"title":{},"body":{"injectables/LLMGeneratorService.html":{}}}],["zh_cn",{"_index":2834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zh_tw",{"_index":2835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zod",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AssistantsModule.html":{},"modules/ConfigureModule.html":{},"modules/DatasetsModule.html":{},"modules/FilesModule.html":{},"modules/PrismaModule.html":{},"modules/RelationaLeekFilesPersistenceModule.html":{},"modules/RelationalAssistantPersistenceModule.html":{},"modules/RelationalDatasetsPersistenceModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/all_exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/all_exceptions.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AllExceptionsFilter.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/filters/all_exceptions.filter.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/all_exceptions.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\nimport { isString, isObject } from 'lodash';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private readonly logger = new Logger(AllExceptionsFilter.name);\n\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: unknown, host: ArgumentsHost) {\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    let httpStatusCode = HttpStatus.INTERNAL_SERVER_ERROR;\n    let errorMessage = 'Internal Server Error';\n\n    if (exception instanceof HttpException) {\n      httpStatusCode = exception.getStatus();\n      const httpExceptionResponse = exception.getResponse();\n\n      if (isString(httpExceptionResponse)) {\n        errorMessage = httpExceptionResponse;\n      } else if (isObject(httpExceptionResponse) && httpExceptionResponse.hasOwnProperty('message')) {\n        errorMessage = (httpExceptionResponse as HttpException).message;\n      }\n    } else if (exception instanceof Error) {\n      errorMessage = exception.message;\n    }\n\n    this.logger.error({\n      message: errorMessage,\n      stackTrace: exception instanceof Error ? exception.stack : null,\n      path: request.url,\n      method: request.method,\n      timestamp: new Date().toISOString(),\n    });\n\n    if (request.headers.accept === 'text/event-stream') {\n      this.logger.warn(`SSE request encountered an error: ${errorMessage}`);\n      return;\n    }\n\n    const errorResponsePayload = {\n      statusCode: httpStatusCode,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      method: request.method,\n      message: errorMessage,\n    };\n\n    httpAdapter.reply(response, errorResponsePayload, httpStatusCode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAssistantsModule\n\nAssistantsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAssistantsModule->AppModule\n\n\n\n\n\nConfigureModule\n\nConfigureModule\n\nAppModule -->\n\nConfigureModule->AppModule\n\n\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nAppModule -->\n\nDatasetsModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AssistantsModule\n                        \n                        \n                            ConfigureModule\n                        \n                        \n                            DatasetsModule\n                        \n                        \n                            FilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import path from 'path';\n\nimport { Module } from '@nestjs/common';\n\nimport { ClsModule } from 'nestjs-cls';\nimport { AcceptLanguageResolver, HeaderResolver, QueryResolver } from 'nestjs-i18n';\nimport { I18nModule } from 'nestjs-i18n/dist/i18n.module';\n\nimport { AssistantsModule } from '@leek/assistants/assistants.module';\nimport { ConfigureModule, ConfigureAdapter } from '@leek/configure';\nimport { DatasetsModule } from '@leek/datasets/datasets.module';\nimport { FilesModule } from '@leek/files/files.module';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    ConfigureModule,\n    ClsModule.forRoot({\n      global: true,\n      middleware: { mount: true },\n    }),\n    I18nModule.forRootAsync({\n      useFactory: ({ FALLBACK_LANGUAGE }: ConfigureAdapter) => ({\n        fallbackLanguage: FALLBACK_LANGUAGE,\n        loaderOptions: { path: path.join(__dirname, '/i18n/'), watch: true },\n      }),\n      resolvers: [\n        new QueryResolver(['lang', 'locale', 'language']),\n        new HeaderResolver(['x-lang', 'x-locale', 'x-language']),\n        AcceptLanguageResolver,\n      ],\n      inject: [ConfigureAdapter],\n    }),\n    DatasetsModule,\n    FilesModule,\n    AssistantsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AssistantController.html":{"url":"controllers/AssistantController.html","title":"controller - AssistantController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AssistantController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/assistants.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                assistants\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                conversation\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createAssistant\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAssistantById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAssistantById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateAssistantById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        conversation\n                        \n                    \n                \n            \n            \n                \n                        \n                    conversation(id: string, conversationDto: ConversationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/conversation')@Sse()@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '启动与助手的实时会话', description: '基于助手的 UUID 和用户提供的聊天内容，启动一个实时会话。会话通过服务器发送事件 (SSE) 推送助手响应。'})@ApiOkResponse(ChatSseResponse)@ApiParam({name: 'id', description: '助手的 UUID，用于标识目标助手。'})\n                \n            \n\n                    \n                        \n                            Defined in src/assistants/assistants.controller.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                conversationDto\n                                            \n                                                            ConversationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createAssistant\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAssistant(createAssistantDto: CreateAssistantDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '创建助手', description: '创建一个新的助手，返回创建成功的助手对象。'})@ApiCreatedResponse({description: '助手创建成功。返回新创建的助手。', type: LeekAssistant})\n                \n            \n\n                    \n                        \n                            Defined in src/assistants/assistants.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAssistantDto\n                                            \n                                                            CreateAssistantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAssistantById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '删除助手', description: '从系统中删除指定UUID的助手。此操作不可逆。'})@ApiParam({name: 'id', description: '要删除的助手的UUID。'})@ApiNoContentResponse({description: '助手删除成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/assistants/assistants.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAssistantById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '根据ID获取助手', description: '根据唯一的UUID检索特定助手的详细信息。'})@ApiParam({name: 'id', description: '要检索的助手的UUID。'})@ApiOkResponse({description: '返回与指定UUID匹配的助手。', type: LeekAssistant})\n                \n            \n\n                    \n                        \n                            Defined in src/assistants/assistants.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAssistantById(id: string, updateAssistantDto: UpdateAssistantDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Patch(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '部分更新助手', description: '更新指定UUID助手的特定属性，未包含在请求体中的属性将保持不变。'})@ApiParam({name: 'id', description: '要更新的助手的UUID。'})@ApiNoContentResponse({description: '助手更新成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/assistants/assistants.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAssistantDto\n                                            \n                                                            UpdateAssistantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  Sse,\n  Version,\n} from '@nestjs/common';\nimport {\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { AssistantService } from './assistants.service';\nimport { LeekAssistant } from './domain/assistants';\nimport { ConversationDto, ChatSseResponse } from './dto/conversation.dto';\nimport { CreateAssistantDto } from './dto/create-assistant.dto';\nimport { UpdateAssistantDto } from './dto/update-assistant.dto';\n\n@ApiTags('助手管理')\n@Controller('assistants')\nexport class AssistantController {\n  constructor(private readonly assistantService: AssistantService) {}\n\n  @Post()\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({\n    summary: '创建助手',\n    description: '创建一个新的助手，返回创建成功的助手对象。',\n  })\n  @ApiCreatedResponse({\n    description: '助手创建成功。返回新创建的助手。',\n    type: LeekAssistant,\n  })\n  async createAssistant(@Body() createAssistantDto: CreateAssistantDto): Promise {\n    return this.assistantService.createAssistant(createAssistantDto);\n  }\n\n  @Get(':id')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '根据ID获取助手',\n    description: '根据唯一的UUID检索特定助手的详细信息。',\n  })\n  @ApiParam({\n    name: 'id',\n    description: '要检索的助手的UUID。',\n  })\n  @ApiOkResponse({\n    description: '返回与指定UUID匹配的助手。',\n    type: LeekAssistant,\n  })\n  async findAssistantById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n    return this.assistantService.findAssistantById(id);\n  }\n\n  @Version('1')\n  @Patch(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '部分更新助手',\n    description: '更新指定UUID助手的特定属性，未包含在请求体中的属性将保持不变。',\n  })\n  @ApiParam({\n    name: 'id',\n    description: '要更新的助手的UUID。',\n  })\n  @ApiNoContentResponse({\n    description: '助手更新成功。',\n  })\n  async updateAssistantById(\n    @Param('id', new ParseUUIDPipe()) id: string,\n    @Body() updateAssistantDto: UpdateAssistantDto,\n  ): Promise {\n    return this.assistantService.updateAssistantById(id, updateAssistantDto);\n  }\n\n  @Delete(':id')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '删除助手',\n    description: '从系统中删除指定UUID的助手。此操作不可逆。',\n  })\n  @ApiParam({\n    name: 'id',\n    description: '要删除的助手的UUID。',\n  })\n  @ApiNoContentResponse({\n    description: '助手删除成功。',\n  })\n  async deleteAssistantById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n    return this.assistantService.deleteAssistantById(id);\n  }\n\n  @Post(':id/conversation')\n  @Sse()\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '启动与助手的实时会话',\n    description: '基于助手的 UUID 和用户提供的聊天内容，启动一个实时会话。会话通过服务器发送事件 (SSE) 推送助手响应。',\n  })\n  @ApiOkResponse(ChatSseResponse)\n  @ApiParam({\n    name: 'id',\n    description: '助手的 UUID，用于标识目标助手。',\n  })\n  async conversation(@Param('id', new ParseUUIDPipe()) id: string, @Body() conversationDto: ConversationDto) {\n    return this.assistantService.conversation(id, conversationDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssistantMapper.html":{"url":"classes/AssistantMapper.html","title":"class - AssistantMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssistantMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/infrastructure/persistence/mappers/assistants.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: Assistant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/mappers/assistants.mapper.ts:12\n                        \n                    \n\n\n            \n                \n                        将数据库实体转换为领域实体\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                        Assistant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据库中的助手记录\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeekAssistant\n\n                        \n                            \n                                \n领域实体\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: LeekAssistant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/mappers/assistants.mapper.ts:33\n                        \n                    \n\n\n            \n                \n                        将领域实体转换为数据库实体\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            LeekAssistant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n领域实体\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Assistant\n\n                        \n                            \n                                \n数据库实体\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Assistant } from '@prisma/client';\n\nimport { LeekAssistant } from '../../../domain/assistants';\n\nexport class AssistantMapper {\n  /**\n   * 将数据库实体转换为领域实体\n   *\n   * @param {Assistant} raw - 数据库中的助手记录\n   * @returns {LeekAssistant} - 领域实体\n   */\n  static toDomain(raw: Assistant): LeekAssistant {\n    const domainEntity = new LeekAssistant();\n\n    domainEntity.id = raw.id;\n    domainEntity.name = raw.name;\n    domainEntity.description = raw.description;\n    domainEntity.datasetId = raw.datasetId;\n    domainEntity.systemPrompt = raw.systemPrompt;\n\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  /**\n   * 将领域实体转换为数据库实体\n   *\n   * @param {LeekAssistant} domainEntity - 领域实体\n   * @returns {Assistant} - 数据库实体\n   */\n  static toPersistence(domainEntity: LeekAssistant): Assistant {\n    const persistenceEntity = {} as Assistant;\n\n    persistenceEntity.name = domainEntity.name;\n    persistenceEntity.description = domainEntity.description;\n    persistenceEntity.datasetId = domainEntity.datasetId;\n    persistenceEntity.systemPrompt = domainEntity.systemPrompt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssistantRelationalRepository.html":{"url":"injectables/AssistantRelationalRepository.html","title":"injectable - AssistantRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssistantRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/infrastructure/persistence/repositories/assistants.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAssistant\n                            \n                            \n                                    Async\n                                deleteAssistantById\n                            \n                            \n                                    Async\n                                findAssistantById\n                            \n                            \n                                    Async\n                                findManyAssistants\n                            \n                            \n                                    Async\n                                updateAssistantById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAssistant\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAssistant(data: LeekAssistant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:19\n                        \n                    \n\n\n            \n                \n                        创建助手\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekAssistant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n领域实体\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n创建的助手领域实体\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAssistantById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:71\n                        \n                    \n\n\n            \n                \n                        删除助手\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手 ID\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAssistantById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:43\n                        \n                    \n\n\n            \n                \n                        根据 ID 查询助手\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手 ID\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n匹配的助手或 null\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyAssistants\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyAssistants()\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:32\n                        \n                    \n\n\n            \n                \n                        获取所有助手\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n助手领域实体数组\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAssistantById(id: string, payload: LeekAssistant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/repositories/assistants.repository.ts:58\n                        \n                    \n\n\n            \n                \n                        更新助手\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手 ID\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            LeekAssistant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要更新的数据\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { PrismaService } from '@leek/prisma';\n\nimport { LeekAssistant } from '../../../domain/assistants';\nimport { AssistantRepository } from '../assistants.repository';\nimport { AssistantMapper } from '../mappers/assistants.mapper';\n\n@Injectable()\nexport class AssistantRelationalRepository implements AssistantRepository {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  /**\n   * 创建助手\n   *\n   * @param {Assistant} data - 领域实体\n   * @returns {Promise} - 创建的助手领域实体\n   */\n  async createAssistant(data: LeekAssistant): Promise {\n    const assistant = await this.prismaService.assistant.create({\n      data: AssistantMapper.toPersistence(data),\n    });\n\n    return AssistantMapper.toDomain(assistant);\n  }\n\n  /**\n   * 获取所有助手\n   *\n   * @returns {Promise} - 助手领域实体数组\n   */\n  async findManyAssistants(): Promise {\n    const assistants = await this.prismaService.assistant.findMany();\n    return assistants.map(AssistantMapper.toDomain);\n  }\n\n  /**\n   * 根据 ID 查询助手\n   *\n   * @param {string} id - 助手 ID\n   * @returns {Promise} - 匹配的助手或 `null`\n   */\n  async findAssistantById(id: string): Promise {\n    const entity = await this.prismaService.assistant.findUnique({\n      where: { id },\n    });\n\n    return entity ? AssistantMapper.toDomain(entity) : null;\n  }\n\n  /**\n   * 更新助手\n   *\n   * @param {string} id - 助手 ID\n   * @param {Assistant} payload - 要更新的数据\n   * @returns {Promise}\n   */\n  async updateAssistantById(id: string, payload: LeekAssistant): Promise {\n    await this.prismaService.assistant.update({\n      where: { id },\n      data: AssistantMapper.toPersistence(payload),\n    });\n  }\n\n  /**\n   * 删除助手\n   *\n   * @param {string} id - 助手 ID\n   * @returns {Promise}\n   */\n  async deleteAssistantById(id: string): Promise {\n    await this.prismaService.assistant.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssistantRepository.html":{"url":"classes/AssistantRepository.html","title":"class - AssistantRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssistantRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/infrastructure/persistence/assistants.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                抽象的 Assistant 仓库接口。\n提供创建、查询、更新和删除助手的方法。\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createAssistant\n                            \n                            \n                                    Abstract\n                                deleteAssistantById\n                            \n                            \n                                    Abstract\n                                findAssistantById\n                            \n                            \n                                    Abstract\n                                updateAssistantById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createAssistant\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAssistant(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/assistants.repository.ts:18\n                        \n                    \n\n\n            \n                \n                        创建一个新的助手。\n动作: create\n目标: Rule\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手的数据，不包括 id 和 createdAt。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                创建的助手。\n动作: create\n目标: Rule\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAssistantById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/assistants.repository.ts:50\n                        \n                    \n\n\n            \n                \n                        根据规则 ID 删除助手。\n动作: delete\n目标: Rule\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手的 ID。\n\n动作: delete\n目标: Rule\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAssistantById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/assistants.repository.ts:29\n                        \n                    \n\n\n            \n                \n                        根据规则 ID 查询单个助手。\n动作: find\n目标: Rule\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的助手或 null。\n动作: find\n目标: Rule\n条件: ById\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAssistantById(id: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/infrastructure/persistence/assistants.repository.ts:40\n                        \n                    \n\n\n            \n                \n                        根据规则 ID 更新助手。\n动作: update\n目标: Rule\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手的 ID。\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含部分更新数据的对象。\n\n动作: update\n目标: Rule\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeekAssistant } from '../../domain/assistants';\n\n/**\n * 抽象的 Assistant 仓库接口。\n * 提供创建、查询、更新和删除助手的方法。\n */\nexport abstract class AssistantRepository {\n  /**\n   * 创建一个新的助手。\n   * @param data - 助手的数据，不包括 `id` 和 `createdAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   * @returns 创建的助手。\n   *\n   * 动作: create\n   * 目标: Rule\n   * 条件: 无\n   */\n  abstract createAssistant(data: Omit): Promise;\n\n  /**\n   * 根据规则 ID 查询单个助手。\n   * @param id - 助手的 ID。\n   * @returns 找到的助手或 null。\n   *\n   * 动作: find\n   * 目标: Rule\n   * 条件: ById\n   */\n  abstract findAssistantById(id: string): Promise>;\n\n  /**\n   * 根据规则 ID 更新助手。\n   * @param id - 助手的 ID。\n   * @param payload - 包含部分更新数据的对象。\n   *\n   * 动作: update\n   * 目标: Rule\n   * 条件: ById\n   */\n  abstract updateAssistantById(id: string, payload: Partial): Promise;\n\n  /**\n   * 根据规则 ID 删除助手。\n   * @param id - 助手的 ID。\n   *\n   * 动作: delete\n   * 目标: Rule\n   * 条件: ById\n   */\n  abstract deleteAssistantById(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssistantService.html":{"url":"injectables/AssistantService.html","title":"injectable - AssistantService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssistantService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/assistants.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                conversation\n                            \n                            \n                                    Async\n                                createAssistant\n                            \n                            \n                                    Async\n                                deleteAssistantById\n                            \n                            \n                                    Async\n                                findAssistantById\n                            \n                            \n                                    Async\n                                updateAssistantById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configureService: ConfigureAdapter, assistantRepository: AssistantRepository, datasetRepository: DatasetRepository, retrievalService: RetrievalService)\n                    \n                \n                        \n                            \n                                Defined in src/assistants/assistants.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configureService\n                                                  \n                                                        \n                                                                        ConfigureAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assistantRepository\n                                                  \n                                                        \n                                                                        AssistantRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetRepository\n                                                  \n                                                        \n                                                                        DatasetRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retrievalService\n                                                  \n                                                        \n                                                                        RetrievalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        conversation\n                        \n                    \n                \n            \n            \n                \n                        \n                    conversation(id: string, conversationDto: ConversationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/assistants.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                conversationDto\n                                            \n                                                            ConversationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAssistant\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAssistant(createAssistantDto: CreateAssistantDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/assistants.service.ts:35\n                        \n                    \n\n\n            \n                \n                        创建新的助手\n根据提供的 DTO 创建新的助手记录。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createAssistantDto\n                                            \n                                                            CreateAssistantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手创建所需的信息\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n创建成功的助手对象\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAssistantById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/assistants.service.ts:83\n                        \n                    \n\n\n            \n                \n                        删除助手及其相关数据\n删除助手及其可能关联的数据，操作在事务中完成。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手的唯一标识符\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n操作完成时返回\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAssistantById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/assistants.service.ts:58\n                        \n                    \n\n\n            \n                \n                        根据 ID 获取助手\n通过 ID 查询单个助手，如果不存在则返回 null。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n助手对象的数组\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAssistantById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAssistantById(id: string, updateAssistantDto: UpdateAssistantDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/assistants/assistants.service.ts:71\n                        \n                    \n\n\n            \n                \n                        更新助手\n根据提供的更新信息更新指定 ID 的助手记录。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n助手的唯一标识符\n\n\n                                            \n                                        \n                                        \n                                                updateAssistantDto\n                                            \n                                                            UpdateAssistantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含更新数据的 DTO\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n操作完成时返回\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { ChatPromptTemplate } from '@langchain/core/prompts';\nimport { ChatOpenAI } from '@langchain/openai';\nimport { Observable } from 'rxjs';\n\nimport { ConfigureAdapter } from '@leek/configure';\nimport { DatasetRepository } from '@leek/datasets/infrastructure/persistence/dataset.repository';\nimport { RetrievalService } from '@leek/datasets/services/retrieval.service';\nimport { createTokenCompletion, createEndCompletion } from '@leek/utils';\n\nimport { LeekAssistant } from './domain/assistants';\nimport { ConversationDto } from './dto/conversation.dto';\nimport { CreateAssistantDto } from './dto/create-assistant.dto';\nimport { UpdateAssistantDto } from './dto/update-assistant.dto';\nimport { AssistantRepository } from './infrastructure/persistence/assistants.repository';\n\n@Injectable()\nexport class AssistantService {\n  constructor(\n    private readonly configureService: ConfigureAdapter,\n    private readonly assistantRepository: AssistantRepository,\n    private readonly datasetRepository: DatasetRepository,\n    private readonly retrievalService: RetrievalService,\n  ) {}\n\n  /**\n   * 创建新的助手\n   *\n   * 根据提供的 DTO 创建新的助手记录。\n   *\n   * @param {CreateAssistantDto} createAssistantDto - 助手创建所需的信息\n   * @returns {Promise} - 创建成功的助手对象\n   */\n  async createAssistant(createAssistantDto: CreateAssistantDto): Promise {\n    return this.assistantRepository.createAssistant(createAssistantDto);\n  }\n\n  /**\n   * 获取所有助手\n   *\n   * 检索数据库中存储的所有助手。\n   *\n   * @returns {Promise} - 助手对象的数组\n   */\n  // async findManyAssistants(): Promise {\n  //   return this.assistantRepository.findManyAssistants();\n  // }\n\n  /**\n   * 根据 ID 获取助手\n   *\n   * 通过 ID 查询单个助手，如果不存在则返回 `null`。\n   *\n   * @param {Assistant['id']} id - 助手的唯一标识符\n   * @returns {Promise} - 返回匹配的助手或 `null`\n   */\n  async findAssistantById(id: string): Promise {\n    return this.assistantRepository.findAssistantById(id);\n  }\n\n  /**\n   * 更新助手\n   *\n   * 根据提供的更新信息更新指定 ID 的助手记录。\n   *\n   * @param {Assistant['id']} id - 助手的唯一标识符\n   * @param {UpdateAssistantDto} updateAssistantDto - 包含更新数据的 DTO\n   * @returns {Promise} - 操作完成时返回\n   */\n  async updateAssistantById(id: string, updateAssistantDto: UpdateAssistantDto): Promise {\n    await this.assistantRepository.updateAssistantById(id, updateAssistantDto);\n  }\n\n  /**\n   * 删除助手及其相关数据\n   *\n   * 删除助手及其可能关联的数据，操作在事务中完成。\n   *\n   * @param {Assistant['id']} id - 助手的唯一标识符\n   * @returns {Promise} - 操作完成时返回\n   */\n  async deleteAssistantById(id: string): Promise {\n    await this.assistantRepository.deleteAssistantById(id);\n  }\n\n  async conversation(id: string, conversationDto: ConversationDto) {\n    const { messages } = conversationDto;\n    const assistant = await this.assistantRepository.findAssistantById(id);\n    const datasets = await this.datasetRepository.findDatasetById(assistant.datasetId);\n    const query = messages[0].content.parts[0];\n    const documents = await this.retrievalService.similaritySearchVectorWithScore(datasets.id, {\n      query,\n    });\n\n    const context = documents.map((document) => document.pageContent).join('\\n-----------\\n');\n\n    const assistantPrompt = ChatPromptTemplate.fromMessages([\n      ['system', assistant.systemPrompt],\n      ['human', '{input}'],\n    ]);\n\n    const chain = assistantPrompt.pipe(\n      new ChatOpenAI({\n        model: 'gpt-4o',\n        temperature: 0.01,\n        streaming: true,\n        apiKey: this.configureService.OPENAI.API_KEY,\n        configuration: {\n          baseURL: this.configureService.OPENAI.BASE_URL,\n        },\n      }),\n    );\n    const stream = await chain.stream({\n      context,\n      input: query,\n    });\n\n    return new Observable((subscriber) => {\n      (async () => {\n        // Stream chunks of data as they are generated\n        for await (const chunk of stream) {\n          subscriber.next(createTokenCompletion({ parts: [chunk.content] }));\n        }\n        // Send a final completion marker\n        subscriber.next(createEndCompletion());\n        setTimeout(() => {\n          subscriber.complete();\n        }, 100);\n      })();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AssistantsModule.html":{"url":"modules/AssistantsModule.html","title":"module - AssistantsModule","body":"\n                   \n\n\n\n\n    Modules\n    AssistantsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AssistantsModule\n\n\n\ncluster_AssistantsModule_providers\n\n\n\ncluster_AssistantsModule_imports\n\n\n\n\nConfigureModule\n\nConfigureModule\n\n\n\nAssistantsModule\n\nAssistantsModule\n\nAssistantsModule -->\n\nConfigureModule->AssistantsModule\n\n\n\n\n\nRelationalAssistantPersistenceModule\n\nRelationalAssistantPersistenceModule\n\nAssistantsModule -->\n\nRelationalAssistantPersistenceModule->AssistantsModule\n\n\n\n\n\nRelationalDatasetsPersistenceModule\n\nRelationalDatasetsPersistenceModule\n\nAssistantsModule -->\n\nRelationalDatasetsPersistenceModule->AssistantsModule\n\n\n\n\n\nAssistantService\n\nAssistantService\n\nAssistantsModule -->\n\nAssistantService->AssistantsModule\n\n\n\n\n\nRetrievalService\n\nRetrievalService\n\nAssistantsModule -->\n\nRetrievalService->AssistantsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/assistants/assistants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AssistantService\n                        \n                        \n                            RetrievalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AssistantController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigureModule\n                        \n                        \n                            RelationalAssistantPersistenceModule\n                        \n                        \n                            RelationalDatasetsPersistenceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigureModule } from '@leek/configure';\nimport { RelationalDatasetsPersistenceModule } from '@leek/datasets/infrastructure/persistence/relational-persistence.module';\nimport { RetrievalService } from '@leek/datasets/services/retrieval.service';\n\nimport { AssistantController } from './assistants.controller';\nimport { AssistantService } from './assistants.service';\nimport { RelationalAssistantPersistenceModule } from './infrastructure/persistence/relational-persistence.module';\n\n@Module({\n  imports: [ConfigureModule, RelationalAssistantPersistenceModule, RelationalDatasetsPersistenceModule],\n  controllers: [AssistantController],\n  providers: [AssistantService, RetrievalService],\n})\nexport class AssistantsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/COSLoader.html":{"url":"classes/COSLoader.html","title":"class - COSLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  COSLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/cos.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseDocumentLoader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _fs\n                            \n                            \n                                    Private\n                                    Readonly\n                                Bucket\n                            \n                            \n                                    Private\n                                    Readonly\n                                Key\n                            \n                            \n                                    Private\n                                    Readonly\n                                Region\n                            \n                            \n                                    Private\n                                    Readonly\n                                SecretId\n                            \n                            \n                                    Private\n                                    Readonly\n                                SecretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanupTempFile\n                            \n                            \n                                    Private\n                                createTempFilePath\n                            \n                            \n                                    Private\n                                    Async\n                                downloadFile\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: COSLoaderParams)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/cos.loader.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        COSLoaderParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _fs\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/langchain/loaders/cos.loader.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/cos.loader.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/cos.loader.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/cos.loader.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        SecretId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/cos.loader.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        SecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/cos.loader.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cleanupTempFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    cleanupTempFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/langchain/loaders/cos.loader.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createTempFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTempFilePath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/langchain/loaders/cos.loader.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/langchain/loaders/cos.loader.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/langchain/loaders/cos.loader.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as fsDefault from 'node:fs';\nimport * as os from 'node:os';\nimport * as path from 'node:path';\n\nimport COS from 'cos-nodejs-sdk-v5';\nimport { BaseDocumentLoader } from 'langchain/document_loaders/base';\n\nimport { getExtensions } from '@leek/utils';\n\nimport { createDocumentLoader } from './document.loader';\n\nexport interface COSLoaderParams {\n  SecretId: string;\n  SecretKey: string;\n  Bucket: string;\n  Region: string;\n  Key: string;\n\n  fs?: typeof fsDefault;\n}\n\nexport class COSLoader extends BaseDocumentLoader {\n  private readonly SecretId: string;\n  private readonly SecretKey: string;\n  private readonly Bucket: string;\n  private readonly Region: string;\n  private readonly Key: string;\n  private readonly _fs: typeof fsDefault;\n\n  constructor({ SecretId, SecretKey, Bucket, Region, Key, fs = fsDefault }: COSLoaderParams) {\n    super();\n    this.SecretId = SecretId;\n    this.SecretKey = SecretKey;\n    this.Bucket = Bucket;\n    this.Region = Region;\n    this.Key = Key;\n    this._fs = fs;\n  }\n\n  public async load() {\n    const filePath = this.createTempFilePath();\n\n    try {\n      await this.downloadFile(filePath);\n      const loader = createDocumentLoader(getExtensions(this.Key), filePath);\n      return await loader.load();\n    } catch (error) {\n      throw new Error(`Failed to process file ${this.Key} from COS bucket ${this.Bucket}: ${error.message}`);\n    } finally {\n      this.cleanupTempFile(filePath);\n    }\n  }\n\n  private createTempFilePath(): string {\n    const tempDir = this._fs.mkdtempSync(path.join(os.tmpdir(), 's3fileloader-'));\n    const extension = getExtensions(this.Key);\n    return path.join(tempDir, `${Date.now()}.${extension}`);\n  }\n\n  private async downloadFile(filePath: string): Promise {\n    const cosClient = new COS({\n      SecretId: this.SecretId,\n      SecretKey: this.SecretKey,\n    });\n\n    return new Promise((resolve, reject) => {\n      cosClient.getObject(\n        {\n          Bucket: this.Bucket,\n          Region: this.Region,\n          Key: this.Key,\n          Output: this._fs.createWriteStream(filePath),\n        },\n        (err) => {\n          if (err) {\n            reject(new Error(`Failed to download file: ${err.message}`));\n          } else {\n            resolve();\n          }\n        },\n      );\n    });\n  }\n\n  private cleanupTempFile(filePath: string): void {\n    try {\n      if (this._fs.existsSync(filePath)) {\n        this._fs.unlinkSync(filePath);\n      }\n    } catch (error) {\n      console.warn(`Failed to clean up temporary file ${filePath}: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/COSLoaderParams.html":{"url":"interfaces/COSLoaderParams.html","title":"interface - COSLoaderParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  COSLoaderParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/cos.loader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Bucket\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fs\n                                        \n                                \n                                \n                                        \n                                            Key\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            SecretId\n                                        \n                                \n                                \n                                        \n                                            SecretKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fs:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SecretId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SecretId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SecretKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SecretKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fsDefault from 'node:fs';\nimport * as os from 'node:os';\nimport * as path from 'node:path';\n\nimport COS from 'cos-nodejs-sdk-v5';\nimport { BaseDocumentLoader } from 'langchain/document_loaders/base';\n\nimport { getExtensions } from '@leek/utils';\n\nimport { createDocumentLoader } from './document.loader';\n\nexport interface COSLoaderParams {\n  SecretId: string;\n  SecretKey: string;\n  Bucket: string;\n  Region: string;\n  Key: string;\n\n  fs?: typeof fsDefault;\n}\n\nexport class COSLoader extends BaseDocumentLoader {\n  private readonly SecretId: string;\n  private readonly SecretKey: string;\n  private readonly Bucket: string;\n  private readonly Region: string;\n  private readonly Key: string;\n  private readonly _fs: typeof fsDefault;\n\n  constructor({ SecretId, SecretKey, Bucket, Region, Key, fs = fsDefault }: COSLoaderParams) {\n    super();\n    this.SecretId = SecretId;\n    this.SecretKey = SecretKey;\n    this.Bucket = Bucket;\n    this.Region = Region;\n    this.Key = Key;\n    this._fs = fs;\n  }\n\n  public async load() {\n    const filePath = this.createTempFilePath();\n\n    try {\n      await this.downloadFile(filePath);\n      const loader = createDocumentLoader(getExtensions(this.Key), filePath);\n      return await loader.load();\n    } catch (error) {\n      throw new Error(`Failed to process file ${this.Key} from COS bucket ${this.Bucket}: ${error.message}`);\n    } finally {\n      this.cleanupTempFile(filePath);\n    }\n  }\n\n  private createTempFilePath(): string {\n    const tempDir = this._fs.mkdtempSync(path.join(os.tmpdir(), 's3fileloader-'));\n    const extension = getExtensions(this.Key);\n    return path.join(tempDir, `${Date.now()}.${extension}`);\n  }\n\n  private async downloadFile(filePath: string): Promise {\n    const cosClient = new COS({\n      SecretId: this.SecretId,\n      SecretKey: this.SecretKey,\n    });\n\n    return new Promise((resolve, reject) => {\n      cosClient.getObject(\n        {\n          Bucket: this.Bucket,\n          Region: this.Region,\n          Key: this.Key,\n          Output: this._fs.createWriteStream(filePath),\n        },\n        (err) => {\n          if (err) {\n            reject(new Error(`Failed to download file: ${err.message}`));\n          } else {\n            resolve();\n          }\n        },\n      );\n    });\n  }\n\n  private cleanupTempFile(filePath: string): void {\n    try {\n      if (this._fs.existsSync(filePath)) {\n        this._fs.unlinkSync(filePath);\n      }\n    } catch (error) {\n      console.warn(`Failed to clean up temporary file ${filePath}: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigureAdapter.html":{"url":"classes/ConfigureAdapter.html","title":"class - ConfigureAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigureAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configure/adapter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FALLBACK_LANGUAGE\n                            \n                            \n                                HOST\n                            \n                            \n                                OPENAI\n                            \n                            \n                                PORT\n                            \n                            \n                                SECURITY\n                            \n                            \n                                TENCENT\n                            \n                            \n                                TZ\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/configure/adapter.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/configure/adapter.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPENAI\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/configure/adapter.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/configure/adapter.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/configure/adapter.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TENCENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/configure/adapter.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TZ\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/configure/adapter.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class ConfigureAdapter {\n  PORT: number;\n  HOST: string;\n  TZ: string;\n  FALLBACK_LANGUAGE: string;\n  OPENAI: {\n    API_KEY: string;\n    BASE_URL: string;\n  };\n  SECURITY: {\n    RATE_LIMIT_WINDOW_MS: number;\n    RATE_LIMIT_MAX: number;\n  };\n  TENCENT: {\n    SECRET_ID: string;\n    SECRET_KEY: string;\n    COS_BUCKET: string;\n    COS_REGION: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigureModule.html":{"url":"modules/ConfigureModule.html","title":"module - ConfigureModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigureModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigureModule\n\n\n\ncluster_ConfigureModule_exports\n\n\n\n\nConfigureAdapter \n\nConfigureAdapter \n\n\n\nConfigureModule\n\nConfigureModule\n\nConfigureAdapter  -->\n\nConfigureModule->ConfigureAdapter \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configure/configure.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigureAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\nimport { ConfigureAdapter } from './adapter';\nimport { ConfigureService } from './configure.service';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [`.env.${process.env.NODE_ENV}`, '.env.local'],\n    }),\n  ],\n  providers: [\n    {\n      provide: ConfigureAdapter,\n      useFactory: (config: ConfigService) => {\n        return new ConfigureService(config);\n      },\n      inject: [ConfigService],\n    },\n  ],\n  exports: [ConfigureAdapter],\n})\nexport class ConfigureModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigureService.html":{"url":"injectables/ConfigureService.html","title":"injectable - ConfigureService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigureService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configure/configure.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FALLBACK_LANGUAGE\n                            \n                            \n                                HOST\n                            \n                            \n                                OPENAI\n                            \n                            \n                                PORT\n                            \n                            \n                                SECURITY\n                            \n                            \n                                TENCENT\n                            \n                            \n                                TZ\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/configure/configure.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.config.get('FALLBACK_LANGUAGE') || 'en-US'\n                    \n                \n                    \n                        \n                                Defined in src/configure/configure.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HOST\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.config.get('HOST') || 'localhost'\n                    \n                \n                    \n                        \n                                Defined in src/configure/configure.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPENAI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    API_KEY: this.config.get('OPENAI_API_KEY'),\n    BASE_URL: this.config.get('OPENAI_API_HOST'),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/configure/configure.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(this.config.get('PORT')) || 3000\n                    \n                \n                    \n                        \n                                Defined in src/configure/configure.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    RATE_LIMIT_WINDOW_MS: parseInt(this.config.get('RATE_LIMIT_WINDOW_MS'), 10) || 60000,\n    RATE_LIMIT_MAX: parseInt(this.config.get('RATE_LIMIT_MAX'), 10) || 100,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/configure/configure.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TENCENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    SECRET_ID: this.config.get('TENCENT_SECRET_ID'),\n    SECRET_KEY: this.config.get('TENCENT_SECRET_KEY'),\n    COS_BUCKET: this.config.get('TENCENT_COS_BUCKET'),\n    COS_REGION: this.config.get('TENCENT_COS_REGION'),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/configure/configure.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TZ\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.config.get('TZ') || 'UTC'\n                    \n                \n                    \n                        \n                                Defined in src/configure/configure.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { ConfigureAdapter } from './adapter';\n\n@Injectable()\nexport class ConfigureService implements ConfigureAdapter {\n  constructor(private readonly config: ConfigService) {}\n\n  PORT = parseInt(this.config.get('PORT')) || 3000;\n  HOST = this.config.get('HOST') || 'localhost';\n  TZ = this.config.get('TZ') || 'UTC';\n  FALLBACK_LANGUAGE = this.config.get('FALLBACK_LANGUAGE') || 'en-US';\n\n  OPENAI = {\n    API_KEY: this.config.get('OPENAI_API_KEY'),\n    BASE_URL: this.config.get('OPENAI_API_HOST'),\n  };\n  TENCENT = {\n    SECRET_ID: this.config.get('TENCENT_SECRET_ID'),\n    SECRET_KEY: this.config.get('TENCENT_SECRET_KEY'),\n    COS_BUCKET: this.config.get('TENCENT_COS_BUCKET'),\n    COS_REGION: this.config.get('TENCENT_COS_REGION'),\n  };\n  SECURITY = {\n    RATE_LIMIT_WINDOW_MS: parseInt(this.config.get('RATE_LIMIT_WINDOW_MS'), 10) || 60000,\n    RATE_LIMIT_MAX: parseInt(this.config.get('RATE_LIMIT_MAX'), 10) || 100,\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextProvider.html":{"url":"classes/ContextProvider.html","title":"class - ContextProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/context.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                authUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                languageKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                nameSpace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                get\n                            \n                            \n                                    Private\n                                    Static\n                                getKeyWithNamespace\n                            \n                            \n                                    Private\n                                    Static\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        authUserKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user_key'\n                    \n                \n                    \n                        \n                                Defined in src/providers/context.provider.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        languageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'language_key'\n                    \n                \n                    \n                        \n                                Defined in src/providers/context.provider.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        nameSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'request'\n                    \n                \n                    \n                        \n                                Defined in src/providers/context.provider.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/context.provider.ts:10\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        getKeyWithNamespace\n                        \n                    \n                \n            \n            \n                \n                        \n                    getKeyWithNamespace(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/context.provider.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/providers/context.provider.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClsServiceManager } from 'nestjs-cls';\n\nexport class ContextProvider {\n  private static readonly nameSpace = 'request';\n\n  private static readonly authUserKey = 'user_key';\n\n  private static readonly languageKey = 'language_key';\n\n  private static get(key: string) {\n    const store = ClsServiceManager.getClsService();\n\n    return store.get(ContextProvider.getKeyWithNamespace(key));\n  }\n\n  private static set(key: string, value: any): void {\n    const store = ClsServiceManager.getClsService();\n\n    store.set(ContextProvider.getKeyWithNamespace(key), value);\n  }\n\n  private static getKeyWithNamespace(key: string): string {\n    return `${ContextProvider.nameSpace}.${key}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConversationAuthorDto.html":{"url":"classes/ConversationAuthorDto.html","title":"class - ConversationAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConversationAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/dto/conversation-author.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Role, example: 'user', description: '消息作者的角色，例如 \"user\" 或 \"assistant\"'})@IsNotEmpty()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/conversation-author.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsNotEmpty, IsEnum } from 'class-validator';\n\nimport { Role } from '@leek/constants';\n\nexport class ConversationAuthorDto {\n  @ApiProperty({ enum: Role, example: 'user', description: '消息作者的角色，例如 \"user\" 或 \"assistant\"' })\n  @IsNotEmpty()\n  @IsEnum(Role)\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConversationContentDto.html":{"url":"classes/ConversationContentDto.html","title":"class - ConversationContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConversationContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/dto/conversation-content.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                content_type\n                            \n                            \n                                    \n                                    \n                                    \n                                parts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        content_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationContentEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ConversationContentEnum, example: undefined, description: '消息内容的类型，例如 \"Text\" 表示文本'})@IsString()@IsNotEmpty()@IsEnum(ConversationContentEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/conversation-content.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        parts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: '消息内容的具体部分，例如分段文本'})@IsArray()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/conversation-content.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsString, IsNotEmpty, IsEnum, IsArray } from 'class-validator';\n\nimport { ConversationContentEnum } from '@leek/constants';\n\nexport class ConversationContentDto {\n  @ApiProperty({\n    enum: ConversationContentEnum,\n    example: ConversationContentEnum.Text,\n    description: '消息内容的类型，例如 \"Text\" 表示文本',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEnum(ConversationContentEnum)\n  content_type: ConversationContentEnum;\n\n  @ApiProperty({\n    example: ['Explain what this bash command does: \"cat config.yaml | awk NF\"'],\n    description: '消息内容的具体部分，例如分段文本',\n  })\n  @IsArray()\n  @IsNotEmpty()\n  parts: any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConversationDto.html":{"url":"classes/ConversationDto.html","title":"class - ConversationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConversationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/dto/conversation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                messages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationActionEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ConversationActionEnum, description: '在聊天中需要执行的操作，例如 \"Next\" 表示请求下一个响应', example: undefined})@IsEnum(ConversationActionEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/conversation.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationMessageDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: '聊天请求中包含的消息列表，每条消息包含作者和内容'})@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/conversation.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiResponseOptions } from '@nestjs/swagger';\n\nimport { Type } from 'class-transformer';\nimport { IsArray, IsEnum, ValidateNested } from 'class-validator';\n\nimport { ConversationActionEnum } from '@leek/constants';\n\nimport { ConversationMessageDto } from './conversation-message.dto';\n\nexport class ConversationDto {\n  @ApiProperty({\n    enum: ConversationActionEnum,\n    description: '在聊天中需要执行的操作，例如 \"Next\" 表示请求下一个响应',\n    example: ConversationActionEnum.Next,\n  })\n  @IsEnum(ConversationActionEnum)\n  action: ConversationActionEnum;\n\n  @ApiProperty({ type: [ConversationMessageDto], description: '聊天请求中包含的消息列表，每条消息包含作者和内容' })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ConversationMessageDto)\n  messages: ConversationMessageDto[];\n}\n\nexport const ChatSseResponse: ApiResponseOptions = {\n  description: '会话启动成功后，服务器将通过 SSE 推送助手的响应。',\n  content: {\n    'text/event-stream': {\n      example: 'data: {\"message\":{\"author\":{\"role\":\"assistant\"},\"content\":{\"content_type\":\"text\",\"parts\":[\"I\"]}}}',\n    },\n  },\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConversationMessageDto.html":{"url":"classes/ConversationMessageDto.html","title":"class - ConversationMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConversationMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/dto/conversation-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                author\n                            \n                            \n                                    \n                                    \n                                    \n                                content\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationAuthorDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: ConversationAuthorDto, description: '消息的作者信息，包括角色属性'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/conversation-message.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationContentDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: ConversationContentDto, description: '消息的内容信息，包括类型和具体部分'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/conversation-message.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { Type } from 'class-transformer';\nimport { ValidateNested } from 'class-validator';\n\nimport { ConversationAuthorDto } from './conversation-author.dto';\nimport { ConversationContentDto } from './conversation-content.dto';\n\nexport class ConversationMessageDto {\n  @ApiProperty({ type: ConversationAuthorDto, description: '消息的作者信息，包括角色属性' })\n  @ValidateNested()\n  @Type(() => ConversationAuthorDto)\n  author: ConversationAuthorDto;\n\n  @ApiProperty({ type: ConversationContentDto, description: '消息的内容信息，包括类型和具体部分' })\n  @ValidateNested()\n  @Type(() => ConversationContentDto)\n  content: ConversationContentDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAssistantDto.html":{"url":"classes/CreateAssistantDto.html","title":"class - CreateAssistantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAssistantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/dto/create-assistant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                datasetId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                systemPrompt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '助手关联的知识库 ID', example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c'})@IsOptional()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/create-assistant.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '助手的描述信息', example: '一个帮助用户解答问题的虚拟助手。'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/create-assistant.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '助手名称', example: '客服助手'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/create-assistant.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        systemPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '初始 Prompt 模板', example: '你是一个智能客服助手，可以回答用户的各种问题。'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/dto/create-assistant.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { IsString, IsOptional, IsUUID } from 'class-validator';\n\nexport class CreateAssistantDto {\n  @ApiProperty({\n    description: '助手名称',\n    example: '客服助手',\n  })\n  @IsString()\n  name: string;\n\n  @ApiPropertyOptional({\n    description: '助手的描述信息',\n    example: '一个帮助用户解答问题的虚拟助手。',\n  })\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @ApiPropertyOptional({\n    description: '助手关联的知识库 ID',\n    example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c',\n  })\n  @IsOptional()\n  @IsUUID()\n  datasetId?: string;\n\n  @ApiPropertyOptional({\n    description: '初始 Prompt 模板',\n    example: '你是一个智能客服助手，可以回答用户的各种问题。',\n  })\n  @IsOptional()\n  @IsString()\n  systemPrompt?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatasetDto.html":{"url":"classes/CreateDatasetDto.html","title":"class - CreateDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-dataset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                dataSourceType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                retrievalModel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        dataSourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '数据源类型', example: undefined, default: undefined, enum: DataSourceEnum})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-dataset.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '知识库的可选描述信息', example: '包含用户在电子商务平台上的点击、浏览和购买记录。'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-dataset.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库名称', example: '用户行为知识库'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-dataset.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        retrievalModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '检索模型配置', type: RetrievalModelDto})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-dataset.dto.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\nimport { IsString, IsOptional, IsNotEmpty, IsObject } from 'class-validator';\n\nimport { DataSourceEnum } from '@leek/constants';\n\nimport { RetrievalModelDto } from './retrieval-model.dto';\n\nexport class CreateDatasetDto {\n  @ApiProperty({\n    description: '知识库名称',\n    example: '用户行为知识库',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiPropertyOptional({\n    description: '知识库的可选描述信息',\n    example: '包含用户在电子商务平台上的点击、浏览和购买记录。',\n  })\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  // @ApiPropertyOptional({\n  //   description: '知识库提供方名称',\n  //   example: 'vendor',\n  //   default: 'vendor',\n  // })\n  // @IsString()\n  // @IsOptional()\n  // provider?: string = 'vendor';\n\n  @ApiPropertyOptional({\n    description: '数据源类型',\n    example: DataSourceEnum.FILE,\n    default: DataSourceEnum.FILE,\n    enum: DataSourceEnum,\n  })\n  @IsOptional()\n  @IsString()\n  dataSourceType?: string;\n\n  // @ApiPropertyOptional({\n  //   description: '嵌入模型名称',\n  //   example: 'text-embedding-3-large',\n  //   default: 'text-embedding-3-large',\n  // })\n  // @IsString()\n  // @IsOptional()\n  // embeddingModel?: string = 'text-embedding-3-large';\n\n  // @ApiPropertyOptional({\n  //   description: '嵌入模型提供方',\n  //   example: 'openai',\n  //   default: 'openai',\n  // })\n  // @IsString()\n  // @IsOptional()\n  // embeddingModelProvider?: string = 'openai';\n\n  @ApiPropertyOptional({\n    description: '检索模型配置',\n    type: RetrievalModelDto,\n  })\n  @IsOptional()\n  @IsObject()\n  retrievalModel?: Prisma.JsonValue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatasetProcessRuleDto.html":{"url":"classes/CreateDatasetProcessRuleDto.html","title":"class - CreateDatasetProcessRuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatasetProcessRuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-dataset-process-rule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    \n                                mode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库的唯一标识符', example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-dataset-process-rule.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '处理规则模式，值为 \"automatic\" 或 \"custom\"', enum: SegmentationEnum, example: undefined})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-dataset-process-rule.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '自定义规则，采用 JSON 格式', type: DatasetProcessRuleDto, example: undefined})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-dataset-process-rule.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\nimport { IsString, IsJSON, IsUUID, IsOptional } from 'class-validator';\n\nimport { SegmentationEnum } from '@leek/constants';\n\nimport { DatasetProcessRuleDto } from './dataset-process-rule.dto';\n\nexport class CreateDatasetProcessRuleDto {\n  @ApiProperty({\n    description: '知识库的唯一标识符',\n    example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272',\n  })\n  @IsUUID()\n  datasetId: string;\n\n  @ApiPropertyOptional({\n    description: '处理规则模式，值为 \"automatic\" 或 \"custom\"',\n    enum: SegmentationEnum,\n    example: SegmentationEnum.Automatic,\n  })\n  @IsString()\n  mode: string;\n\n  @ApiPropertyOptional({\n    description: '自定义规则，采用 JSON 格式',\n    type: DatasetProcessRuleDto,\n    example: {},\n  })\n  @IsOptional()\n  @IsJSON()\n  rules?: Prisma.JsonValue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDocumentByFileDto.html":{"url":"classes/CreateDocumentByFileDto.html","title":"class - CreateDocumentByFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDocumentByFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-document-by-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docForm\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                originalDocumentId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                processRule\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的形式（如文本、PDF）', example: undefined, enum: IndexEnum})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document-by-file.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的语言', example: 'Chinese'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document-by-file.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        originalDocumentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '源文档 ID，用于重新上传或更新文档', example: 'some-uuid'})@IsOptional()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document-by-file.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        processRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessRuleDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '处理规则配置，包括模式和具体规则，新增操作时为必填', type: () => ProcessRuleDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document-by-file.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Type } from 'class-transformer';\nimport { IsOptional, ValidateNested, IsUUID, IsString } from 'class-validator';\n\nimport { IndexEnum } from '@leek/constants';\n\nimport { ProcessRuleDto } from './process-rule.dto';\n\nexport class CreateDocumentByFileDto {\n  @ApiPropertyOptional({\n    description: '源文档 ID，用于重新上传或更新文档',\n    example: 'some-uuid',\n  })\n  @IsOptional()\n  @IsUUID()\n  originalDocumentId?: string;\n\n  @ApiPropertyOptional({\n    description: '处理规则配置，包括模式和具体规则，新增操作时为必填',\n    type: () => ProcessRuleDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => ProcessRuleDto)\n  processRule?: ProcessRuleDto;\n\n  @ApiPropertyOptional({\n    description: '文档的形式（如文本、PDF）',\n    example: IndexEnum.PARAGRAPH_INDEX,\n    enum: IndexEnum,\n  })\n  @IsOptional()\n  @IsString()\n  docForm?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的语言',\n    example: 'Chinese',\n  })\n  @IsOptional()\n  @IsString()\n  docLanguage?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDocumentByTextDto.html":{"url":"classes/CreateDocumentByTextDto.html","title":"class - CreateDocumentByTextDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDocumentByTextDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-document-by-text.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                processRule\n                            \n                            \n                                    \n                                    \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档名称', example: 'text'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document-by-text.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        processRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessRuleDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '处理规则配置，包括模式和具体规则', type: () => ProcessRuleDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document-by-text.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档内容', example: 'This is the content of the document.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document-by-text.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Type } from 'class-transformer';\nimport { IsString, IsOptional, ValidateNested } from 'class-validator';\n\nimport { ProcessRuleDto } from './process-rule.dto';\n\nexport class CreateDocumentByTextDto {\n  @ApiProperty({\n    description: '文档名称',\n    example: 'text',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: '文档内容',\n    example: 'This is the content of the document.',\n  })\n  @IsString()\n  text: string;\n\n  @ApiPropertyOptional({\n    description: '处理规则配置，包括模式和具体规则',\n    type: () => ProcessRuleDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => ProcessRuleDto)\n  processRule?: ProcessRuleDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDocumentDto.html":{"url":"classes/CreateDocumentDto.html","title":"class - CreateDocumentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDocumentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-document.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                archived\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                archivedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                archivedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                createdApiRequestId\n                            \n                            \n                                    \n                                    \n                                createdFrom\n                            \n                            \n                                    \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                datasetProcessRuleId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                dataSourceInfo\n                            \n                            \n                                    \n                                    \n                                dataSourceType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                disabledAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docForm\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docMetadata\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docType\n                            \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                fileId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                indexingLatency\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                position\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                wordCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        archived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档是否归档', example: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        archivedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档归档的时间', example: '2024-12-01T08:00:00.000Z'})@IsOptional()@IsDate()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        archivedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档归档的原因', example: 'No longer needed'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        createdApiRequestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '创建此文档的 API 请求 ID', example: 'some-api-request-id'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档的创建来源', example: undefined, enum: CreatedFromEnum})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库的唯一标识符', example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        datasetProcessRuleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '知识库处理规则 ID', example: 'ce9f2a1a-e49c-4660-9b87-7f0b3f4eefcc'})@IsOptional()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        dataSourceInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '数据源的详细信息，通常为JSON对象', example: undefined})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dataSourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '数据源类型', example: undefined, enum: DataSourceEnum})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        disabledAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档被禁用的时间', example: '2024-11-04T09:00:00.000Z'})@IsOptional()@IsDate()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的形式（如文本、QA）', example: undefined, enum: IndexEnum})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的语言', example: 'Chinese'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的元数据，通常为 JSON 对象', example: undefined})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的类型', example: 'PDF'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档是否启用', example: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        fileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件的唯一标识符', example: 'file-id-example'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        indexingLatency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '索引延迟时间，表示建立索引所花费的时间', example: 0.05})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档名称', example: '600415_分析报告.pdf'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档在知识库中的位置', example: 2})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的 token 数量', example: 5000})@IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        wordCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的单词数', example: 1024})@IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-document.dto.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\nimport { Type } from 'class-transformer';\nimport { IsString, IsOptional, IsInt, IsUUID, IsJSON, IsBoolean, IsDate, IsNumber } from 'class-validator';\n\nimport { DataSourceEnum, CreatedFromEnum, IndexEnum } from '@leek/constants';\n\nexport class CreateDocumentDto {\n  @ApiProperty({\n    description: '知识库的唯一标识符',\n    example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272',\n  })\n  @IsUUID()\n  datasetId: string;\n\n  @ApiProperty({\n    description: '文档在知识库中的位置',\n    example: 2,\n  })\n  @IsInt()\n  position: number;\n\n  @ApiProperty({\n    description: '数据源类型',\n    example: DataSourceEnum.FILE,\n    enum: DataSourceEnum,\n  })\n  @IsString()\n  dataSourceType: string;\n\n  @ApiProperty({\n    description: '文档名称',\n    example: '600415_分析报告.pdf',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: '文档的创建来源',\n    example: CreatedFromEnum.WEB,\n    enum: CreatedFromEnum,\n  })\n  @IsString()\n  createdFrom: string;\n\n  @ApiPropertyOptional({\n    description: '数据源的详细信息，通常为JSON对象',\n    example: { uploadFileId: '0162a2ca-11e9-4cc0-892b-b34047227dfc' },\n  })\n  @IsOptional()\n  @IsJSON()\n  dataSourceInfo?: Prisma.JsonValue;\n\n  @ApiPropertyOptional({\n    description: '知识库处理规则 ID',\n    example: 'ce9f2a1a-e49c-4660-9b87-7f0b3f4eefcc',\n  })\n  @IsOptional()\n  @IsUUID()\n  datasetProcessRuleId?: string;\n\n  @ApiPropertyOptional({\n    description: '创建此文档的 API 请求 ID',\n    example: 'some-api-request-id',\n  })\n  @IsOptional()\n  @IsString()\n  createdApiRequestId?: string;\n\n  @ApiPropertyOptional({\n    description: '文件的唯一标识符',\n    example: 'file-id-example',\n  })\n  @IsOptional()\n  @IsString()\n  fileId?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的单词数',\n    example: 1024,\n  })\n  @IsOptional()\n  @IsInt()\n  wordCount?: number;\n\n  @ApiPropertyOptional({\n    description: '文档的 token 数量',\n    example: 5000,\n  })\n  @IsOptional()\n  @IsInt()\n  tokens?: number;\n\n  @ApiPropertyOptional({\n    description: '索引延迟时间，表示建立索引所花费的时间',\n    example: 0.05,\n  })\n  @IsOptional()\n  @IsNumber()\n  indexingLatency?: number;\n\n  @ApiProperty({\n    description: '文档是否启用',\n    example: true,\n  })\n  @IsBoolean()\n  enabled: boolean = true;\n\n  @ApiPropertyOptional({\n    description: '文档被禁用的时间',\n    example: '2024-11-04T09:00:00.000Z',\n  })\n  @IsOptional()\n  @IsDate()\n  @Type(() => Date)\n  disabledAt?: Date;\n\n  @ApiProperty({\n    description: '文档是否归档',\n    example: false,\n  })\n  @IsBoolean()\n  archived: boolean = false;\n\n  @ApiPropertyOptional({\n    description: '文档归档的原因',\n    example: 'No longer needed',\n  })\n  @IsOptional()\n  @IsString()\n  archivedReason?: string;\n\n  @ApiPropertyOptional({\n    description: '文档归档的时间',\n    example: '2024-12-01T08:00:00.000Z',\n  })\n  @IsOptional()\n  @IsDate()\n  @Type(() => Date)\n  archivedAt?: Date;\n\n  @ApiPropertyOptional({\n    description: '文档的类型',\n    example: 'PDF',\n  })\n  @IsOptional()\n  @IsString()\n  docType?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的元数据，通常为 JSON 对象',\n    example: { author: 'John Doe', subject: 'Report' },\n  })\n  @IsOptional()\n  @IsJSON()\n  docMetadata?: Prisma.JsonValue;\n\n  @ApiPropertyOptional({\n    description: '文档的形式（如文本、QA）',\n    example: IndexEnum.PARAGRAPH_INDEX,\n    enum: IndexEnum,\n  })\n  @IsOptional()\n  @IsString()\n  docForm?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的语言',\n    example: 'Chinese',\n  })\n  @IsOptional()\n  @IsString()\n  docLanguage?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDocumentSegmentDto.html":{"url":"classes/CreateDocumentSegmentDto.html","title":"class - CreateDocumentSegmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDocumentSegmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-segment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                answer\n                            \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                enabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                keywords\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落的答案内容', example: '这笔交易的人民币金额是贰佰元整，即200元。'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-segment.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落内容', example: '这笔交易的人民币金额是多少？'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-segment.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落是否启用', example: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-segment.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落的关键词，通常为 JSON 对象', example: undefined})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-segment.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\nimport { IsString, IsOptional, IsBoolean, IsArray } from 'class-validator';\n\nexport class CreateDocumentSegmentDto {\n  @ApiProperty({\n    description: '段落内容',\n    example: '这笔交易的人民币金额是多少？',\n  })\n  @IsString()\n  content: string;\n\n  @ApiPropertyOptional({\n    description: '段落的关键词，通常为 JSON 对象',\n    example: ['金额', '人民币', '交易'],\n  })\n  @IsOptional()\n  @IsArray()\n  keywords?: Prisma.JsonValue;\n\n  @ApiPropertyOptional({\n    description: '段落是否启用',\n    example: true,\n  })\n  @IsBoolean()\n  enabled?: boolean;\n\n  @ApiPropertyOptional({\n    description: '段落的答案内容',\n    example: '这笔交易的人民币金额是贰佰元整，即200元。',\n  })\n  @IsOptional()\n  @IsString()\n  answer?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmbeddingDto.html":{"url":"classes/CreateEmbeddingDto.html","title":"class - CreateEmbeddingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmbeddingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-embedding.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classPrefix\n                            \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    Optional\n                                embedding\n                            \n                            \n                                    \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                modelName\n                            \n                            \n                                    \n                                    \n                                providerName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '类前缀，可能用于分类或标识'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-embedding.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '嵌入的内容文本', type: String, required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-embedding.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        embedding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-embedding.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '嵌入的哈希值', type: String, required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-embedding.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        modelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '模型的名称'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-embedding.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        providerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '提供者的名称'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-embedding.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiHideProperty } from '@nestjs/swagger';\n\nimport { IsString } from 'class-validator';\n\nexport class CreateEmbeddingDto {\n  @ApiProperty({\n    description: '嵌入的哈希值',\n    type: String,\n    required: true,\n  })\n  @IsString()\n  hash: string;\n\n  @ApiProperty({\n    description: '嵌入的内容文本',\n    type: String,\n    required: true,\n  })\n  @IsString()\n  content: string;\n\n  @ApiHideProperty()\n  embedding?: string;\n\n  @ApiProperty({\n    description: '模型的名称',\n  })\n  @IsString()\n  modelName: string;\n\n  @ApiProperty({\n    description: '提供者的名称',\n  })\n  @IsString()\n  providerName: string;\n\n  @ApiProperty({\n    description: '类前缀，可能用于分类或标识',\n  })\n  @IsString()\n  classPrefix: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSourceInfo.html":{"url":"interfaces/DataSourceInfo.html","title":"interface - DataSourceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataSourceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/indexing-estimate.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dataSourceType\n                                        \n                                \n                                \n                                        \n                                            fileInfo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataSourceType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataSourceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileInfo:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsUUID, IsObject } from 'class-validator';\n\nimport { DataSourceEnum } from '@leek/constants';\n\nimport { IndexingEstimateProcessRuleDto } from './indexing-estimate-process-rule.dto';\n\ninterface DataSourceInfo {\n  dataSourceType: string;\n  fileInfo: {\n    fileIds: string[];\n  };\n}\n\nexport class IndexingEstimateDto {\n  @ApiProperty({\n    description: '信息列表',\n    type: 'object',\n    properties: {\n      dataSourceType: {\n        type: 'string',\n        description: '数据源类型',\n        example: DataSourceEnum.FILE,\n        enum: DataSourceEnum,\n      },\n      fileInfo: {\n        type: 'object',\n        description: '文件信息',\n        properties: {\n          fileIds: {\n            type: 'array',\n            items: { type: 'string' },\n            description: '文件ID列表',\n            example: ['4c688f1e-9248-4495-a78c-2d98cbcb93ad'],\n          },\n        },\n      },\n    },\n  })\n  @IsObject()\n  dataSourceInfo: DataSourceInfo;\n\n  @ApiProperty({\n    description: '处理规则',\n    type: IndexingEstimateProcessRuleDto,\n  })\n  @IsObject()\n  processRule: IndexingEstimateProcessRuleDto;\n\n  @ApiProperty({\n    description: '数据集 ID',\n    example: '71fab30b-aa39-4ab9-bb73-059c66963285',\n  })\n  @IsUUID()\n  datasetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatasetController.html":{"url":"controllers/DatasetController.html","title":"controller - DatasetController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatasetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/controllers/dataset.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                datasets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createDataset\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteDatasetById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findDatasetById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findManyDatasets\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateDatasetById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(createDatasetDto: CreateDatasetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '创建数据集', description: '创建一个新的数据集，返回创建成功的数据集对象。'})@ApiCreatedResponse({description: '数据集创建成功。返回新创建的数据集。', type: LeekDataset})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/dataset.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDatasetDto\n                                            \n                                                            CreateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDatasetById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '删除数据集', description: '从系统中删除指定UUID的数据集。此操作不可逆。'})@ApiParam({name: 'id', description: '要删除的数据集的UUID。'})@ApiNoContentResponse({description: '数据集删除成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/dataset.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDatasetById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '根据ID获取数据集', description: '根据唯一的UUID检索特定数据集的详细信息。'})@ApiParam({name: 'id', description: '要检索的数据集的UUID。'})@ApiOkResponse({description: '返回与指定UUID匹配的数据集。', type: LeekDataset})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/dataset.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findManyDatasets\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDatasets()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '获取数据集列表', description: '检索系统中存储的所有数据集，包括元数据和相关属性。'})@ApiOkResponse({description: '返回系统中所有可用数据集的列表。', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/dataset.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDatasetById(id: string, updateDatasetDto: UpdateDatasetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Patch(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '部分更新数据集', description: '更新指定UUID数据集的特定属性，未包含在请求体中的属性将保持不变。'})@ApiParam({name: 'id', description: '要更新的数据集的UUID。'})@ApiNoContentResponse({description: '数据集更新成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/dataset.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDatasetDto\n                                            \n                                                            UpdateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  Version,\n} from '@nestjs/common';\nimport {\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { LeekDataset } from '../domain/dataset';\nimport { CreateDatasetDto } from '../dto/create-dataset.dto';\nimport { UpdateDatasetDto } from '../dto/update-dataset.dto';\nimport { DatasetService } from '../services/dataset.service';\n\n@ApiTags('数据集管理')\n@Controller('datasets')\nexport class DatasetController {\n  constructor(private readonly datasetService: DatasetService) {}\n\n  @Post()\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({\n    summary: '创建数据集',\n    description: '创建一个新的数据集，返回创建成功的数据集对象。',\n  })\n  @ApiCreatedResponse({\n    description: '数据集创建成功。返回新创建的数据集。',\n    type: LeekDataset,\n  })\n  async createDataset(@Body() createDatasetDto: CreateDatasetDto): Promise {\n    return this.datasetService.createDataset(createDatasetDto);\n  }\n\n  @Get()\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '获取数据集列表',\n    description: '检索系统中存储的所有数据集，包括元数据和相关属性。',\n  })\n  @ApiOkResponse({\n    description: '返回系统中所有可用数据集的列表。',\n    type: [LeekDataset],\n  })\n  async findManyDatasets(): Promise {\n    return this.datasetService.findManyDatasets();\n  }\n\n  @Get(':id')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '根据ID获取数据集',\n    description: '根据唯一的UUID检索特定数据集的详细信息。',\n  })\n  @ApiParam({\n    name: 'id',\n    description: '要检索的数据集的UUID。',\n  })\n  @ApiOkResponse({\n    description: '返回与指定UUID匹配的数据集。',\n    type: LeekDataset,\n  })\n  async findDatasetById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n    return this.datasetService.findDatasetById(id);\n  }\n\n  @Version('1')\n  @Patch(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '部分更新数据集',\n    description: '更新指定UUID数据集的特定属性，未包含在请求体中的属性将保持不变。',\n  })\n  @ApiParam({\n    name: 'id',\n    description: '要更新的数据集的UUID。',\n  })\n  @ApiNoContentResponse({\n    description: '数据集更新成功。',\n  })\n  async updateDatasetById(\n    @Param('id', new ParseUUIDPipe()) id: string,\n    @Body() updateDatasetDto: UpdateDatasetDto,\n  ): Promise {\n    return this.datasetService.updateDatasetById(id, updateDatasetDto);\n  }\n\n  @Delete(':id')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '删除数据集',\n    description: '从系统中删除指定UUID的数据集。此操作不可逆。',\n  })\n  @ApiParam({\n    name: 'id',\n    description: '要删除的数据集的UUID。',\n  })\n  @ApiNoContentResponse({\n    description: '数据集删除成功。',\n  })\n  async deleteDatasetById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n    return this.datasetService.deleteDatasetById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetMapper.html":{"url":"classes/DatasetMapper.html","title":"class - DatasetMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/mappers/dataset.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: Dataset)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/dataset.mapper.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                        Dataset\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeekDataset\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: LeekDataset)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/dataset.mapper.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            LeekDataset\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Dataset\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Dataset } from '@prisma/client';\n\nimport { QUERY_CONTEXT_PREFIX, EMBEDDING_MODEL_NAME, EMBEDDING_PROVIDER_NAME } from '@leek/constants';\nimport { uuid } from '@leek/utils';\n\nimport { LeekDataset } from '../../../domain/dataset';\nimport { generateVectorClassPrefixByDatasetId } from '../../../shared/utils/generate-vector-class-prefix-by-dataset-id.util';\n\nexport class DatasetMapper {\n  static toDomain(raw: Dataset): LeekDataset {\n    const domainEntity = new LeekDataset();\n\n    domainEntity.id = raw.id;\n    domainEntity.name = raw.name;\n    domainEntity.description = raw.description;\n    domainEntity.provider = raw.provider;\n    domainEntity.dataSourceType = raw.dataSourceType;\n    domainEntity.indexStruct = raw.indexStruct;\n    domainEntity.embeddingModel = raw.embeddingModel;\n    domainEntity.embeddingModelProvider = raw.embeddingModelProvider;\n    domainEntity.retrievalModel = raw.retrievalModel;\n\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: LeekDataset): Dataset {\n    const persistenceEntity = {} as Dataset;\n\n    const id = uuid();\n\n    persistenceEntity.id = id;\n    persistenceEntity.name = domainEntity.name;\n    persistenceEntity.dataSourceType = domainEntity.dataSourceType;\n    persistenceEntity.description = domainEntity.description;\n    persistenceEntity.indexStruct = domainEntity.indexStruct || {\n      type: 'pgvector',\n      vectorStore: {\n        classPrefix: generateVectorClassPrefixByDatasetId(id),\n      },\n    };\n    persistenceEntity.embeddingModel = domainEntity.embeddingModel || EMBEDDING_MODEL_NAME;\n    persistenceEntity.embeddingModelProvider = domainEntity.embeddingModelProvider || EMBEDDING_PROVIDER_NAME;\n    persistenceEntity.retrievalModel = domainEntity.retrievalModel || {\n      topK: 3,\n      scoreThreshold: 0.5,\n      scoreThresholdEnabled: false,\n    };\n\n    if (!domainEntity.description) {\n      persistenceEntity.description = (QUERY_CONTEXT_PREFIX + domainEntity.name)\n        .replace('/\\n/g', '')\n        .replace('/\\r/g', '');\n    }\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetProcessRuleDto.html":{"url":"classes/DatasetProcessRuleDto.html","title":"class - DatasetProcessRuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetProcessRuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/dataset-process-rule.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(OmitType(ProcessRuleDto, ['mode']))\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/swagger';\n\nimport { ProcessRuleDto } from './process-rule.dto';\n\nexport class DatasetProcessRuleDto extends PartialType(OmitType(ProcessRuleDto, ['mode'])) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetProcessRuleMapper.html":{"url":"classes/DatasetProcessRuleMapper.html","title":"class - DatasetProcessRuleMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetProcessRuleMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/mappers/dataset-process-rule.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: DatasetProcessRule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/dataset-process-rule.mapper.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                        DatasetProcessRule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeekDatasetProcessRule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: LeekDatasetProcessRule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/dataset-process-rule.mapper.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            LeekDatasetProcessRule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DatasetProcessRule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DatasetProcessRule } from '@prisma/client';\n\nimport { LeekDatasetProcessRule } from '../../../domain/dataset-process-rule';\n\nexport class DatasetProcessRuleMapper {\n  static toDomain(raw: DatasetProcessRule): LeekDatasetProcessRule {\n    const domainEntity = new LeekDatasetProcessRule();\n\n    domainEntity.id = raw.id;\n    domainEntity.datasetId = raw.id;\n    domainEntity.mode = raw.mode;\n    domainEntity.rules = raw.mode;\n\n    domainEntity.createdAt = raw.createdAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: LeekDatasetProcessRule): DatasetProcessRule {\n    const persistenceEntity = {} as DatasetProcessRule;\n\n    persistenceEntity.datasetId = domainEntity.datasetId;\n    persistenceEntity.mode = domainEntity.mode || 'automatic';\n    persistenceEntity.rules = domainEntity.rules;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetProcessRuleRelationalRepository.html":{"url":"injectables/DatasetProcessRuleRelationalRepository.html","title":"injectable - DatasetProcessRuleRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatasetProcessRuleRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRule\n                            \n                            \n                                    Async\n                                deleteRuleById\n                            \n                            \n                                    Async\n                                deleteRulesByDatasetId\n                            \n                            \n                                    Async\n                                findRuleByDatasetId\n                            \n                            \n                                    Async\n                                findRuleById\n                            \n                            \n                                    Async\n                                updateRuleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createRule\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRule(data: LeekDatasetProcessRule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekDatasetProcessRule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteRuleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRuleById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteRulesByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRulesByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findRuleByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRuleByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findRuleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRuleById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRuleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRuleById(id: string, payload: LeekDatasetProcessRule)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset-process-rule.repository.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            LeekDatasetProcessRule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { PrismaService } from '@leek/prisma';\n\nimport { LeekDatasetProcessRule } from '../../../domain/dataset-process-rule';\nimport { DatasetProcessRuleRepository } from '../dataset-process-rule.repository';\nimport { DatasetProcessRuleMapper } from '../mappers/dataset-process-rule.mapper';\n\n@Injectable()\nexport class DatasetProcessRuleRelationalRepository implements DatasetProcessRuleRepository {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  async createRule(data: LeekDatasetProcessRule): Promise {\n    const datasetProcessRule = await this.prismaService.prisma.datasetProcessRule.create({\n      data: DatasetProcessRuleMapper.toPersistence(data),\n    });\n\n    return DatasetProcessRuleMapper.toDomain(datasetProcessRule);\n  }\n\n  async findRuleById(id: string): Promise> {\n    const entity = await this.prismaService.prisma.datasetProcessRule.findUnique({\n      where: { id },\n    });\n    return entity ? DatasetProcessRuleMapper.toDomain(entity) : null;\n  }\n\n  async findRuleByDatasetId(datasetId: string): Promise> {\n    const entity = await this.prismaService.prisma.datasetProcessRule.findFirst({\n      where: { datasetId },\n    });\n    return entity ? DatasetProcessRuleMapper.toDomain(entity) : null;\n  }\n\n  async updateRuleById(id: string, payload: LeekDatasetProcessRule): Promise {\n    await this.prismaService.prisma.datasetProcessRule.update({\n      where: { id },\n      data: DatasetProcessRuleMapper.toPersistence(payload),\n    });\n  }\n\n  async deleteRuleById(id: string): Promise {\n    await this.prismaService.prisma.datasetProcessRule.delete({\n      where: { id },\n    });\n  }\n\n  async deleteRulesByDatasetId(datasetId: string): Promise {\n    await this.prismaService.prisma.datasetProcessRule.deleteMany({\n      where: { datasetId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetProcessRuleRepository.html":{"url":"classes/DatasetProcessRuleRepository.html","title":"class - DatasetProcessRuleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetProcessRuleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/dataset-process-rule.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                抽象的 DatasetProcessRule 仓库接口。\n提供创建、查询、更新和删除数据集处理规则的方法。\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createRule\n                            \n                            \n                                    Abstract\n                                deleteRuleById\n                            \n                            \n                                    Abstract\n                                deleteRulesByDatasetId\n                            \n                            \n                                    Abstract\n                                findRuleByDatasetId\n                            \n                            \n                                    Abstract\n                                findRuleById\n                            \n                            \n                                    Abstract\n                                updateRuleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createRule\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRule(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset-process-rule.repository.ts:18\n                        \n                    \n\n\n            \n                \n                        创建一个新的数据集处理规则。\n动作: create\n目标: Rule\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集处理规则的数据，不包括 id 和 createdAt。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                创建的数据集处理规则。\n动作: create\n目标: Rule\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteRuleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRuleById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset-process-rule.repository.ts:61\n                        \n                    \n\n\n            \n                \n                        根据规则 ID 删除数据集处理规则。\n动作: delete\n目标: Rule\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集处理规则的 ID。\n\n动作: delete\n目标: Rule\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteRulesByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRulesByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset-process-rule.repository.ts:71\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 删除所有相关的处理规则。\n动作: delete\n目标: Rules\n条件: ByDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n动作: delete\n目标: Rules\n条件: ByDatasetId\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findRuleByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRuleByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset-process-rule.repository.ts:40\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 查询数据集处理规则。\n动作: find\n目标: Rule\n条件: ByDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的数据集处理规则或 null。\n动作: find\n目标: Rule\n条件: ByDatasetId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findRuleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRuleById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset-process-rule.repository.ts:29\n                        \n                    \n\n\n            \n                \n                        根据规则 ID 查询单个数据集处理规则。\n动作: find\n目标: Rule\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集处理规则的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的数据集处理规则或 null。\n动作: find\n目标: Rule\n条件: ById\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateRuleById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRuleById(id: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset-process-rule.repository.ts:51\n                        \n                    \n\n\n            \n                \n                        根据规则 ID 更新数据集处理规则。\n动作: update\n目标: Rule\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集处理规则的 ID。\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含部分更新数据的对象。\n\n动作: update\n目标: Rule\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeekDatasetProcessRule } from '../../domain/dataset-process-rule';\n\n/**\n * 抽象的 DatasetProcessRule 仓库接口。\n * 提供创建、查询、更新和删除数据集处理规则的方法。\n */\nexport abstract class DatasetProcessRuleRepository {\n  /**\n   * 创建一个新的数据集处理规则。\n   * @param data - 数据集处理规则的数据，不包括 `id` 和 `createdAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   * @returns 创建的数据集处理规则。\n   *\n   * 动作: create\n   * 目标: Rule\n   * 条件: 无\n   */\n  abstract createRule(data: Omit): Promise;\n\n  /**\n   * 根据规则 ID 查询单个数据集处理规则。\n   * @param id - 数据集处理规则的 ID。\n   * @returns 找到的数据集处理规则或 null。\n   *\n   * 动作: find\n   * 目标: Rule\n   * 条件: ById\n   */\n  abstract findRuleById(id: string): Promise>;\n\n  /**\n   * 根据数据集 ID 查询数据集处理规则。\n   * @param datasetId - 数据集的 ID。\n   * @returns 找到的数据集处理规则或 null。\n   *\n   * 动作: find\n   * 目标: Rule\n   * 条件: ByDatasetId\n   */\n  abstract findRuleByDatasetId(datasetId: string): Promise>;\n\n  /**\n   * 根据规则 ID 更新数据集处理规则。\n   * @param id - 数据集处理规则的 ID。\n   * @param payload - 包含部分更新数据的对象。\n   *\n   * 动作: update\n   * 目标: Rule\n   * 条件: ById\n   */\n  abstract updateRuleById(id: string, payload: Partial): Promise;\n\n  /**\n   * 根据规则 ID 删除数据集处理规则。\n   * @param id - 数据集处理规则的 ID。\n   *\n   * 动作: delete\n   * 目标: Rule\n   * 条件: ById\n   */\n  abstract deleteRuleById(id: string): Promise;\n\n  /**\n   * 根据数据集 ID 删除所有相关的处理规则。\n   * @param datasetId - 数据集的 ID。\n   *\n   * 动作: delete\n   * 目标: Rules\n   * 条件: ByDatasetId\n   */\n  abstract deleteRulesByDatasetId(datasetId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetRelationalRepository.html":{"url":"injectables/DatasetRelationalRepository.html","title":"injectable - DatasetRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatasetRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/repositories/dataset.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDataset\n                            \n                            \n                                    Async\n                                deleteDatasetById\n                            \n                            \n                                    Async\n                                findDatasetById\n                            \n                            \n                                    Async\n                                findManyDatasets\n                            \n                            \n                                    Async\n                                updateDatasetById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(data: LeekDataset)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekDataset\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDatasetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDatasetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyDatasets\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDatasets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDatasetById(id: string, payload: LeekDataset)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/dataset.repository.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            LeekDataset\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { PrismaService } from '@leek/prisma';\n\nimport { LeekDataset } from '../../../domain/dataset';\nimport { DatasetRepository } from '../dataset.repository';\nimport { DatasetMapper } from '../mappers/dataset.mapper';\n\n@Injectable()\nexport class DatasetRelationalRepository implements DatasetRepository {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  async createDataset(data: LeekDataset): Promise {\n    const dataset = await this.prismaService.prisma.dataset.create({\n      data: DatasetMapper.toPersistence(data),\n    });\n\n    return DatasetMapper.toDomain(dataset);\n  }\n\n  async findManyDatasets(): Promise {\n    return this.prismaService.prisma.dataset.findMany();\n  }\n\n  async findDatasetById(id: string): Promise> {\n    const entity = await this.prismaService.prisma.dataset.findUnique({\n      where: { id },\n    });\n\n    return entity ? DatasetMapper.toDomain(entity) : null;\n  }\n\n  async updateDatasetById(id: string, payload: LeekDataset): Promise {\n    await this.prismaService.prisma.dataset.update({\n      where: { id },\n      data: DatasetMapper.toPersistence(payload),\n    });\n  }\n\n  async deleteDatasetById(id: string): Promise {\n    await this.prismaService.prisma.dataset.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetRepository.html":{"url":"classes/DatasetRepository.html","title":"class - DatasetRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/dataset.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                抽象的 Dataset 仓库接口。\n提供创建、查询、更新和删除数据集的方法。\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createDataset\n                            \n                            \n                                    Abstract\n                                deleteDatasetById\n                            \n                            \n                                    Abstract\n                                findDatasetById\n                            \n                            \n                                    Abstract\n                                findManyDatasets\n                            \n                            \n                                    Abstract\n                                updateDatasetById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset.repository.ts:17\n                        \n                    \n\n\n            \n                \n                        创建一个新的数据集。\n动作: create\n目标: Dataset\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的内容，不包括 id、createdAt、updatedAt 和 deletedAt。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                创建的数据集。\n动作: create\n目标: Dataset\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDatasetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset.repository.ts:59\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 删除数据集。\n动作: delete\n目标: Dataset\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要删除的数据集 ID。\n\n动作: delete\n目标: Dataset\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDatasetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset.repository.ts:38\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 查询单个数据集。\n动作: find\n目标: Dataset\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的数据集或 null。\n动作: find\n目标: Dataset\n条件: ById\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManyDatasets\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDatasets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset.repository.ts:27\n                        \n                    \n\n\n            \n                \n                        查询所有数据集。\n动作: findMany\n目标: Datasets\n条件: 无\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                一个包含所有数据集的数组。\n动作: findMany\n目标: Datasets\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDatasetById(id: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/dataset.repository.ts:49\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 更新数据集。\n动作: update\n目标: Dataset\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要更新的数据集 ID。\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含部分更新数据的对象。\n\n动作: update\n目标: Dataset\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeekDataset } from '../../domain/dataset';\n\n/**\n * 抽象的 Dataset 仓库接口。\n * 提供创建、查询、更新和删除数据集的方法。\n */\nexport abstract class DatasetRepository {\n  /**\n   * 创建一个新的数据集。\n   * @param data - 数据集的内容，不包括 `id`、`createdAt`、`updatedAt` 和 `deletedAt`。\n   * @returns 创建的数据集。\n   *\n   * 动作: create\n   * 目标: Dataset\n   * 条件: 无\n   */\n  abstract createDataset(data: Omit): Promise;\n\n  /**\n   * 查询所有数据集。\n   * @returns 一个包含所有数据集的数组。\n   *\n   * 动作: findMany\n   * 目标: Datasets\n   * 条件: 无\n   */\n  abstract findManyDatasets(): Promise;\n\n  /**\n   * 根据数据集 ID 查询单个数据集。\n   * @param id - 数据集的 ID。\n   * @returns 找到的数据集或 null。\n   *\n   * 动作: find\n   * 目标: Dataset\n   * 条件: ById\n   */\n  abstract findDatasetById(id: string): Promise>;\n\n  /**\n   * 根据数据集 ID 更新数据集。\n   * @param id - 要更新的数据集 ID。\n   * @param payload - 包含部分更新数据的对象。\n   *\n   * 动作: update\n   * 目标: Dataset\n   * 条件: ById\n   */\n  abstract updateDatasetById(id: string, payload: Partial): Promise;\n\n  /**\n   * 根据数据集 ID 删除数据集。\n   * @param id - 要删除的数据集 ID。\n   *\n   * 动作: delete\n   * 目标: Dataset\n   * 条件: ById\n   */\n  abstract deleteDatasetById(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetService.html":{"url":"injectables/DatasetService.html","title":"injectable - DatasetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatasetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/services/dataset.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDataset\n                            \n                            \n                                    \n                                    Async\n                                deleteDatasetById\n                            \n                            \n                                    Async\n                                findDatasetById\n                            \n                            \n                                    Async\n                                findManyDatasets\n                            \n                            \n                                    Async\n                                updateDatasetById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datasetRepository: DatasetRepository, documentRepository: DocumentRepository, documentSegmentRepository: DocumentSegmentRepository, datasetProcessRuleRepository: DatasetProcessRuleRepository, embeddingRepository: EmbeddingRepository)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/services/dataset.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasetRepository\n                                                  \n                                                        \n                                                                        DatasetRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        documentRepository\n                                                  \n                                                        \n                                                                        DocumentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        documentSegmentRepository\n                                                  \n                                                        \n                                                                        DocumentSegmentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetProcessRuleRepository\n                                                  \n                                                        \n                                                                        DatasetProcessRuleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        embeddingRepository\n                                                  \n                                                        \n                                                                        EmbeddingRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(createDatasetDto: CreateDatasetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/dataset.service.ts:33\n                        \n                    \n\n\n            \n                \n                        创建新的知识库\n根据提供的 DTO 创建新的知识库记录。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createDatasetDto\n                                            \n                                                            CreateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集创建所需的信息\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n创建成功的知识库对象\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDatasetById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/services/dataset.service.ts:82\n                        \n                    \n\n\n            \n                \n                        删除知识库及其相关数据\n删除知识库及其关联的文档、分段、嵌入和处理规则，操作在事务中完成。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n知识库的唯一标识符\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n操作完成时返回\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDatasetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/dataset.service.ts:56\n                        \n                    \n\n\n            \n                \n                        根据 ID 获取知识库\n通过 ID 查询单个知识库，如果不存在则返回 null。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n知识库的唯一标识符\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n返回匹配的知识库或 null\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyDatasets\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDatasets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/dataset.service.ts:44\n                        \n                    \n\n\n            \n                \n                        获取所有知识库\n检索数据库中存储的所有知识库。\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n知识库对象的数组\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDatasetById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDatasetById(id: string, updateDatasetDto: UpdateDatasetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/dataset.service.ts:69\n                        \n                    \n\n\n            \n                \n                        更新知识库\n根据提供的更新信息更新指定 ID 的知识库记录。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n知识库的唯一标识符\n\n\n                                            \n                                        \n                                        \n                                                updateDatasetDto\n                                            \n                                                            UpdateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含更新数据的 DTO\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n操作完成时返回\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Transactional } from '@leek/common';\n\nimport { LeekDataset } from '../domain/dataset';\nimport { CreateDatasetDto } from '../dto/create-dataset.dto';\nimport { UpdateDatasetDto } from '../dto/update-dataset.dto';\nimport { DatasetProcessRuleRepository } from '../infrastructure/persistence/dataset-process-rule.repository';\nimport { DatasetRepository } from '../infrastructure/persistence/dataset.repository';\nimport { DocumentSegmentRepository } from '../infrastructure/persistence/document-segment.repository';\nimport { DocumentRepository } from '../infrastructure/persistence/document.repository';\nimport { EmbeddingRepository } from '../infrastructure/persistence/embedding.repository';\nimport { generateVectorClassPrefixByDatasetId } from '../shared/utils/generate-vector-class-prefix-by-dataset-id.util';\n\n@Injectable()\nexport class DatasetService {\n  constructor(\n    private readonly datasetRepository: DatasetRepository,\n    private readonly documentRepository: DocumentRepository,\n    private readonly documentSegmentRepository: DocumentSegmentRepository,\n    private readonly datasetProcessRuleRepository: DatasetProcessRuleRepository,\n    private readonly embeddingRepository: EmbeddingRepository,\n  ) {}\n\n  /**\n   * 创建新的知识库\n   *\n   * 根据提供的 DTO 创建新的知识库记录。\n   *\n   * @param {CreateDatasetDto} createDatasetDto - 数据集创建所需的信息\n   * @returns {Promise} - 创建成功的知识库对象\n   */\n  async createDataset(createDatasetDto: CreateDatasetDto): Promise {\n    return this.datasetRepository.createDataset(createDatasetDto);\n  }\n\n  /**\n   * 获取所有知识库\n   *\n   * 检索数据库中存储的所有知识库。\n   *\n   * @returns {Promise} - 知识库对象的数组\n   */\n  async findManyDatasets(): Promise {\n    return this.datasetRepository.findManyDatasets();\n  }\n\n  /**\n   * 根据 ID 获取知识库\n   *\n   * 通过 ID 查询单个知识库，如果不存在则返回 `null`。\n   *\n   * @param {string} id - 知识库的唯一标识符\n   * @returns {Promise>} - 返回匹配的知识库或 `null`\n   */\n  async findDatasetById(id: string): Promise> {\n    return this.datasetRepository.findDatasetById(id);\n  }\n\n  /**\n   * 更新知识库\n   *\n   * 根据提供的更新信息更新指定 ID 的知识库记录。\n   *\n   * @param {string} id - 知识库的唯一标识符\n   * @param {UpdateDatasetDto} updateDatasetDto - 包含更新数据的 DTO\n   * @returns {Promise} - 操作完成时返回\n   */\n  async updateDatasetById(id: string, updateDatasetDto: UpdateDatasetDto): Promise {\n    await this.datasetRepository.updateDatasetById(id, updateDatasetDto);\n  }\n\n  /**\n   * 删除知识库及其相关数据\n   *\n   * 删除知识库及其关联的文档、分段、嵌入和处理规则，操作在事务中完成。\n   *\n   * @param {string} id - 知识库的唯一标识符\n   * @returns {Promise} - 操作完成时返回\n   */\n  @Transactional()\n  async deleteDatasetById(id: string): Promise {\n    await this.datasetProcessRuleRepository.deleteRulesByDatasetId(id);\n    await this.embeddingRepository.deleteManyEmbeddingsByClassPrefix(generateVectorClassPrefixByDatasetId(id));\n    await this.documentSegmentRepository.deleteManySegmentsByDatasetId(id);\n    await this.documentRepository.deleteManyDocumentsByDatasetId(id);\n    await this.datasetRepository.deleteDatasetById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatasetsModule.html":{"url":"modules/DatasetsModule.html","title":"module - DatasetsModule","body":"\n                   \n\n\n\n\n    Modules\n    DatasetsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatasetsModule\n\n\n\ncluster_DatasetsModule_providers\n\n\n\ncluster_DatasetsModule_imports\n\n\n\n\nConfigureModule\n\nConfigureModule\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nDatasetsModule -->\n\nConfigureModule->DatasetsModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nDatasetsModule -->\n\nPrismaModule->DatasetsModule\n\n\n\n\n\nRelationaLeekFilesPersistenceModule\n\nRelationaLeekFilesPersistenceModule\n\nDatasetsModule -->\n\nRelationaLeekFilesPersistenceModule->DatasetsModule\n\n\n\n\n\nRelationalDatasetsPersistenceModule\n\nRelationalDatasetsPersistenceModule\n\nDatasetsModule -->\n\nRelationalDatasetsPersistenceModule->DatasetsModule\n\n\n\n\n\nDatasetService\n\nDatasetService\n\nDatasetsModule -->\n\nDatasetService->DatasetsModule\n\n\n\n\n\nDocumentSegmentService\n\nDocumentSegmentService\n\nDatasetsModule -->\n\nDocumentSegmentService->DatasetsModule\n\n\n\n\n\nDocumentService\n\nDocumentService\n\nDatasetsModule -->\n\nDocumentService->DatasetsModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nDatasetsModule -->\n\nFilesService->DatasetsModule\n\n\n\n\n\nIndexingService\n\nIndexingService\n\nDatasetsModule -->\n\nIndexingService->DatasetsModule\n\n\n\n\n\nJiebaKeywordService\n\nJiebaKeywordService\n\nDatasetsModule -->\n\nJiebaKeywordService->DatasetsModule\n\n\n\n\n\nLLMGeneratorService\n\nLLMGeneratorService\n\nDatasetsModule -->\n\nLLMGeneratorService->DatasetsModule\n\n\n\n\n\nProcessDocumentService\n\nProcessDocumentService\n\nDatasetsModule -->\n\nProcessDocumentService->DatasetsModule\n\n\n\n\n\nRetrievalService\n\nRetrievalService\n\nDatasetsModule -->\n\nRetrievalService->DatasetsModule\n\n\n\n\n\nTransactionManager\n\nTransactionManager\n\nDatasetsModule -->\n\nTransactionManager->DatasetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/datasets/datasets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatasetService\n                        \n                        \n                            DocumentSegmentService\n                        \n                        \n                            DocumentService\n                        \n                        \n                            FilesService\n                        \n                        \n                            IndexingService\n                        \n                        \n                            JiebaKeywordService\n                        \n                        \n                            LLMGeneratorService\n                        \n                        \n                            ProcessDocumentService\n                        \n                        \n                            RetrievalService\n                        \n                        \n                            TransactionManager\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatasetController\n                        \n                        \n                            DocumentController\n                        \n                        \n                            DocumentSegmentController\n                        \n                        \n                            IndexingController\n                        \n                        \n                            RetrievalController\n                        \n                        \n                            ExampleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigureModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            RelationaLeekFilesPersistenceModule\n                        \n                        \n                            RelationalDatasetsPersistenceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigureModule } from '@leek/configure';\nimport { FilesService } from '@leek/files/files.service';\nimport { RelationaLeekFilesPersistenceModule } from '@leek/files/infrastructure/persistence/relational-persistence.module';\nimport { PrismaModule, TransactionManager } from '@leek/prisma';\n\nimport { DatasetController } from './controllers/dataset.controller';\nimport { DocumentSegmentController } from './controllers/document-segment.controller';\nimport { DocumentController } from './controllers/document.controller';\nimport { ExampleController } from './controllers/example.controller';\nimport { IndexingController } from './controllers/indexing.controller';\nimport { RetrievalController } from './controllers/retrieval.controller';\nimport { RelationalDatasetsPersistenceModule } from './infrastructure/persistence/relational-persistence.module';\nimport { DatasetService } from './services/dataset.service';\nimport { DocumentSegmentService } from './services/document-segment.service';\nimport { DocumentService } from './services/document.service';\nimport { IndexingService } from './services/indexing.service';\nimport { JiebaKeywordService } from './services/jieba-keyword.service';\nimport { LLMGeneratorService } from './services/llm-generator.service';\nimport { ProcessDocumentService } from './services/process-document.service';\nimport { RetrievalService } from './services/retrieval.service';\n\n@Module({\n  imports: [ConfigureModule, PrismaModule, RelationalDatasetsPersistenceModule, RelationaLeekFilesPersistenceModule],\n  controllers: [\n    DatasetController,\n    DocumentController,\n    DocumentSegmentController,\n    IndexingController,\n    RetrievalController,\n    ExampleController,\n  ],\n  providers: [\n    DatasetService,\n    DocumentService,\n    DocumentSegmentService,\n    FilesService,\n    IndexingService,\n    ProcessDocumentService,\n    JiebaKeywordService,\n    LLMGeneratorService,\n    RetrievalService,\n    TransactionManager,\n  ],\n})\nexport class DatasetsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentController.html":{"url":"controllers/DocumentController.html","title":"controller - DocumentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/controllers/document.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                datasets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                archiveDocumentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createDocumentByFile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createDocumentByText\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteDocumentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disableDocumentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enableDocumentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findDocumentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findManyDocumentsPaginatedByDatasetId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                renameDocumentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                unArchiveDocumentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        archiveDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    archiveDocumentById(_datasetId: string, documentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/status/archive')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '归档文档', description: '将指定知识库中的文档设置为归档状态。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})@ApiParam({name: 'document_id', description: '文档的唯一标识符(UUID)'})@ApiNoContentResponse({description: '文档归档成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:248\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createDocumentByFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDocumentByFile(createDocumentByFileDto: CreateDocumentByFileDto, datasetId: string, source: CreatedFromEnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':dataset_id/document/create_by_file')@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '通过文件创建文档', description: '基于用户上传的文件，在指定知识库中创建一个新的文档。'})@ApiCreatedResponse({description: '成功创建文档并返回文档信息。', type: LeekDocument})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDocumentByFileDto\n                                            \n                                                            CreateDocumentByFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                            CreatedFromEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createDocumentByText\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDocumentByText(createDocumentByTextDto: CreateDocumentByTextDto, datasetId: string, source: CreatedFromEnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':dataset_id/document/create_by_text')@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '通过文本创建文档', description: '基于用户提供的文本内容，在指定知识库中创建一个新的文档。'})@ApiCreatedResponse({description: '成功创建文档并返回文档信息。', type: LeekDocument})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDocumentByTextDto\n                                            \n                                                            CreateDocumentByTextDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                            CreatedFromEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDocumentById(datasetId: string, documentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':dataset_id/documents/:document_id')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '删除文档', description: '从指定知识库中删除文档。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})@ApiParam({name: 'document_id', description: '文档的唯一标识符(UUID)'})@ApiNoContentResponse({description: '文档删除成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        disableDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableDocumentById(_datasetId: string, documentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/status/disable')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '禁用文档', description: '将指定知识库中的文档设置为禁用状态。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})@ApiParam({name: 'document_id', description: '文档的唯一标识符(UUID)'})@ApiNoContentResponse({description: '文档禁用成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        enableDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableDocumentById(_datasetId: string, documentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/status/enable')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '启用文档', description: '将指定知识库中的文档设置为启用状态。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})@ApiParam({name: 'document_id', description: '文档的唯一标识符(UUID)'})@ApiNoContentResponse({description: '文档启用成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDocumentById(documentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':dataset_id/documents/:document_id')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '根据ID获取文档详情', description: '根据文档的唯一标识符(UUID)，获取文档的详细信息。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})@ApiParam({name: 'document_id', description: '文档的唯一标识符(UUID)'})@ApiOkResponse({description: '返回指定ID的文档详细信息。', type: LeekDocument})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findManyDocumentsPaginatedByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDocumentsPaginatedByDatasetId(datasetId: string, queryDocumentDto?: QueryDocumentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':dataset_id/documents')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '获取知识库中的文档列表', description: '返回指定知识库内所有文档的详细信息，支持分页参数。'})@ApiOkResponse({description: '返回知识库中所有文档的列表。', type: undefined})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryDocumentDto\n                                            \n                                                            QueryDocumentDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        renameDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    renameDocumentById(_datasetId: string, documentId: string, updateDocumentNameDto: UpdateDocumentNameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/rename')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '修改文档名称', description: '更新指定知识库中文档的名称。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})@ApiParam({name: 'document_id', description: '文档的唯一标识符(UUID)'})@ApiNoContentResponse({description: '文档名称修改成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDocumentNameDto\n                                            \n                                                            UpdateDocumentNameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        unArchiveDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    unArchiveDocumentById(_datasetId: string, documentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/status/un_archive')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '撤销归档', description: '将指定知识库中的文档从归档状态恢复为正常状态。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符(UUID)'})@ApiParam({name: 'document_id', description: '文档的唯一标识符(UUID)'})@ApiNoContentResponse({description: '文档撤销归档成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document.controller.ts:271\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  Version,\n} from '@nestjs/common';\nimport {\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { Source, PaginationResponseDto, PaginationResponse } from '@leek/common';\nimport { CreatedFromEnum } from '@leek/constants';\nimport { createPaginatedResponse } from '@leek/utils';\n\nimport { LeekDocument } from '../domain/document';\nimport { CreateDocumentByFileDto } from '../dto/create-document-by-file.dto';\nimport { CreateDocumentByTextDto } from '../dto/create-document-by-text.dto';\nimport { QueryDocumentDto } from '../dto/query-document.dto';\nimport { UpdateDocumentNameDto } from '../dto/update-document-name.dto';\nimport { DocumentService } from '../services/document.service';\n\n@ApiTags('文档管理')\n@Controller('datasets')\nexport class DocumentController {\n  constructor(private readonly documentService: DocumentService) {}\n\n  @Post(':dataset_id/documents')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '获取知识库中的文档列表',\n    description: '返回指定知识库内所有文档的详细信息，支持分页参数。',\n  })\n  @ApiOkResponse({\n    description: '返回知识库中所有文档的列表。',\n    type: PaginationResponse(LeekDocument),\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  async findManyDocumentsPaginatedByDatasetId(\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Body() queryDocumentDto?: QueryDocumentDto,\n  ): Promise> {\n    const { currentPage = 1, pageSize = 10 } = queryDocumentDto;\n    const [documents, count] = await this.documentService.findManyDocumentsPaginatedByDatasetId(\n      datasetId,\n      queryDocumentDto,\n    );\n    return createPaginatedResponse(documents, {\n      currentPage,\n      pageSize,\n      count,\n    });\n  }\n\n  @Get(':dataset_id/documents/:document_id')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '根据ID获取文档详情',\n    description: '根据文档的唯一标识符(UUID)，获取文档的详细信息。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '文档的唯一标识符(UUID)',\n  })\n  @ApiOkResponse({\n    description: '返回指定ID的文档详细信息。',\n    type: LeekDocument,\n  })\n  async findDocumentById(@Param('document_id', new ParseUUIDPipe()) documentId: string): Promise {\n    return this.documentService.findDocumentById(documentId);\n  }\n\n  @Post(':dataset_id/document/create_by_text')\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({\n    summary: '通过文本创建文档',\n    description: '基于用户提供的文本内容，在指定知识库中创建一个新的文档。',\n  })\n  @ApiCreatedResponse({\n    description: '成功创建文档并返回文档信息。',\n    type: LeekDocument,\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  async createDocumentByText(\n    @Body() createDocumentByTextDto: CreateDocumentByTextDto,\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Source('web') source: CreatedFromEnum,\n  ) {\n    return this.documentService.createDocumentByText(createDocumentByTextDto, datasetId, source);\n  }\n\n  @Post(':dataset_id/document/create_by_file')\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({\n    summary: '通过文件创建文档',\n    description: '基于用户上传的文件，在指定知识库中创建一个新的文档。',\n  })\n  @ApiCreatedResponse({\n    description: '成功创建文档并返回文档信息。',\n    type: LeekDocument,\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  async createDocumentByFile(\n    @Body() createDocumentByFileDto: CreateDocumentByFileDto,\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Source('web') source: CreatedFromEnum,\n  ): Promise {\n    return this.documentService.createDocumentByFile(createDocumentByFileDto, datasetId, source);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/rename')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '修改文档名称',\n    description: '更新指定知识库中文档的名称。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '文档的唯一标识符(UUID)',\n  })\n  @ApiNoContentResponse({ description: '文档名称修改成功。' })\n  async renameDocumentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n    @Body() updateDocumentNameDto: UpdateDocumentNameDto,\n  ): Promise {\n    await this.documentService.renameDocumentById(documentId, updateDocumentNameDto);\n  }\n\n  @Delete(':dataset_id/documents/:document_id')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '删除文档',\n    description: '从指定知识库中删除文档。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '文档的唯一标识符(UUID)',\n  })\n  @ApiNoContentResponse({ description: '文档删除成功。' })\n  async deleteDocumentById(\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n  ) {\n    await this.documentService.deleteDocumentById(datasetId, documentId);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/status/disable')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '禁用文档',\n    description: '将指定知识库中的文档设置为禁用状态。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '文档的唯一标识符(UUID)',\n  })\n  @ApiNoContentResponse({ description: '文档禁用成功。' })\n  async disableDocumentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n  ) {\n    await this.documentService.disableDocumentById(documentId);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/status/enable')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '启用文档',\n    description: '将指定知识库中的文档设置为启用状态。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '文档的唯一标识符(UUID)',\n  })\n  @ApiNoContentResponse({ description: '文档启用成功。' })\n  async enableDocumentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n  ) {\n    await this.documentService.enableDocumentById(documentId);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/status/archive')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '归档文档',\n    description: '将指定知识库中的文档设置为归档状态。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '文档的唯一标识符(UUID)',\n  })\n  @ApiNoContentResponse({ description: '文档归档成功。' })\n  async archiveDocumentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n  ) {\n    await this.documentService.archiveDocumentById(documentId);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/status/un_archive')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '撤销归档',\n    description: '将指定知识库中的文档从归档状态恢复为正常状态。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符(UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '文档的唯一标识符(UUID)',\n  })\n  @ApiNoContentResponse({ description: '文档撤销归档成功。' })\n  async unArchiveDocumentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n  ) {\n    await this.documentService.unArchiveDocumentById(documentId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentDto.html":{"url":"classes/DocumentDto.html","title":"class - DocumentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/document.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                pageContent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '与文档关联的元数据信息，可以是任意键值对。', example: undefined})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/document.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pageContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档的内容，通常为字符串类型的文本。', example: 'This is a sample document content.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/document.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { IsString, IsObject, IsOptional } from 'class-validator';\n\nexport class DocumentDto {\n  @ApiProperty({\n    description: '文档的内容，通常为字符串类型的文本。',\n    example: 'This is a sample document content.',\n  })\n  @IsString()\n  pageContent: string;\n\n  @ApiPropertyOptional({\n    description: '与文档关联的元数据信息，可以是任意键值对。',\n    example: { author: 'John Doe', createdAt: '2024-01-01' },\n  })\n  @IsOptional()\n  @IsObject()\n  metadata: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentMapper.html":{"url":"classes/DocumentMapper.html","title":"class - DocumentMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/mappers/document.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: Document)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/document.mapper.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                        Document\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeekDocument\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: LeekDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/document.mapper.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            LeekDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Document\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from '@prisma/client';\n\nimport { LeekDocument } from '../../../domain/document';\n\nexport class DocumentMapper {\n  static toDomain(raw: Document): LeekDocument {\n    const domainEntity = new LeekDocument();\n\n    domainEntity.id = raw.id;\n    domainEntity.datasetId = raw.datasetId;\n    domainEntity.position = raw.position;\n    domainEntity.dataSourceType = raw.dataSourceType;\n    domainEntity.dataSourceInfo = raw.dataSourceInfo;\n    domainEntity.datasetProcessRuleId = raw.datasetProcessRuleId;\n    domainEntity.name = raw.name;\n    domainEntity.createdFrom = raw.createdFrom;\n    domainEntity.createdApiRequestId = raw.createdApiRequestId;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.fileId = raw.fileId;\n    domainEntity.wordCount = raw.wordCount;\n    domainEntity.tokens = raw.tokens;\n    domainEntity.indexingLatency = raw.indexingLatency;\n    domainEntity.enabled = raw.enabled;\n    domainEntity.disabledAt = raw.disabledAt;\n    domainEntity.archived = raw.archived;\n    domainEntity.archivedReason = raw.archivedReason;\n    domainEntity.archivedAt = raw.archivedAt;\n    domainEntity.updatedAt = raw.updatedAt;\n    domainEntity.docType = raw.docType;\n    domainEntity.docMetadata = raw.docMetadata;\n    domainEntity.docForm = raw.docForm;\n    domainEntity.docLanguage = raw.docLanguage;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: LeekDocument): Document {\n    const persistenceEntity = {} as Document;\n\n    persistenceEntity.datasetId = domainEntity.datasetId;\n    persistenceEntity.position = domainEntity.position;\n    persistenceEntity.dataSourceType = domainEntity.dataSourceType;\n    persistenceEntity.dataSourceInfo = domainEntity.dataSourceInfo;\n    persistenceEntity.datasetProcessRuleId = domainEntity.datasetProcessRuleId;\n    persistenceEntity.name = domainEntity.name;\n    persistenceEntity.createdFrom = domainEntity.createdFrom;\n    persistenceEntity.createdApiRequestId = domainEntity.createdApiRequestId;\n\n    persistenceEntity.wordCount = domainEntity.wordCount;\n    persistenceEntity.tokens = domainEntity.tokens;\n    persistenceEntity.indexingLatency = domainEntity.indexingLatency;\n    persistenceEntity.enabled = domainEntity.enabled;\n    persistenceEntity.disabledAt = domainEntity.disabledAt;\n    persistenceEntity.archived = domainEntity.archived;\n    persistenceEntity.archivedReason = domainEntity.archivedReason;\n    persistenceEntity.archivedAt = domainEntity.archivedAt;\n    persistenceEntity.docType = domainEntity.docType;\n    persistenceEntity.docMetadata = domainEntity.docMetadata;\n    persistenceEntity.docForm = domainEntity.docForm;\n    persistenceEntity.docLanguage = domainEntity.docLanguage;\n    persistenceEntity.fileId = domainEntity.fileId;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentRelationalRepository.html":{"url":"injectables/DocumentRelationalRepository.html","title":"injectable - DocumentRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/repositories/document.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countDocumentsByDatasetId\n                            \n                            \n                                    Async\n                                createDocument\n                            \n                            \n                                    Async\n                                deleteDocumentById\n                            \n                            \n                                    Async\n                                deleteManyDocumentsByDatasetId\n                            \n                            \n                                    Async\n                                findDocumentById\n                            \n                            \n                                    Async\n                                findDocumentByNameAndDatasetId\n                            \n                            \n                                    Async\n                                findManyDocumentsByDatasetId\n                            \n                            \n                                    Async\n                                findManyDocumentsPaginatedByDatasetId\n                            \n                            \n                                    Async\n                                renameDocumentById\n                            \n                            \n                                    Async\n                                updateDocumentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countDocumentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    countDocumentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createDocument\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDocument(data: LeekDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDocumentById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteManyDocumentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManyDocumentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDocumentById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDocumentByNameAndDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDocumentByNameAndDatasetId(name: string, datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyDocumentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDocumentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyDocumentsPaginatedByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDocumentsPaginatedByDatasetId(datasetId: string, queryDocumentDto: QueryDocumentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryDocumentDto\n                                            \n                                                            QueryDocumentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        renameDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    renameDocumentById(id: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDocumentById(id: string, payload: LeekDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document.repository.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            LeekDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Prisma } from '@prisma/client';\n\nimport { PaginatedResult } from '@leek/interfaces';\nimport { PrismaService } from '@leek/prisma';\n\nimport { LeekDocument } from '../../../domain/document';\nimport { QueryDocumentDto } from '../../../dto/query-document.dto';\nimport { DocumentRepository } from '../document.repository';\nimport { DocumentMapper } from '../mappers/document.mapper';\n\n@Injectable()\nexport class DocumentRelationalRepository implements DocumentRepository {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  async createDocument(data: LeekDocument): Promise {\n    const document = await this.prismaService.prisma.document.create({\n      data: DocumentMapper.toPersistence(data),\n    });\n\n    return DocumentMapper.toDomain(document);\n  }\n\n  async findManyDocumentsByDatasetId(datasetId: string): Promise {\n    return this.prismaService.prisma.document.findMany({\n      where: { datasetId },\n    });\n  }\n\n  async findManyDocumentsPaginatedByDatasetId(\n    datasetId: string,\n    queryDocumentDto: QueryDocumentDto,\n  ): Promise> {\n    const { currentPage, pageSize, q, ...filterOptions } = queryDocumentDto;\n\n    const safePage = Math.max(currentPage || 1, 1);\n    const safePageSize = Math.max(pageSize || 10, 1);\n    const skip = (safePage - 1) * safePageSize;\n\n    const where: Prisma.DocumentWhereInput = {\n      datasetId,\n      name: { contains: q, mode: 'insensitive' },\n      ...filterOptions,\n    };\n\n    return await Promise.all([\n      this.prismaService.prisma.document.findMany({\n        where,\n        skip,\n        take: pageSize,\n        orderBy: {\n          position: Prisma.SortOrder.desc,\n        },\n      }),\n      this.prismaService.prisma.document.count({ where }),\n    ]);\n  }\n\n  async findDocumentById(id: string): Promise> {\n    const entity = await this.prismaService.prisma.document.findUnique({\n      where: { id },\n    });\n    return entity ? DocumentMapper.toDomain(entity) : null;\n  }\n\n  async findDocumentByNameAndDatasetId(name: string, datasetId: string): Promise> {\n    return this.prismaService.prisma.document.findFirst({\n      where: {\n        name,\n        datasetId,\n      },\n    });\n  }\n\n  async updateDocumentById(id: string, payload: LeekDocument): Promise {\n    await this.prismaService.prisma.document.update({\n      where: { id },\n      data: DocumentMapper.toPersistence(payload),\n    });\n  }\n\n  async deleteDocumentById(id: string): Promise {\n    await this.prismaService.prisma.document.delete({\n      where: { id },\n    });\n  }\n\n  async countDocumentsByDatasetId(datasetId: string): Promise {\n    return this.prismaService.prisma.document.count({\n      where: { datasetId },\n    });\n  }\n\n  async renameDocumentById(id: string, name: string): Promise {\n    return this.prismaService.prisma.document.update({\n      where: { id },\n      data: { name },\n    });\n  }\n\n  async deleteManyDocumentsByDatasetId(datasetId: string): Promise {\n    await this.prismaService.prisma.document.deleteMany({\n      where: { datasetId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentRepository.html":{"url":"classes/DocumentRepository.html","title":"class - DocumentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/document.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                抽象的 Document 仓库接口。\n提供创建、查询、更新、重命名和删除文档的方法。\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                countDocumentsByDatasetId\n                            \n                            \n                                    Abstract\n                                createDocument\n                            \n                            \n                                    Abstract\n                                deleteDocumentById\n                            \n                            \n                                    Abstract\n                                deleteManyDocumentsByDatasetId\n                            \n                            \n                                    Abstract\n                                findDocumentById\n                            \n                            \n                                    Abstract\n                                findDocumentByNameAndDatasetId\n                            \n                            \n                                    Abstract\n                                findManyDocumentsByDatasetId\n                            \n                            \n                                    Abstract\n                                findManyDocumentsPaginatedByDatasetId\n                            \n                            \n                                    Abstract\n                                renameDocumentById\n                            \n                            \n                                    Abstract\n                                updateDocumentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        countDocumentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    countDocumentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:111\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 统计文档数量。\n动作: count\n目标: Documents\n条件: ByDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                文档数量。\n动作: count\n目标: Documents\n条件: ByDatasetId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createDocument\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDocument(data: Omit, prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:23\n                        \n                    \n\n\n            \n                \n                        创建一个新的文档。\n动作: create\n目标: Document\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档数据，不包括 id、createdAt 和 updatedAt。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                创建的文档。\n动作: create\n目标: Document\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDocumentById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:88\n                        \n                    \n\n\n            \n                \n                        根据文档 ID 删除文档。\n动作: delete\n目标: Document\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要删除的文档 ID。\n\n动作: delete\n目标: Document\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteManyDocumentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManyDocumentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:133\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 删除所有相关文档。\n动作: deleteMany\n目标: Documents\n条件: ByDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n动作: deleteMany\n目标: Documents\n条件: ByDatasetId\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDocumentById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:62\n                        \n                    \n\n\n            \n                \n                        根据文档 ID 查询单个文档。\n动作: find\n目标: Document\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的文档或 null。\n动作: find\n目标: Document\n条件: ById\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findDocumentByNameAndDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDocumentByNameAndDatasetId(name: string, datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:123\n                        \n                    \n\n\n            \n                \n                        根据名称和数据集 ID 查询单个文档。\n动作: find\n目标: Document\n条件: ByNameAndDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的名称。\n\n\n                                            \n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的文档或 null。\n动作: find\n目标: Document\n条件: ByNameAndDatasetId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManyDocumentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDocumentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:37\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 查询所有文档。\n动作: findMany\n目标: Documents\n条件: ByDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                一个包含所有相关文档的数组。\n动作: findMany\n目标: Documents\n条件: ByDatasetId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManyDocumentsPaginatedByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyDocumentsPaginatedByDatasetId(datasetId: string, queryDocumentDto: QueryDocumentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:48\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 查询所有文档（带分页支持）。\n动作: findMany\n目标: Documents\n条件: WithPaginationByDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                        \n                                                queryDocumentDto\n                                            \n                                                            QueryDocumentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                一个包含所有相关文档的数组。\n动作: findMany\n目标: Documents\n条件: WithPaginationByDatasetId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        renameDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    renameDocumentById(id: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:100\n                        \n                    \n\n\n            \n                \n                        根据文档 ID 重命名文档。\n动作: rename\n目标: Document\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的 ID。\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n新的文档名称。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                更新后的文档。\n动作: rename\n目标: Document\n条件: ById\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateDocumentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDocumentById(id: string, payload: Partial, prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document.repository.ts:74\n                        \n                    \n\n\n            \n                \n                        根据文档 ID 更新文档。\n动作: update\n目标: Document\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要更新的文档 ID。\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含部分更新数据的对象。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n动作: update\n目标: Document\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma, PrismaClient } from '@prisma/client';\n\nimport { PaginatedResult } from '@leek/interfaces';\n\nimport { LeekDocument } from '../../domain/document';\nimport { QueryDocumentDto } from '../../dto/query-document.dto';\n\n/**\n * 抽象的 Document 仓库接口。\n * 提供创建、查询、更新、重命名和删除文档的方法。\n */\nexport abstract class DocumentRepository {\n  /**\n   * 创建一个新的文档。\n   * @param data - 文档数据，不包括 `id`、`createdAt` 和 `updatedAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   * @returns 创建的文档。\n   *\n   * 动作: create\n   * 目标: Document\n   * 条件: 无\n   */\n  abstract createDocument(\n    data: Omit,\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 根据数据集 ID 查询所有文档。\n   * @param datasetId - 数据集的 ID。\n   * @returns 一个包含所有相关文档的数组。\n   *\n   * 动作: findMany\n   * 目标: Documents\n   * 条件: ByDatasetId\n   */\n  abstract findManyDocumentsByDatasetId(datasetId: string): Promise;\n\n  /**\n   * 根据数据集 ID 查询所有文档（带分页支持）。\n   * @param datasetId - 数据集的 ID。\n   * @returns 一个包含所有相关文档的数组。\n   *\n   * 动作: findMany\n   * 目标: Documents\n   * 条件: WithPaginationByDatasetId\n   */\n  abstract findManyDocumentsPaginatedByDatasetId(\n    datasetId: string,\n    queryDocumentDto: QueryDocumentDto,\n  ): Promise>;\n\n  /**\n   * 根据文档 ID 查询单个文档。\n   * @param id - 文档的 ID。\n   * @returns 找到的文档或 null。\n   *\n   * 动作: find\n   * 目标: Document\n   * 条件: ById\n   */\n  abstract findDocumentById(id: string): Promise>;\n\n  /**\n   * 根据文档 ID 更新文档。\n   * @param id - 要更新的文档 ID。\n   * @param payload - 包含部分更新数据的对象。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   *\n   * 动作: update\n   * 目标: Document\n   * 条件: ById\n   */\n  abstract updateDocumentById(\n    id: string,\n    payload: Partial,\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 根据文档 ID 删除文档。\n   * @param id - 要删除的文档 ID。\n   *\n   * 动作: delete\n   * 目标: Document\n   * 条件: ById\n   */\n  abstract deleteDocumentById(id: string): Promise;\n\n  /**\n   * 根据文档 ID 重命名文档。\n   * @param id - 文档的 ID。\n   * @param name - 新的文档名称。\n   * @returns 更新后的文档。\n   *\n   * 动作: rename\n   * 目标: Document\n   * 条件: ById\n   */\n  abstract renameDocumentById(id: string, name: string): Promise;\n\n  /**\n   * 根据数据集 ID 统计文档数量。\n   * @param datasetId - 数据集的 ID。\n   * @returns 文档数量。\n   *\n   * 动作: count\n   * 目标: Documents\n   * 条件: ByDatasetId\n   */\n  abstract countDocumentsByDatasetId(datasetId: string): Promise;\n\n  /**\n   * 根据名称和数据集 ID 查询单个文档。\n   * @param name - 文档的名称。\n   * @param datasetId - 数据集的 ID。\n   * @returns 找到的文档或 null。\n   *\n   * 动作: find\n   * 目标: Document\n   * 条件: ByNameAndDatasetId\n   */\n  abstract findDocumentByNameAndDatasetId(name: string, datasetId: string): Promise>;\n\n  /**\n   * 根据数据集 ID 删除所有相关文档。\n   * @param datasetId - 数据集的 ID。\n   *\n   * 动作: deleteMany\n   * 目标: Documents\n   * 条件: ByDatasetId\n   */\n  abstract deleteManyDocumentsByDatasetId(datasetId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentSegmentController.html":{"url":"controllers/DocumentSegmentController.html","title":"controller - DocumentSegmentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentSegmentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/controllers/document-segment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                datasets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createSegment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteSegmentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disableSegmentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enableSegmentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findManySegmentsPaginatedByDocumentId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findSegmentById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateSegmentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createSegment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSegment(datasetId: string, documentId: string, createDocumentSegmentDto: CreateDocumentSegmentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':dataset_id/documents/:document_id/segments')@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '新增文档分段', description: '在指定文档中新增一个分段。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符 (UUID)'})@ApiParam({name: 'document_id', description: '知识库文档的唯一标识符 (UUID)'})@ApiCreatedResponse({description: '成功创建文档分段。', type: LeekSegment})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document-segment.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createDocumentSegmentDto\n                                            \n                                                            CreateDocumentSegmentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSegmentById(datasetId: string, documentId: string, segmentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':dataset_id/documents/:document_id/segments/:segment_id')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '删除文档分段', description: '从文档中删除指定的分段。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符 (UUID)'})@ApiParam({name: 'document_id', description: '知识库文档的唯一标识符 (UUID)'})@ApiParam({name: 'segment_id', description: '文档分段的唯一标识符 (UUID)'})@ApiNoContentResponse({description: '文档分段删除成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document-segment.controller.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        disableSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableSegmentById(_datasetId: string, _documentId: string, segmentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/segments/:segment_id/disable')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '禁用文档分段', description: '将指定分段设置为禁用状态。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符 (UUID)'})@ApiParam({name: 'document_id', description: '知识库文档的唯一标识符 (UUID)'})@ApiParam({name: 'segment_id', description: '文档分段的唯一标识符 (UUID)'})@ApiNoContentResponse({description: '文档分段禁用成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document-segment.controller.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        enableSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableSegmentById(_datasetId: string, _documentId: string, segmentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/segments/:segment_id/enable')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '启用文档分段', description: '将指定分段设置为启用状态。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符 (UUID)'})@ApiParam({name: 'document_id', description: '知识库文档的唯一标识符 (UUID)'})@ApiParam({name: 'segment_id', description: '文档分段的唯一标识符 (UUID)'})@ApiNoContentResponse({description: '文档分段启用成功。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document-segment.controller.ts:244\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findManySegmentsPaginatedByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsPaginatedByDocumentId(_datasetId: string, documentId: string, querySegmentDto?: QuerySegmentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':dataset_id/documents/:document_id/segments')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '获取文档所有分段', description: '检索指定文档的所有分段列表。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符 (UUID)'})@ApiParam({name: 'document_id', description: '知识库文档的唯一标识符 (UUID)'})@ApiOkResponse({description: '返回文档中所有分段的列表。', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document-segment.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                querySegmentDto\n                                            \n                                                            QuerySegmentDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSegmentById(_datasetId: string, _documentId: string, segmentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':dataset_id/documents/:document_id/segments/:segment_id')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '获取文档分段详情', description: '根据指定的段落ID获取文档分段的详细信息。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符 (UUID)'})@ApiParam({name: 'document_id', description: '知识库文档的唯一标识符 (UUID)'})@ApiParam({name: 'segment_id', description: '文档分段的唯一标识符 (UUID)'})@ApiOkResponse({description: '返回指定段落的详细信息。', type: LeekSegment})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document-segment.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSegmentById(datasetId: string, documentId: string, segmentId: string, updateDocumentSegmentDto: UpdateDocumentSegmentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':dataset_id/documents/:document_id/segments/:segment_id')@Version('1')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: '更新文档分段', description: '更新文档中指定分段的内容。'})@ApiParam({name: 'dataset_id', description: '知识库的唯一标识符 (UUID)'})@ApiParam({name: 'document_id', description: '知识库文档的唯一标识符 (UUID)'})@ApiParam({name: 'segment_id', description: '文档分段的唯一标识符 (UUID)'})@ApiNoContentResponse({description: '文档分段更新成功。'})@ApiNoContentResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/document-segment.controller.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDocumentSegmentDto\n                                            \n                                                            UpdateDocumentSegmentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  Query,\n  Version,\n} from '@nestjs/common';\nimport {\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { PaginationResponse, PaginationResponseDto } from '@leek/common';\nimport { createPaginatedResponse } from '@leek/utils';\n\nimport { LeekSegment } from '../domain/segment';\nimport { CreateDocumentSegmentDto } from '../dto/create-segment.dto';\nimport { QuerySegmentDto } from '../dto/query-segment.dto';\nimport { UpdateDocumentSegmentDto } from '../dto/update-segment.dto';\nimport { DocumentSegmentService } from '../services/document-segment.service';\n\n@ApiTags('文档段落管理')\n@Controller('datasets')\nexport class DocumentSegmentController {\n  constructor(private readonly documentSegmentService: DocumentSegmentService) {}\n\n  @Post(':dataset_id/documents/:document_id/segments')\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({ summary: '新增文档分段', description: '在指定文档中新增一个分段。' })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '知识库文档的唯一标识符 (UUID)',\n  })\n  @ApiCreatedResponse({\n    description: '成功创建文档分段。',\n    type: LeekSegment,\n  })\n  async createSegment(\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n    @Body() createDocumentSegmentDto: CreateDocumentSegmentDto,\n  ): Promise {\n    return this.documentSegmentService.createSegment(datasetId, documentId, createDocumentSegmentDto);\n  }\n\n  @Get(':dataset_id/documents/:document_id/segments/:segment_id')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '获取文档分段详情',\n    description: '根据指定的段落ID获取文档分段的详细信息。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '知识库文档的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'segment_id',\n    description: '文档分段的唯一标识符 (UUID)',\n  })\n  @ApiOkResponse({\n    description: '返回指定段落的详细信息。',\n    type: LeekSegment,\n  })\n  async findSegmentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) _documentId: string,\n    @Param('segment_id', new ParseUUIDPipe()) segmentId: string,\n  ): Promise {\n    return this.documentSegmentService.findSegmentById(segmentId);\n  }\n\n  @Get(':dataset_id/documents/:document_id/segments')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '获取文档所有分段',\n    description: '检索指定文档的所有分段列表。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '知识库文档的唯一标识符 (UUID)',\n  })\n  @ApiOkResponse({\n    description: '返回文档中所有分段的列表。',\n    type: PaginationResponse(LeekSegment),\n  })\n  async findManySegmentsPaginatedByDocumentId(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n    @Query() querySegmentDto?: QuerySegmentDto,\n  ): Promise> {\n    const { currentPage = 1, pageSize = 10 } = querySegmentDto;\n\n    const [segments, count] = await this.documentSegmentService.findManySegmentsPaginatedByDocumentId(\n      documentId,\n      querySegmentDto,\n    );\n    return createPaginatedResponse(segments, {\n      currentPage,\n      pageSize,\n      count,\n    });\n  }\n\n  @Delete(':dataset_id/documents/:document_id/segments/:segment_id')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '删除文档分段',\n    description: '从文档中删除指定的分段。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '知识库文档的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'segment_id',\n    description: '文档分段的唯一标识符 (UUID)',\n  })\n  @ApiNoContentResponse({\n    description: '文档分段删除成功。',\n  })\n  async deleteSegmentById(\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n    @Param('segment_id', new ParseUUIDPipe()) segmentId: string,\n  ): Promise {\n    await this.documentSegmentService.deleteSegmentById(datasetId, documentId, segmentId);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/segments/:segment_id')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '更新文档分段',\n    description: '更新文档中指定分段的内容。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '知识库文档的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'segment_id',\n    description: '文档分段的唯一标识符 (UUID)',\n  })\n  @ApiNoContentResponse({\n    description: '文档分段更新成功。',\n  })\n  @ApiNoContentResponse()\n  async updateSegmentById(\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) documentId: string,\n    @Param('segment_id', new ParseUUIDPipe()) segmentId: string,\n    @Body() updateDocumentSegmentDto: UpdateDocumentSegmentDto,\n  ): Promise {\n    await this.documentSegmentService.updateSegmentById(datasetId, documentId, segmentId, updateDocumentSegmentDto);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/segments/:segment_id/disable')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '禁用文档分段',\n    description: '将指定分段设置为禁用状态。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '知识库文档的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'segment_id',\n    description: '文档分段的唯一标识符 (UUID)',\n  })\n  @ApiNoContentResponse({\n    description: '文档分段禁用成功。',\n  })\n  async disableSegmentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) _documentId: string,\n    @Param('segment_id', new ParseUUIDPipe()) segmentId: string,\n  ): Promise {\n    await this.documentSegmentService.disableSegmentById(segmentId);\n  }\n\n  @Patch(':dataset_id/documents/:document_id/segments/:segment_id/enable')\n  @Version('1')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: '启用文档分段',\n    description: '将指定分段设置为启用状态。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'document_id',\n    description: '知识库文档的唯一标识符 (UUID)',\n  })\n  @ApiParam({\n    name: 'segment_id',\n    description: '文档分段的唯一标识符 (UUID)',\n  })\n  @ApiNoContentResponse({\n    description: '文档分段启用成功。',\n  })\n  async enableSegmentById(\n    @Param('dataset_id', new ParseUUIDPipe()) _datasetId: string,\n    @Param('document_id', new ParseUUIDPipe()) _documentId: string,\n    @Param('segment_id', new ParseUUIDPipe()) segmentId: string,\n  ): Promise {\n    await this.documentSegmentService.enableSegmentById(segmentId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentSegmentMapper.html":{"url":"classes/DocumentSegmentMapper.html","title":"class - DocumentSegmentMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentSegmentMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/mappers/document-segment.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: DocumentSegment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/document-segment.mapper.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                        DocumentSegment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeekSegment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: LeekSegment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/document-segment.mapper.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            LeekSegment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DocumentSegment\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentSegment } from '@prisma/client';\n\nimport { createHash, uuid } from '@leek/utils';\n\nimport { LeekSegment } from '../../../domain/segment';\n\nexport class DocumentSegmentMapper {\n  static toDomain(raw: DocumentSegment): LeekSegment {\n    const domainEntity = new LeekSegment();\n\n    domainEntity.id = raw.id;\n    domainEntity.datasetId = raw.datasetId;\n    domainEntity.documentId = raw.documentId;\n    domainEntity.position = raw.position;\n    domainEntity.content = raw.content;\n    domainEntity.wordCount = raw.wordCount;\n    domainEntity.tokens = raw.tokens;\n    domainEntity.keywords = raw.keywords;\n    domainEntity.indexNodeId = raw.indexNodeId;\n    domainEntity.indexNodeHash = raw.indexNodeHash;\n    domainEntity.hitCount = raw.hitCount;\n    domainEntity.enabled = raw.enabled;\n    domainEntity.disabledAt = raw.disabledAt;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.answer = raw.answer;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: LeekSegment): DocumentSegment {\n    const persistenceEntity = {} as DocumentSegment;\n\n    persistenceEntity.id = domainEntity.id;\n    persistenceEntity.datasetId = domainEntity.datasetId;\n    persistenceEntity.documentId = domainEntity.documentId;\n    persistenceEntity.position = domainEntity.position;\n    persistenceEntity.content = domainEntity.content;\n    persistenceEntity.wordCount = domainEntity.wordCount || domainEntity.content.length;\n    persistenceEntity.tokens = domainEntity.tokens;\n    persistenceEntity.keywords = domainEntity.keywords;\n    persistenceEntity.indexNodeId = domainEntity.indexNodeId || uuid();\n    persistenceEntity.indexNodeHash = domainEntity.indexNodeHash || createHash(domainEntity.content);\n    persistenceEntity.hitCount = domainEntity.hitCount;\n    persistenceEntity.enabled = domainEntity.enabled;\n    persistenceEntity.status = domainEntity.status || 'completed';\n    persistenceEntity.error = domainEntity.error;\n    persistenceEntity.disabledAt = domainEntity.disabledAt;\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.answer = domainEntity.answer;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentSegmentRelationalRepository.html":{"url":"injectables/DocumentSegmentRelationalRepository.html","title":"injectable - DocumentSegmentRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentSegmentRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countSegmentsByDocumentId\n                            \n                            \n                                    Async\n                                createManySegments\n                            \n                            \n                                    Async\n                                createManySegmentsAndReturn\n                            \n                            \n                                    Async\n                                createSegment\n                            \n                            \n                                    Async\n                                deleteManySegmentsByDatasetId\n                            \n                            \n                                    Async\n                                deleteManySegmentsByDocumentId\n                            \n                            \n                                    Async\n                                deleteSegmentById\n                            \n                            \n                                    Async\n                                findManyHashesByDatasetIdAndHashes\n                            \n                            \n                                    Async\n                                findManySegmentsByDocumentId\n                            \n                            \n                                    Async\n                                findManySegmentsByHashAndDatasetId\n                            \n                            \n                                    Async\n                                findManySegmentsPaginatedByDocumentId\n                            \n                            \n                                    Async\n                                findSegmentByDatasetDocumentAndHash\n                            \n                            \n                                    Async\n                                findSegmentById\n                            \n                            \n                                    Async\n                                updateManyHitCountByDatasetIdAndHashes\n                            \n                            \n                                    Async\n                                updateSegmentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countSegmentsByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    countSegmentsByDocumentId(documentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createManySegments\n                        \n                    \n                \n            \n            \n                \n                        \n                    createManySegments(data: LeekSegment[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekSegment[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createManySegmentsAndReturn\n                        \n                    \n                \n            \n            \n                \n                        \n                    createManySegmentsAndReturn(data: LeekSegment[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekSegment[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSegment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSegment(data: LeekSegment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekSegment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteManySegmentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManySegmentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteManySegmentsByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManySegmentsByDocumentId(documentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSegmentById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyHashesByDatasetIdAndHashes\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyHashesByDatasetIdAndHashes(hashes: string[], datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hashes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManySegmentsByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsByDocumentId(documentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManySegmentsByHashAndDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsByHashAndDatasetId(hashes: string[], datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hashes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManySegmentsPaginatedByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsPaginatedByDocumentId(documentId: string, querySegmentDto: QuerySegmentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                querySegmentDto\n                                            \n                                                            QuerySegmentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findSegmentByDatasetDocumentAndHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSegmentByDatasetDocumentAndHash(datasetId: string, documentId: string, indexNodeHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                indexNodeHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSegmentById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateManyHitCountByDatasetIdAndHashes\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateManyHitCountByDatasetIdAndHashes(hashes: string[], datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hashes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSegmentById(id: string, payload: LeekSegment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/document-segment.repository.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            LeekSegment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Prisma } from '@prisma/client';\n\nimport { PaginatedResult } from '@leek/interfaces';\nimport { PrismaService } from '@leek/prisma';\n\nimport { LeekSegment } from '../../../domain/segment';\nimport { QuerySegmentDto } from '../../../dto/query-segment.dto';\nimport { DocumentSegmentRepository } from '../document-segment.repository';\nimport { DocumentSegmentMapper } from '../mappers/document-segment.mapper';\n\n@Injectable()\nexport class DocumentSegmentRelationalRepository implements DocumentSegmentRepository {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  async createSegment(data: LeekSegment): Promise {\n    const documentSegment = await this.prismaService.prisma.documentSegment.create({\n      data: DocumentSegmentMapper.toPersistence(data),\n    });\n\n    return DocumentSegmentMapper.toDomain(documentSegment);\n  }\n\n  async createManySegments(data: LeekSegment[]): Promise {\n    await this.prismaService.prisma.documentSegment.createMany({\n      data: data.map(DocumentSegmentMapper.toPersistence),\n    });\n  }\n\n  async createManySegmentsAndReturn(data: LeekSegment[]): Promise {\n    return await this.prismaService.prisma.documentSegment.createManyAndReturn({\n      data: data.map(DocumentSegmentMapper.toPersistence),\n    });\n  }\n\n  async findManySegmentsByDocumentId(documentId: string): Promise {\n    return this.prismaService.prisma.documentSegment.findMany({\n      where: { documentId },\n    });\n  }\n\n  async findManySegmentsPaginatedByDocumentId(\n    documentId: string,\n    querySegmentDto: QuerySegmentDto,\n  ): Promise> {\n    const { currentPage, pageSize, q, ...filterOptions } = querySegmentDto;\n\n    const safePage = Math.max(currentPage || 1, 1);\n    const safePageSize = Math.max(pageSize || 10, 1);\n    const skip = (safePage - 1) * safePageSize;\n\n    const where: Prisma.DocumentSegmentWhereInput = {\n      documentId,\n      OR: [\n        {\n          content: { contains: q, mode: 'insensitive' },\n        },\n        {\n          answer: { contains: q, mode: 'insensitive' },\n        },\n      ],\n      ...filterOptions,\n    };\n\n    return await Promise.all([\n      this.prismaService.prisma.documentSegment.findMany({\n        where,\n        skip,\n        take: pageSize,\n        orderBy: {\n          position: Prisma.SortOrder.desc,\n        },\n      }),\n      this.prismaService.prisma.documentSegment.count({ where }),\n    ]);\n  }\n\n  async findSegmentById(id: string): Promise> {\n    const entity = await this.prismaService.prisma.documentSegment.findUnique({\n      where: { id },\n    });\n\n    return entity ? DocumentSegmentMapper.toDomain(entity) : null;\n  }\n\n  async findSegmentByDatasetDocumentAndHash(\n    datasetId: string,\n    documentId: string,\n    indexNodeHash: string,\n  ): Promise> {\n    const entity = await this.prismaService.prisma.documentSegment.findFirst({\n      where: { indexNodeHash, documentId, datasetId },\n    });\n\n    return entity ? DocumentSegmentMapper.toDomain(entity) : null;\n  }\n\n  async findManySegmentsByHashAndDatasetId(hashes: string[], datasetId: string): Promise {\n    return await this.prismaService.prisma.documentSegment.findMany({\n      where: {\n        indexNodeHash: {\n          in: hashes,\n        },\n        datasetId,\n      },\n    });\n  }\n\n  async findManyHashesByDatasetIdAndHashes(hashes: string[], datasetId: string): Promise {\n    const result = await this.prismaService.prisma.documentSegment.findMany({\n      where: {\n        indexNodeHash: {\n          in: hashes,\n        },\n        datasetId,\n      },\n      select: {\n        indexNodeHash: true,\n      },\n    });\n    return result.map((segment) => segment.indexNodeHash);\n  }\n\n  async updateSegmentById(id: string, payload: LeekSegment): Promise {\n    await this.prismaService.prisma.documentSegment.update({\n      where: { id },\n      data: DocumentSegmentMapper.toPersistence(payload),\n    });\n  }\n\n  async updateManyHitCountByDatasetIdAndHashes(hashes: string[], datasetId: string) {\n    await this.prismaService.prisma.documentSegment.updateMany({\n      data: {\n        hitCount: {\n          increment: 1,\n        },\n      },\n      where: {\n        datasetId,\n        indexNodeHash: {\n          in: hashes,\n        },\n      },\n    });\n  }\n\n  async deleteSegmentById(id: string): Promise {\n    await this.prismaService.prisma.documentSegment.delete({\n      where: { id },\n    });\n  }\n\n  async deleteManySegmentsByDocumentId(documentId: string): Promise {\n    await this.prismaService.prisma.documentSegment.deleteMany({\n      where: { documentId },\n    });\n  }\n\n  async deleteManySegmentsByDatasetId(datasetId: string): Promise {\n    await this.prismaService.prisma.documentSegment.deleteMany({\n      where: { datasetId },\n    });\n  }\n\n  async countSegmentsByDocumentId(documentId: string): Promise {\n    return this.prismaService.prisma.documentSegment.count({\n      where: { documentId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentSegmentRepository.html":{"url":"classes/DocumentSegmentRepository.html","title":"class - DocumentSegmentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentSegmentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/document-segment.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                抽象的 DocumentSegment 仓库接口。\n提供创建、更新、查询和删除文档片段的方法，\n支持各种过滤条件和事务选项。\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                countSegmentsByDocumentId\n                            \n                            \n                                    Abstract\n                                createManySegments\n                            \n                            \n                                    Abstract\n                                createManySegmentsAndReturn\n                            \n                            \n                                    Abstract\n                                createSegment\n                            \n                            \n                                    Abstract\n                                deleteManySegmentsByDatasetId\n                            \n                            \n                                    Abstract\n                                deleteManySegmentsByDocumentId\n                            \n                            \n                                    Abstract\n                                deleteSegmentById\n                            \n                            \n                                    Abstract\n                                findManyHashesByDatasetIdAndHashes\n                            \n                            \n                                    Abstract\n                                findManySegmentsByDocumentId\n                            \n                            \n                                    Abstract\n                                findManySegmentsByHashAndDatasetId\n                            \n                            \n                                    Abstract\n                                findManySegmentsPaginatedByDocumentId\n                            \n                            \n                                    Abstract\n                                findSegmentByDatasetDocumentAndHash\n                            \n                            \n                                    Abstract\n                                findSegmentById\n                            \n                            \n                                    Abstract\n                                updateManyHitCountByDatasetIdAndHashes\n                            \n                            \n                                    Abstract\n                                updateSegmentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        countSegmentsByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    countSegmentsByDocumentId(documentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:169\n                        \n                    \n\n\n            \n                \n                        统计某个文档的文档片段数量。\n动作: count\n目标: Segments\n条件: ByDocumentId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                文档片段的数量。\n动作: count\n目标: Segments\n条件: ByDocumentId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createManySegments\n                        \n                    \n                \n            \n            \n                \n                        \n                    createManySegments(data: Omit[], prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:50\n                        \n                    \n\n\n            \n                \n                        批量创建多个文档片段。\n动作: createMany\n目标: Segments\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含多个文档片段数据的数组，不包括 id、createdAt 和 updatedAt。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n动作: createMany\n目标: Segments\n条件: 无\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createManySegmentsAndReturn\n                        \n                    \n                \n            \n            \n                \n                        \n                    createManySegmentsAndReturn(data: Omit[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:39\n                        \n                    \n\n\n            \n                \n                        批量创建文档片段并返回结果。\n动作: createMany\n目标: Embeddings\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含多个文档片段的数据数组，不包括 id 和 createdAt。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                创建的文档片段数组。\n动作: createMany\n目标: Embeddings\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createSegment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSegment(data: Omit, prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:24\n                        \n                    \n\n\n            \n                \n                        创建一个新的文档片段。\n动作: create\n目标: Segment\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含文档片段数据，但不包括 id、createdAt 和 updatedAt。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                创建的文档片段。\n动作: create\n目标: Segment\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteManySegmentsByDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManySegmentsByDatasetId(datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:200\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 删除所有相关的文档片段。\n动作: delete\n目标: Segments\n条件: ByDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n动作: delete\n目标: Segments\n条件: ByDatasetId\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteManySegmentsByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManySegmentsByDocumentId(documentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:190\n                        \n                    \n\n\n            \n                \n                        根据文档 ID 删除所有相关的文档片段。\n动作: delete\n目标: Segments\n条件: ByDocumentId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的 ID。\n\n动作: delete\n目标: Segments\n条件: ByDocumentId\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSegmentById(id: string, prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:180\n                        \n                    \n\n\n            \n                \n                        根据片段 ID 删除单个文档片段。\n动作: delete\n目标: Segment\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要删除的文档片段 ID。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n动作: delete\n目标: Segment\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManyHashesByDatasetIdAndHashes\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyHashesByDatasetIdAndHashes(hashes: string[], datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:130\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 和节点哈希值数组查询相关的哈希值。\n动作: findMany\n目标: Hashes\n条件: ByDatasetIdAndHashes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hashes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n节点哈希值的数组。\n\n\n                                            \n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                一个包含匹配哈希值的数组。\n动作: findMany\n目标: Hashes\n条件: ByDatasetIdAndHashes\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManySegmentsByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsByDocumentId(documentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:64\n                        \n                    \n\n\n            \n                \n                        根据文档 ID 查询所有相关的文档片段。\n动作: findMany\n目标: Segments\n条件: ByDocumentId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                一个包含所有相关文档片段的数组。\n动作: findMany\n目标: Segments\n条件: ByDocumentId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManySegmentsByHashAndDatasetId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsByHashAndDatasetId(hashes: string[], datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:118\n                        \n                    \n\n\n            \n                \n                        根据哈希值数组和数据集 ID 查询相关的文档片段。\n动作: findMany\n目标: Segments\n条件: ByHashAndDatasetId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hashes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n节点哈希值的数组。\n\n\n                                            \n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                一个包含所有相关文档片段的数组。\n动作: findMany\n目标: Segments\n条件: ByHashAndDatasetId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManySegmentsPaginatedByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsPaginatedByDocumentId(documentId: string, querySegmentDto: QuerySegmentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:75\n                        \n                    \n\n\n            \n                \n                        根据文档集 ID 查询所有段落（带分页支持）。\n动作: findMany\n目标: Segments\n条件: WithPaginationByDocumentId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                querySegmentDto\n                                            \n                                                            QuerySegmentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                一个包含所有相关段落的数组。\n动作: findMany\n目标: Segments\n条件: WithPaginationByDocumentId\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findSegmentByDatasetDocumentAndHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSegmentByDatasetDocumentAndHash(datasetId: string, documentId: string, indexNodeHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:102\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID、文档 ID 和哈希值查询单个文档片段。\n动作: find\n目标: Segment\n条件: ByDatasetDocumentAndHash\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的 ID。\n\n\n                                            \n                                        \n                                        \n                                                indexNodeHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n节点索引的哈希值。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的文档片段或 null。\n动作: find\n目标: Segment\n条件: ByDatasetDocumentAndHash\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSegmentById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:89\n                        \n                    \n\n\n            \n                \n                        根据片段 ID 查询单个文档片段。\n动作: find\n目标: Segment\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档片段的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的文档片段或 null。\n动作: find\n目标: Segment\n条件: ById\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateManyHitCountByDatasetIdAndHashes\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateManyHitCountByDatasetIdAndHashes(hashes: string[], datasetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:158\n                        \n                    \n\n\n            \n                \n                        根据数据集 ID 和节点哈希值数组修改相关的文档片段命中次数。\n动作: updateMany\n目标: SegmentsHitCount\n条件: ByDatasetIdAndHashes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hashes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n节点哈希值的数组。\n\n\n                                            \n                                        \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n数据集的 ID。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                一个包含匹配哈希值的数组。\n动作: updateMany\n目标: SegmentsHitCount\n条件: ByDatasetIdAndHashes\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSegmentById(id: string, payload: Partial, prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/document-segment.repository.ts:142\n                        \n                    \n\n\n            \n                \n                        根据片段 ID 更新文档片段。\n动作: update\n目标: Segment\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要更新的文档片段 ID。\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含部分更新数据的对象。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n动作: update\n目标: Segment\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma, PrismaClient } from '@prisma/client';\n\nimport { PaginatedResult } from '@leek/interfaces';\n\nimport { LeekSegment } from '../../domain/segment';\nimport { QuerySegmentDto } from '../../dto/query-segment.dto';\n\n/**\n * 抽象的 DocumentSegment 仓库接口。\n * 提供创建、更新、查询和删除文档片段的方法，\n * 支持各种过滤条件和事务选项。\n */\nexport abstract class DocumentSegmentRepository {\n  /**\n   * 创建一个新的文档片段。\n   * @param data - 包含文档片段数据，但不包括 `id`、`createdAt` 和 `updatedAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   * @returns 创建的文档片段。\n   *\n   * 动作: create\n   * 目标: Segment\n   * 条件: 无\n   */\n  abstract createSegment(\n    data: Omit,\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 批量创建文档片段并返回结果。\n   * @param data - 包含多个文档片段的数据数组，不包括 `id` 和 `createdAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   * @returns 创建的文档片段数组。\n   *\n   * 动作: createMany\n   * 目标: Embeddings\n   * 条件: 无\n   */\n  abstract createManySegmentsAndReturn(data: Omit[]): Promise;\n\n  /**\n   * 批量创建多个文档片段。\n   * @param data - 包含多个文档片段数据的数组，不包括 `id`、`createdAt` 和 `updatedAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   *\n   * 动作: createMany\n   * 目标: Segments\n   * 条件: 无\n   */\n  abstract createManySegments(\n    data: Omit[],\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 根据文档 ID 查询所有相关的文档片段。\n   * @param documentId - 文档的 ID。\n   * @returns 一个包含所有相关文档片段的数组。\n   *\n   * 动作: findMany\n   * 目标: Segments\n   * 条件: ByDocumentId\n   */\n  abstract findManySegmentsByDocumentId(documentId: string): Promise;\n\n  /**\n   * 根据文档集 ID 查询所有段落（带分页支持）。\n   * @param datasetId - 文档的 ID。\n   * @returns 一个包含所有相关段落的数组。\n   *\n   * 动作: findMany\n   * 目标: Segments\n   * 条件: WithPaginationByDocumentId\n   */\n  abstract findManySegmentsPaginatedByDocumentId(\n    documentId: string,\n    querySegmentDto: QuerySegmentDto,\n  ): Promise>;\n\n  /**\n   * 根据片段 ID 查询单个文档片段。\n   * @param id - 文档片段的 ID。\n   * @returns 找到的文档片段或 null。\n   *\n   * 动作: find\n   * 目标: Segment\n   * 条件: ById\n   */\n  abstract findSegmentById(id: string): Promise>;\n\n  /**\n   * 根据数据集 ID、文档 ID 和哈希值查询单个文档片段。\n   * @param datasetId - 数据集的 ID。\n   * @param documentId - 文档的 ID。\n   * @param indexNodeHash - 节点索引的哈希值。\n   * @returns 找到的文档片段或 null。\n   *\n   * 动作: find\n   * 目标: Segment\n   * 条件: ByDatasetDocumentAndHash\n   */\n  abstract findSegmentByDatasetDocumentAndHash(\n    datasetId: string,\n    documentId: string,\n    indexNodeHash: string,\n  ): Promise>;\n\n  /**\n   * 根据哈希值数组和数据集 ID 查询相关的文档片段。\n   * @param hashes - 节点哈希值的数组。\n   * @param datasetId - 数据集的 ID。\n   * @returns 一个包含所有相关文档片段的数组。\n   *\n   * 动作: findMany\n   * 目标: Segments\n   * 条件: ByHashAndDatasetId\n   */\n  abstract findManySegmentsByHashAndDatasetId(hashes: string[], datasetId: string): Promise;\n\n  /**\n   * 根据数据集 ID 和节点哈希值数组查询相关的哈希值。\n   * @param hashes - 节点哈希值的数组。\n   * @param datasetId - 数据集的 ID。\n   * @returns 一个包含匹配哈希值的数组。\n   *\n   * 动作: findMany\n   * 目标: Hashes\n   * 条件: ByDatasetIdAndHashes\n   */\n  abstract findManyHashesByDatasetIdAndHashes(hashes: string[], datasetId: string): Promise;\n\n  /**\n   * 根据片段 ID 更新文档片段。\n   * @param id - 要更新的文档片段 ID。\n   * @param payload - 包含部分更新数据的对象。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   *\n   * 动作: update\n   * 目标: Segment\n   * 条件: ById\n   */\n  abstract updateSegmentById(\n    id: string,\n    payload: Partial,\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 根据数据集 ID 和节点哈希值数组修改相关的文档片段命中次数。\n   * @param hashes - 节点哈希值的数组。\n   * @param datasetId - 数据集的 ID。\n   * @returns 一个包含匹配哈希值的数组。\n   *\n   * 动作: updateMany\n   * 目标: SegmentsHitCount\n   * 条件: ByDatasetIdAndHashes\n   */\n  abstract updateManyHitCountByDatasetIdAndHashes(hashes: string[], datasetId: string);\n\n  /**\n   * 统计某个文档的文档片段数量。\n   * @param documentId - 文档的 ID。\n   * @returns 文档片段的数量。\n   *\n   * 动作: count\n   * 目标: Segments\n   * 条件: ByDocumentId\n   */\n  abstract countSegmentsByDocumentId(documentId: string): Promise;\n\n  /**\n   * 根据片段 ID 删除单个文档片段。\n   * @param id - 要删除的文档片段 ID。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   *\n   * 动作: delete\n   * 目标: Segment\n   * 条件: ById\n   */\n  abstract deleteSegmentById(id: string, prisma?: PrismaClient | Prisma.TransactionClient): Promise;\n\n  /**\n   * 根据文档 ID 删除所有相关的文档片段。\n   * @param documentId - 文档的 ID。\n   *\n   * 动作: delete\n   * 目标: Segments\n   * 条件: ByDocumentId\n   */\n  abstract deleteManySegmentsByDocumentId(documentId: string): Promise;\n\n  /**\n   * 根据数据集 ID 删除所有相关的文档片段。\n   * @param datasetId - 数据集的 ID。\n   *\n   * 动作: delete\n   * 目标: Segments\n   * 条件: ByDatasetId\n   */\n  abstract deleteManySegmentsByDatasetId(datasetId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentSegmentService.html":{"url":"injectables/DocumentSegmentService.html","title":"injectable - DocumentSegmentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentSegmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/services/document-segment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createSegment\n                            \n                            \n                                    \n                                    Async\n                                deleteSegmentById\n                            \n                            \n                                    Async\n                                disableSegmentById\n                            \n                            \n                                    Async\n                                enableSegmentById\n                            \n                            \n                                    Async\n                                findManySegmentsPaginatedByDocumentId\n                            \n                            \n                                    Async\n                                findSegmentById\n                            \n                            \n                                    \n                                    Async\n                                updateSegmentById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(documentRepository: DocumentRepository, documentSegmentRepository: DocumentSegmentRepository, embeddingRepository: EmbeddingRepository, jiebaKeywordService: JiebaKeywordService)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/services/document-segment.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        documentRepository\n                                                  \n                                                        \n                                                                        DocumentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        documentSegmentRepository\n                                                  \n                                                        \n                                                                        DocumentSegmentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        embeddingRepository\n                                                  \n                                                        \n                                                                        EmbeddingRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jiebaKeywordService\n                                                  \n                                                        \n                                                                        JiebaKeywordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createSegment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSegment(datasetId: string, documentId: string, createDocumentSegmentDto: CreateDocumentSegmentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/services/document-segment.service.ts:40\n                        \n                    \n\n\n            \n                \n                        创建文档分段\n根据提供的内容，生成新的文档分段，同时更新文档统计信息和创建嵌入。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    数据集 ID\n\n                                            \n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    文档 ID\n\n                                            \n                                        \n                                        \n                                                createDocumentSegmentDto\n                                            \n                                                            CreateDocumentSegmentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    分段创建 DTO\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                新创建的文档分段\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSegmentById(datasetId: string, documentId: string, segmentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/services/document-segment.service.ts:197\n                        \n                    \n\n\n            \n                \n                        删除文档分段\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    数据集 ID\n\n                                            \n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    文档 ID\n\n                                            \n                                        \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    分段 ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disableSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableSegmentById(segmentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/document-segment.service.ts:227\n                        \n                    \n\n\n            \n                \n                        禁用文档分段\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    分段 ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableSegmentById(segmentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/document-segment.service.ts:239\n                        \n                    \n\n\n            \n                \n                        启用文档分段\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    分段 ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManySegmentsPaginatedByDocumentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManySegmentsPaginatedByDocumentId(documentId: string, querySegmentDto?: QuerySegmentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/document-segment.service.ts:121\n                        \n                    \n\n\n            \n                \n                        查找文档的所有分段\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    文档 ID\n\n                                            \n                                        \n                                        \n                                                querySegmentDto\n                                            \n                                                            QuerySegmentDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                文档分段列表\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSegmentById(segmentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/document-segment.service.ts:105\n                        \n                    \n\n\n            \n                \n                        根据 ID 查找文档分段\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    分段 ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的分段或 null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateSegmentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSegmentById(datasetId: string, documentId: string, segmentId: string, updateDocumentSegmentDto: UpdateDocumentSegmentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/services/document-segment.service.ts:137\n                        \n                    \n\n\n            \n                \n                        更新文档分段\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    数据集 ID\n\n                                            \n                                        \n                                        \n                                                documentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    文档 ID\n\n                                            \n                                        \n                                        \n                                                segmentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    分段 ID\n\n                                            \n                                        \n                                        \n                                                updateDocumentSegmentDto\n                                            \n                                                            UpdateDocumentSegmentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    分段更新 DTO\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DocumentSegmentService.name)\n                    \n                \n                    \n                        \n                                Defined in src/datasets/services/document-segment.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, InternalServerErrorException, Logger } from '@nestjs/common';\n\nimport { Transactional } from '@leek/common';\nimport { EMBEDDING_MODEL_NAME, EMBEDDING_PROVIDER_NAME } from '@leek/constants';\nimport { PaginatedResult } from '@leek/interfaces';\nimport { uuid, createHash, encodeAsync } from '@leek/utils';\n\nimport { JiebaKeywordService } from './jieba-keyword.service';\nimport { LeekSegment } from '../domain/segment';\nimport { CreateDocumentSegmentDto } from '../dto/create-segment.dto';\nimport { QuerySegmentDto } from '../dto/query-segment.dto';\nimport { UpdateDocumentSegmentDto } from '../dto/update-segment.dto';\nimport { DocumentSegmentRepository } from '../infrastructure/persistence/document-segment.repository';\nimport { DocumentRepository } from '../infrastructure/persistence/document.repository';\nimport { EmbeddingRepository } from '../infrastructure/persistence/embedding.repository';\nimport { generateVectorClassPrefixByDatasetId } from '../shared/utils/generate-vector-class-prefix-by-dataset-id.util';\n\n@Injectable()\nexport class DocumentSegmentService {\n  private readonly logger = new Logger(DocumentSegmentService.name);\n\n  constructor(\n    private readonly documentRepository: DocumentRepository,\n    private readonly documentSegmentRepository: DocumentSegmentRepository,\n    private readonly embeddingRepository: EmbeddingRepository,\n    private readonly jiebaKeywordService: JiebaKeywordService,\n  ) {}\n\n  /**\n   * 创建文档分段\n   *\n   * 根据提供的内容，生成新的文档分段，同时更新文档统计信息和创建嵌入。\n   *\n   * @param {string} datasetId 数据集 ID\n   * @param {string} documentId 文档 ID\n   * @param {CreateDocumentSegmentDto} createDocumentSegmentDto 分段创建 DTO\n   * @returns {Promise} 新创建的文档分段\n   */\n  @Transactional()\n  async createSegment(\n    datasetId: string,\n    documentId: string,\n    createDocumentSegmentDto: CreateDocumentSegmentDto,\n  ): Promise {\n    const { content } = createDocumentSegmentDto;\n    const indexNodeHash = createHash(content);\n\n    // 检查是否存在相同哈希的分段\n    const existingSegment = await this.documentSegmentRepository.findSegmentByDatasetDocumentAndHash(\n      datasetId,\n      documentId,\n      indexNodeHash,\n    );\n\n    if (existingSegment) {\n      throw new BadRequestException('已存在相同哈希值的文档分段。');\n    }\n\n    try {\n      const maxPosition = await this.documentSegmentRepository.countSegmentsByDocumentId(documentId);\n      const tokens = await encodeAsync(content);\n      const document = await this.documentRepository.findDocumentById(documentId);\n\n      // 更新文档统计信息和生成嵌入\n      const createdSegment = await this.documentSegmentRepository.createSegment({\n        ...createDocumentSegmentDto,\n        datasetId,\n        documentId,\n        position: maxPosition + 1,\n        wordCount: content.length,\n        tokens,\n        keywords: this.jiebaKeywordService.extractKeywordsFromText(content),\n        indexNodeId: uuid(),\n        indexNodeHash,\n      });\n\n      await this.documentRepository.updateDocumentById(documentId, {\n        wordCount: document.wordCount + content.length,\n        tokens: document.tokens + tokens,\n      });\n\n      await this.embeddingRepository.registerEmbeddings([\n        {\n          id: uuid(),\n          classPrefix: generateVectorClassPrefixByDatasetId(datasetId),\n          hash: indexNodeHash,\n          modelName: EMBEDDING_MODEL_NAME,\n          providerName: EMBEDDING_PROVIDER_NAME,\n        },\n      ]);\n\n      return createdSegment;\n    } catch (error) {\n      this.logger.error('创建文档分段失败。', error.stack);\n      throw new InternalServerErrorException('创建文档分段时发生错误，请稍后重试。');\n    }\n  }\n\n  /**\n   * 根据 ID 查找文档分段\n   *\n   * @param {string} segmentId 分段 ID\n   * @returns {Promise} 找到的分段或 null\n   */\n  async findSegmentById(segmentId: string): Promise> {\n    const segment = await this.documentSegmentRepository.findSegmentById(segmentId);\n\n    if (!segment) {\n      throw new BadRequestException(`ID 为 ${segmentId} 的文档分段不存在。`);\n    }\n\n    return segment;\n  }\n\n  /**\n   * 查找文档的所有分段\n   *\n   * @param {string} documentId 文档 ID\n   * @returns {Promise} 文档分段列表\n   */\n  async findManySegmentsPaginatedByDocumentId(\n    documentId: string,\n    querySegmentDto?: QuerySegmentDto,\n  ): Promise> {\n    return await this.documentSegmentRepository.findManySegmentsPaginatedByDocumentId(documentId, querySegmentDto);\n  }\n\n  /**\n   * 更新文档分段\n   *\n   * @param {string} datasetId 数据集 ID\n   * @param {string} documentId 文档 ID\n   * @param {string} segmentId 分段 ID\n   * @param {UpdateDocumentSegmentDto} updateDocumentSegmentDto 分段更新 DTO\n   */\n  @Transactional()\n  async updateSegmentById(\n    datasetId: string,\n    documentId: string,\n    segmentId: string,\n    updateDocumentSegmentDto: UpdateDocumentSegmentDto,\n  ): Promise {\n    const { content } = updateDocumentSegmentDto;\n    const indexNodeHash = createHash(content);\n\n    const existingSegment = await this.documentSegmentRepository.findSegmentById(segmentId);\n\n    if (!existingSegment) {\n      throw new BadRequestException('文档分段不存在，或内容未发生变化。');\n    }\n\n    try {\n      const tokens = await encodeAsync(content);\n      const document = await this.documentRepository.findDocumentById(documentId);\n\n      // update segment, document, and embeddings\n      await this.documentSegmentRepository.updateSegmentById(segmentId, {\n        ...updateDocumentSegmentDto,\n        tokens,\n        wordCount: content.length,\n        indexNodeHash,\n      });\n\n      await this.documentRepository.updateDocumentById(documentId, {\n        wordCount: document.wordCount - existingSegment.wordCount + content.length,\n        tokens: document.tokens - existingSegment.tokens + tokens,\n      });\n\n      await this.embeddingRepository.deleteManyEmbeddingsByHashAndClassPrefix(\n        existingSegment.indexNodeHash,\n        generateVectorClassPrefixByDatasetId(datasetId),\n      );\n\n      await this.embeddingRepository.registerEmbeddings([\n        {\n          id: uuid(),\n          classPrefix: generateVectorClassPrefixByDatasetId(datasetId),\n          hash: indexNodeHash,\n          modelName: EMBEDDING_MODEL_NAME,\n          providerName: EMBEDDING_PROVIDER_NAME,\n        },\n      ]);\n    } catch (error) {\n      this.logger.error('更新文档分段失败。', error.stack);\n      throw new InternalServerErrorException('更新文档分段时发生错误，请稍后重试。');\n    }\n  }\n\n  /**\n   * 删除文档分段\n   *\n   * @param {string} datasetId 数据集 ID\n   * @param {string} documentId 文档 ID\n   * @param {string} segmentId 分段 ID\n   */\n  @Transactional()\n  async deleteSegmentById(datasetId: string, documentId: string, segmentId: string): Promise {\n    const segment = await this.documentSegmentRepository.findSegmentById(segmentId);\n\n    if (!segment) {\n      throw new BadRequestException('未找到要删除的文档分段。');\n    }\n    try {\n      const document = await this.documentRepository.findDocumentById(documentId);\n      await this.embeddingRepository.deleteManyEmbeddingsByHashAndClassPrefix(\n        segment.indexNodeHash,\n        generateVectorClassPrefixByDatasetId(datasetId),\n      );\n\n      await this.documentSegmentRepository.deleteSegmentById(segmentId);\n\n      await this.documentRepository.updateDocumentById(documentId, {\n        wordCount: document.wordCount - segment.wordCount,\n        tokens: document.tokens - segment.tokens,\n      });\n    } catch (error) {\n      this.logger.error(`删除 ID 为 ${segmentId} 的文档分段失败。`, error.stack);\n      throw new InternalServerErrorException('删除文档分段时发生错误，请稍后重试。');\n    }\n  }\n\n  /**\n   * 禁用文档分段\n   *\n   * @param {string} segmentId 分段 ID\n   */\n  async disableSegmentById(segmentId: string) {\n    await this.documentSegmentRepository.updateSegmentById(segmentId, {\n      enabled: false,\n      disabledAt: new Date(),\n    });\n  }\n\n  /**\n   * 启用文档分段\n   *\n   * @param {string} segmentId 分段 ID\n   */\n  async enableSegmentById(segmentId: string) {\n    await this.documentSegmentRepository.updateSegmentById(segmentId, {\n      enabled: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmbeddingMapper.html":{"url":"classes/EmbeddingMapper.html","title":"class - EmbeddingMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmbeddingMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/mappers/embedding.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: Embeddings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/embedding.mapper.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            Embeddings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeekEmbedding\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: LeekEmbedding)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/mappers/embedding.mapper.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            LeekEmbedding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Embeddings\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Embeddings } from '@prisma/client';\n\nimport { EMBEDDING_MODEL_NAME, EMBEDDING_PROVIDER_NAME } from '@leek/constants';\n\nimport { LeekEmbedding } from '../../../domain/embedding';\n\nexport class EmbeddingMapper {\n  static toDomain(raw: Embeddings): LeekEmbedding {\n    const domainEntity = new LeekEmbedding();\n\n    domainEntity.id = raw.id;\n    domainEntity.classPrefix = raw.classPrefix;\n    domainEntity.hash = raw.hash;\n    domainEntity.modelName = raw.modelName;\n    domainEntity.providerName = raw.providerName;\n\n    domainEntity.createdAt = raw.createdAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: LeekEmbedding): Embeddings {\n    const persistenceEntity = {} as Embeddings;\n\n    persistenceEntity.classPrefix = domainEntity.classPrefix;\n    persistenceEntity.hash = domainEntity.hash;\n    persistenceEntity.modelName = domainEntity.modelName || EMBEDDING_MODEL_NAME;\n    persistenceEntity.providerName = domainEntity.providerName || EMBEDDING_PROVIDER_NAME;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmbeddingRelationalRepository.html":{"url":"injectables/EmbeddingRelationalRepository.html","title":"injectable - EmbeddingRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmbeddingRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/repositories/embedding.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                idColumn\n                            \n                            \n                                    Private\n                                    Readonly\n                                tableName\n                            \n                            \n                                    Private\n                                    Readonly\n                                vectorColumnName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEmbedding\n                            \n                            \n                                    Async\n                                createManyEmbeddingsAndReturn\n                            \n                            \n                                    Async\n                                deleteEmbeddingById\n                            \n                            \n                                    Async\n                                deleteManyEmbeddingsByClassPrefix\n                            \n                            \n                                    Async\n                                deleteManyEmbeddingsByHashAndClassPrefix\n                            \n                            \n                                    Async\n                                findEmbeddingByHash\n                            \n                            \n                                    Async\n                                registerEmbeddings\n                            \n                            \n                                    Async\n                                similaritySearchVectorWithScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, configureService: ConfigureAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configureService\n                                                  \n                                                        \n                                                                        ConfigureAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createEmbedding\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmbedding(data: LeekEmbedding)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekEmbedding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createManyEmbeddingsAndReturn\n                        \n                    \n                \n            \n            \n                \n                        \n                    createManyEmbeddingsAndReturn(data: LeekEmbedding[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekEmbedding[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteEmbeddingById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmbeddingById(id: LeekEmbedding)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            LeekEmbedding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteManyEmbeddingsByClassPrefix\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManyEmbeddingsByClassPrefix(classPrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteManyEmbeddingsByHashAndClassPrefix\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManyEmbeddingsByHashAndClassPrefix(hash: string, classPrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmbeddingByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmbeddingByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerEmbeddings\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEmbeddings(embeddings: LeekEmbedding[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                embeddings\n                                            \n                                                            LeekEmbedding[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        similaritySearchVectorWithScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    similaritySearchVectorWithScore(vector: number[], classPrefix: string, k: number, scoreThreshold?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vector\n                                            \n                                                            number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                k\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                scoreThreshold\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        idColumn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'id'\n                    \n                \n                    \n                        \n                                Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Embeddings'\n                    \n                \n                    \n                        \n                                Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        vectorColumnName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'embedding'\n                    \n                \n                    \n                        \n                                Defined in src/datasets/infrastructure/persistence/repositories/embedding.repository.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Prisma } from '@prisma/client';\n\nimport { ConfigureAdapter } from '@leek/configure';\nimport { PrismaService } from '@leek/prisma';\n\nimport { LeekEmbedding } from '../../../domain/embedding';\nimport { EmbeddingWithMetadata } from '../../../shared/interfaces/embedding-with-metadata';\nimport { EmbeddingRepository } from '../embedding.repository';\nimport { EmbeddingMapper } from '../mappers/embedding.mapper';\n\n// type EmbeddingsSelectColumns = {\n//   id: typeof PrismaVectorStore.IdColumn;\n//   content: typeof PrismaVectorStore.ContentColumn;\n//   hash: true;\n// };\n\n@Injectable()\nexport class EmbeddingRelationalRepository implements EmbeddingRepository {\n  private readonly idColumn = 'id';\n  private readonly tableName = 'Embeddings';\n  private readonly vectorColumnName = 'embedding';\n\n  // private vectorStore: PrismaVectorStore\n  // >;\n\n  constructor(\n    private readonly prismaService: PrismaService,\n    private readonly configureService: ConfigureAdapter,\n  ) {\n    // this.vectorStore = PrismaVectorStore.withModel(this.prismaService).create(\n    //   initEmbeddings(),\n    //   {\n    //     prisma: Prisma,\n    //     tableName: this.tableName,\n    //     vectorColumnName: this.vectorColumnName,\n    //     columns: {\n    //       id: PrismaVectorStore.IdColumn,\n    //       content: PrismaVectorStore.ContentColumn,\n    //       hash: true,\n    //     },\n    //   },\n    // );\n  }\n\n  async createEmbedding(data: LeekEmbedding): Promise {\n    const embedding = await this.prismaService.prisma.embeddings.create({\n      data: EmbeddingMapper.toPersistence(data),\n    });\n\n    return EmbeddingMapper.toDomain(embedding);\n  }\n\n  async registerEmbeddings(embeddings: LeekEmbedding[]): Promise {\n    const queries = embeddings.map((embedding) => {\n      const vectorString = `[${embedding.embedding.join(',')}]`;\n      return this.prismaService.prisma.$executeRaw(\n        Prisma.sql`\n          INSERT INTO \"Embeddings\" (\"id\", \"classPrefix\", \"hash\", \"embedding\", \"modelName\", \"providerName\")\n          VALUES (${embedding.id}, ${embedding.classPrefix}, ${embedding.hash}, ${vectorString}::vector, ${embedding.modelName}, ${embedding.providerName})\n          ON CONFLICT (\"classPrefix\", \"hash\")\n          DO UPDATE SET \"embedding\" = EXCLUDED.\"embedding\";\n        `,\n      );\n    });\n    await this.prismaService.prisma.$transaction(queries);\n  }\n\n  async similaritySearchVectorWithScore(\n    vector: number[],\n    classPrefix: string,\n    k: number,\n    scoreThreshold?: number,\n  ): Promise {\n    const embeddings = await this.prismaService.prisma.$queryRaw`\nSELECT e.\"hash\",\n       ds.\"content\" AS \"content\", \n       ds.\"answer\" AS \"answer\",\n       ds.\"keywords\" AS \"keywords\",\n       ds.\"wordCount\" AS \"wordCount\",\n       ds.\"tokens\" AS \"tokens\",\n       d.\"docForm\" as \"docForm\",\n       1 - (e.\"embedding\"  ${vector}::vector) AS \"_distance\"\nFROM \"Embeddings\" e\nJOIN \"DocumentSegment\" ds\n  ON e.\"hash\" = ds.\"indexNodeHash\" AND e.\"classPrefix\" = ${classPrefix}\nJOIN \"Document\" d\n  ON ds.\"documentId\" = d.\"id\"\nWHERE e.\"classPrefix\" = ${classPrefix}\n  AND ds.\"enabled\" = TRUE\n  AND d.\"enabled\" = TRUE\n  AND d.\"archived\" = FALSE\n  ${scoreThreshold !== undefined ? Prisma.sql`AND 1 - (e.\"embedding\"  ${vector}::vector) >= ${scoreThreshold}` : Prisma.sql``}\nORDER BY \"_distance\" DESC\nLIMIT ${k};\n`;\n    return embeddings;\n  }\n\n  async createManyEmbeddingsAndReturn(data: LeekEmbedding[]): Promise {\n    return await this.prismaService.prisma.embeddings.createManyAndReturn({\n      data: data.map(EmbeddingMapper.toPersistence),\n    });\n  }\n\n  async findEmbeddingByHash(hash: string): Promise> {\n    const entity = await this.prismaService.prisma.embeddings.findFirst({\n      where: { hash },\n    });\n\n    return entity ? EmbeddingMapper.toDomain(entity) : null;\n  }\n\n  async deleteEmbeddingById(id: LeekEmbedding['id']): Promise {\n    await this.prismaService.prisma.embeddings.delete({\n      where: { id },\n    });\n  }\n\n  async deleteManyEmbeddingsByHashAndClassPrefix(hash: string, classPrefix: string): Promise {\n    await this.prismaService.prisma.embeddings.deleteMany({\n      where: { hash, classPrefix },\n    });\n  }\n\n  async deleteManyEmbeddingsByClassPrefix(classPrefix: string): Promise {\n    await this.prismaService.prisma.embeddings.deleteMany({\n      where: { classPrefix },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmbeddingRepository.html":{"url":"classes/EmbeddingRepository.html","title":"class - EmbeddingRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmbeddingRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/embedding.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                抽象的 Embedding 仓库接口。\n提供创建、注册、查询、删除嵌入向量以及进行相似性搜索的方法。\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createEmbedding\n                            \n                            \n                                    Abstract\n                                createManyEmbeddingsAndReturn\n                            \n                            \n                                    Abstract\n                                deleteEmbeddingById\n                            \n                            \n                                    Abstract\n                                deleteManyEmbeddingsByClassPrefix\n                            \n                            \n                                    Abstract\n                                deleteManyEmbeddingsByHashAndClassPrefix\n                            \n                            \n                                    Abstract\n                                findEmbeddingByHash\n                            \n                            \n                                    Abstract\n                                registerEmbeddings\n                            \n                            \n                                    Abstract\n                                similaritySearchVectorWithScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createEmbedding\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmbedding(data: Omit, prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:21\n                        \n                    \n\n\n            \n                \n                        创建一个新的嵌入向量。\n动作: create\n目标: Embedding\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n嵌入向量的数据，不包括 id 和 createdAt。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                创建的嵌入向量。\n动作: create\n目标: Embedding\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createManyEmbeddingsAndReturn\n                        \n                    \n                \n            \n            \n                \n                        \n                    createManyEmbeddingsAndReturn(data: Omit[], prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:36\n                        \n                    \n\n\n            \n                \n                        批量创建嵌入向量并返回结果。\n动作: createMany\n目标: Embeddings\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含多个嵌入向量的数据数组，不包括 id 和 createdAt。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                创建的嵌入向量数组。\n动作: createMany\n目标: Embeddings\n条件: 无\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteEmbeddingById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteEmbeddingById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:80\n                        \n                    \n\n\n            \n                \n                        根据嵌入向量的 ID 删除嵌入向量。\n动作: delete\n目标: Embedding\n条件: ById\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n嵌入向量的 ID。\n\n动作: delete\n目标: Embedding\n条件: ById\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteManyEmbeddingsByClassPrefix\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManyEmbeddingsByClassPrefix(classPrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:106\n                        \n                    \n\n\n            \n                \n                        根据类前缀删除嵌入向量。\n动作: deleteMany\n目标: Embeddings\n条件: ByClassPrefix\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                classPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n类前缀。\n\n动作: deleteMany\n目标: Embeddings\n条件: ByClassPrefix\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteManyEmbeddingsByHashAndClassPrefix\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteManyEmbeddingsByHashAndClassPrefix(hash: string, classPrefix: string, prisma?: PrismaClient | Prisma.TransactionClient)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:92\n                        \n                    \n\n\n            \n                \n                        根据哈希值和类前缀删除嵌入向量。\n动作: deleteMany\n目标: Embeddings\n条件: ByHashAndClassPrefix\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n嵌入向量的哈希值。\n\n\n                                            \n                                        \n                                        \n                                                classPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n类前缀。\n\n\n                                            \n                                        \n                                        \n                                                prisma\n                                            \n                                                        PrismaClient | Prisma.TransactionClient\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选的 Prisma 客户端用于事务。\n\n动作: deleteMany\n目标: Embeddings\n条件: ByHashAndClassPrefix\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findEmbeddingByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmbeddingByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:70\n                        \n                    \n\n\n            \n                \n                        根据哈希值查询嵌入向量。\n动作: find\n目标: Embedding\n条件: ByHash\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n嵌入向量的哈希值。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                找到的嵌入向量或 null。\n动作: find\n目标: Embedding\n条件: ByHash\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        registerEmbeddings\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEmbeddings(data: LeekEmbedding[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:59\n                        \n                    \n\n\n            \n                \n                        注册嵌入向量。\n动作: register\n目标: Embeddings\n条件: 无\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekEmbedding[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n嵌入向量。\n\n动作: register\n目标: Embedding\n条件: 无\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        similaritySearchVectorWithScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    similaritySearchVectorWithScore(vector: number[], classPrefix: string, k: number, scoreThreshold?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/infrastructure/persistence/embedding.repository.ts:133\n                        \n                    \n\n\n            \n                \n                        执行相似度搜索向量带分数。\n动作: similaritySearch\n目标: Vector\n条件: WithScore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vector\n                                            \n                                                            number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                classPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                k\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n返回的最相似嵌入向量的数量（可选，默认返回全部匹配）。\n\n\n                                            \n                                        \n                                        \n                                                scoreThreshold\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                一个包含匹配文档的数组。\n动作: similaritySearch\n目标: Documents\n条件: ByQueryAndFilter\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma, PrismaClient } from '@prisma/client';\n\nimport { LeekEmbedding } from '../../domain/embedding';\nimport { EmbeddingWithMetadata } from '../../shared/interfaces/embedding-with-metadata';\n\n/**\n * 抽象的 Embedding 仓库接口。\n * 提供创建、注册、查询、删除嵌入向量以及进行相似性搜索的方法。\n */\nexport abstract class EmbeddingRepository {\n  /**\n   * 创建一个新的嵌入向量。\n   * @param data - 嵌入向量的数据，不包括 `id` 和 `createdAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   * @returns 创建的嵌入向量。\n   *\n   * 动作: create\n   * 目标: Embedding\n   * 条件: 无\n   */\n  abstract createEmbedding(\n    data: Omit,\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 批量创建嵌入向量并返回结果。\n   * @param data - 包含多个嵌入向量的数据数组，不包括 `id` 和 `createdAt`。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   * @returns 创建的嵌入向量数组。\n   *\n   * 动作: createMany\n   * 目标: Embeddings\n   * 条件: 无\n   */\n  abstract createManyEmbeddingsAndReturn(\n    data: Omit[],\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 注册嵌入向量。\n   * @param data - 嵌入向量。\n   *\n   * 动作: register\n   * 目标: Embedding\n   * 条件: 无\n   */\n  // abstract registerEmbedding(data: LeekEmbedding): Promise;\n\n  /**\n   * 注册嵌入向量。\n   * @param data - 嵌入向量数组。\n   *\n   * 动作: register\n   * 目标: Embeddings\n   * 条件: 无\n   */\n  abstract registerEmbeddings(data: LeekEmbedding[]): Promise;\n\n  /**\n   * 根据哈希值查询嵌入向量。\n   * @param hash - 嵌入向量的哈希值。\n   * @returns 找到的嵌入向量或 null。\n   *\n   * 动作: find\n   * 目标: Embedding\n   * 条件: ByHash\n   */\n  abstract findEmbeddingByHash(hash: string): Promise>;\n\n  /**\n   * 根据嵌入向量的 ID 删除嵌入向量。\n   * @param id - 嵌入向量的 ID。\n   *\n   * 动作: delete\n   * 目标: Embedding\n   * 条件: ById\n   */\n  abstract deleteEmbeddingById(id: string): Promise;\n\n  /**\n   * 根据哈希值和类前缀删除嵌入向量。\n   * @param hash - 嵌入向量的哈希值。\n   * @param classPrefix - 类前缀。\n   * @param prisma - 可选的 Prisma 客户端用于事务。\n   *\n   * 动作: deleteMany\n   * 目标: Embeddings\n   * 条件: ByHashAndClassPrefix\n   */\n  abstract deleteManyEmbeddingsByHashAndClassPrefix(\n    hash: string,\n    classPrefix: string,\n    prisma?: PrismaClient | Prisma.TransactionClient,\n  ): Promise;\n\n  /**\n   * 根据类前缀删除嵌入向量。\n   * @param classPrefix - 类前缀。\n   *\n   * 动作: deleteMany\n   * 目标: Embeddings\n   * 条件: ByClassPrefix\n   */\n  abstract deleteManyEmbeddingsByClassPrefix(classPrefix: string): Promise;\n\n  /**\n   * 执行相似性搜索。\n   * @param query - 查询字符串。\n   * @param k - 返回的最相似嵌入向量的数量（可选，默认返回全部匹配）。\n   * @param filter - 可选的过滤条件，用于限定搜索范围。\n   * @returns 一个包含匹配文档的数组。\n   *\n   * 动作: similaritySearch\n   * 目标: Documents\n   * 条件: ByQueryAndFilter\n   */\n  // abstract similaritySearch(query: string, k?: number, filter?: PrismaSqlFilter): Promise;\n\n  /**\n   * 执行相似度搜索向量带分数。\n   * @param vector - 向量\n   * @param classPrefix - 类前缀。\n   * @param k - 返回的最相似嵌入向量的数量（可选，默认返回全部匹配）。\n   * @param scoreThreshold 匹配分数的最低阈值，仅分数高于该值的结果会被返回\n   * @returns 一个包含匹配文档的数组。\n   *\n   * 动作: similaritySearch\n   * 目标: Vector\n   * 条件: WithScore\n   */\n  abstract similaritySearchVectorWithScore(\n    vector: number[],\n    classPrefix: string,\n    k: number,\n    scoreThreshold?: number,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmbeddingWithMetadata.html":{"url":"interfaces/EmbeddingWithMetadata.html","title":"interface - EmbeddingWithMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmbeddingWithMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/shared/interfaces/embedding-with-metadata.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _distance\n                                        \n                                \n                                \n                                        \n                                            answer\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            docForm\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/datasets/shared/interfaces/embedding-with-metadata.ts:8\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        docForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        docForm:         IndexEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IndexEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IndexEnum } from '@leek/constants';\n\nexport interface EmbeddingWithMetadata {\n  content: string;\n  answer: string;\n  docForm: IndexEnum;\n  hash: string;\n  _distance: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponseDto.html":{"url":"classes/ErrorResponseDto.html","title":"class - ErrorResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/error-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                error\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '请求的数据无效。', description: '更详细的错误描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/error-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Bad Request', description: '错误信息的简短描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/error-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 400, description: 'HTTP 状态码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/error-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ErrorResponseDto {\n  @ApiProperty({ example: 400, description: 'HTTP 状态码' })\n  statusCode: number;\n\n  @ApiProperty({ example: 'Bad Request', description: '错误信息的简短描述' })\n  message: string;\n\n  @ApiProperty({\n    example: '请求的数据无效。',\n    description: '更详细的错误描述',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/errors.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/errors.interceptor.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, HttpException, Injectable, NestInterceptor } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorsInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((error) => {\n        if (error instanceof HttpException) {\n          return Promise.resolve({\n            code: error.getStatus(),\n            message: error.getResponse(),\n          });\n        }\n        if (error.code && error.details) {\n          return Promise.resolve({\n            code: error.code,\n            message: error.details,\n          });\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExampleController.html":{"url":"controllers/ExampleController.html","title":"controller - ExampleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/controllers/example.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                example\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                excel\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                generateQaDocumentFromTextAndLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        excel\n                        \n                    \n                \n            \n            \n                \n                        \n                    excel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/example.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        generateQaDocumentFromTextAndLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateQaDocumentFromTextAndLanguage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateQaDocumentFromTextAndLanguage')@Version('1')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/example.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, Post, Version } from '@nestjs/common';\nimport { ApiTags, ApiExcludeController } from '@nestjs/swagger';\n\nimport { ConfigureAdapter } from '@leek/configure';\nimport { COSLoader } from '@leek/langchain';\n\nimport { LLMGeneratorService } from '../services/llm-generator.service';\n\n@ApiExcludeController()\n@ApiTags('测试')\n@Controller('example')\nexport class ExampleController {\n  constructor(\n    private readonly LLMGeneratorService: LLMGeneratorService,\n    private readonly configureService: ConfigureAdapter,\n  ) {}\n\n  @Post('generateQaDocumentFromTextAndLanguage')\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  async generateQaDocumentFromTextAndLanguage() {\n    return this.LLMGeneratorService.generateQaDocumentFromTextAndLanguage(\n      `义乌市，位于中国浙江省，是一个著名的旅游和商业城市。这里有许多值得一游的景点，包括南山公园、福田湿地公园、开心谷、松瀑山风景区、威尼斯水城、绣湖公园、桃花坞、天龙风景区等。此外，义乌中国国际商贸城购物旅游区和义乌佛堂古镇也是游客们的热门选择。在这些地方，你可以深入体验当地的文化和风俗，了解其丰富的历史和传统。\n\n义乌市也是美食的天堂，有许多特色美食等待你的品尝。其中包括糖烊、三分饼、义乌拉面、佛堂千张面、上溪牛杂汤、义乌腊肠、豆皮素包和义亭油酥等。这些美食各具特色，口感独特，让人回味无穷。\n\n义乌市的夜市也非常有名，其中最大的是宾王夜市，位于义乌三挺路1号。这里有800多个摊位，包括百货摊位、小吃摊位及便民服务摊位。此外，青口夜市也是一个热门的夜市，吸引了本地、外地甚至世界各地的游客来此感受人间烟火气。\n\nChinagoodshinagoods平台是一款数字化贸易综合服务平台，它集中发挥义乌小商品市场的整体资源优势，无缝对接线上线下渠道，帮助用户一键触达全球小商品。无论你是经营户、生产厂家、采购商还是贸易服务商，只要有问题就上Chinagoods，让贸易更简单，让义乌市场更具竞争力和发展活力。\n\n义乌在国际贸易中具有重要地位。它是全球最大的小商品批发市场之一，每年吸引来自全球各地的商人前来采购。这使得义乌成为连接国内和国际贸易的重要平台。此外，义乌市场是连接国内国际贸易供应链的重要平台，处于全球小商品供应链的关键节点，对畅通内循环、提升外循环，服务“双循环”新格局具有举足轻重的地位。\n\n浙江中国小商品城集团股份有限公司（简称“义乌商城集团”），创建于1993年12月，系国有控股上市企业。公司运营全球最大的小商品批发市场——义乌中国小商品城，市场现有营业面积640余万平方米，商位7. 5万个，经营26个大类、210万个单品，与全球230多个国家和地区有贸易往来。公司致力于为210多万家中小微企业搭建共享式贸易服务平台，在推动市场主业发展的同时，大力发展信息数据、进口贸易、仓储物流、国际拓展、供应链金融、酒店管理、物业房产、会展旅游等相关行业，努力成为赋能市场大众贸易的全球商贸领军企业，加速打造“全球一流国际贸易综合服务商”。\n\n义乌电商发展情况非常活跃。近年来，义乌电商交易额不断增长，跨境电商也发展迅速，第三方平台账号数量不断增加。义乌的电商产业已经形成了较为完整的产业链，涵盖了产品研发、生产、销售、物流等多个环节。同时，义乌的电商服务也日益完善，包括仓储、物流、支付、客服等方面的服务。\n\n义乌是全球最大的小商品集散中心，也是中国电商的重要发源地之一。近年来，随着直播电商的兴起，义乌的直播电商也得到了快速发展。义乌直播电商行业的发展情况可以从以下几个方面来看：市场规模不断扩大、产业链不断完善、品牌影响力不断提升。\n\n义乌电商供应链企业主要集中在义乌国际商贸城周边区域。以下是一些比较集中的地点：义乌国际商贸城、义乌幸福里电子商务区、义乌青口电子商务区。\n\n义乌的库存批发市场有很多，以下是一些比较知名的市场：义乌金福源货批发市场、义乌五爱库存街、义乌宾王服装货批发市场、义乌梅湖库存贸易专业街。\n\n义乌是一个充满活力和机遇的城市，对于想要创业的人来说，是一个非常适合的地方。这里有优越的商业环境、大市场需求、相对较低的成本、政府的支持以及发达的社交网络。\n\n义乌创业环境和其他地方相比，有以下优势：地理位置优越、制造业发达、市场需求大、成本相对较低、政府支持、社交网络发达。\n\n义乌是一个全球知名的小商品集散中心，有许多适合创业和发展的行业。以下是一些可能适合的领域：小商品批发、跨境电商、制造业、服务业。\n\n义乌市政府对大学生到义乌创业提供了以下政策扶持：创业补贴、创业担保贷款、免费办公场所、免费培训、创业导师帮扶、税收优惠。\n\nChinagoods和义乌购都是属于小商品城的平台，但它们有一些区别。总体来说，Chinagoods更注重履约和服务环节，而义乌购更注重商品展示和交易。\n`,\n      'china',\n    );\n  }\n\n  @Get()\n  async excel() {\n    const loader = new COSLoader({\n      SecretId: this.configureService.TENCENT.SECRET_ID,\n      SecretKey: this.configureService.TENCENT.SECRET_KEY,\n      Bucket: this.configureService.TENCENT.COS_BUCKET,\n      Region: this.configureService.TENCENT.COS_REGION,\n      Key: 'leek/upload_files/52f9bfc0-6c2b-41e7-a396-bb43b3d7dfc9.xlsx',\n    });\n    const docs = await loader.load();\n\n    console.log(docs, '-->-');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findFileById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadTextFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '根据ID获取指定文件信息'})@ApiParam({name: 'id', description: '要检索的文件的UUID'})@ApiOkResponse({description: '返回指定ID的文件信息。', type: LeekFile})\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File, uploadFileDto: UploadFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload_file')@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '上传文件到腾讯云 COS'})@ApiCreatedResponse({description: '文件已成功上传。', type: LeekFile})@ApiConsumes('multipart/form-data')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uploadFileDto\n                                            \n                                                            UploadFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadTextFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadTextFile(UploadTextFileDto: UploadTextFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload_text_file')@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '上传文本到腾讯云 COS'})@ApiCreatedResponse({description: '文件已成功上传。', type: LeekFile})\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                UploadTextFileDto\n                                            \n                                                            UploadTextFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  UploadedFile,\n  UseInterceptors,\n  HttpCode,\n  HttpStatus,\n  Version,\n  ParseUUIDPipe,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiOperation, ApiConsumes, ApiTags, ApiCreatedResponse, ApiOkResponse, ApiParam } from '@nestjs/swagger';\n\nimport { FILE_UPLOAD_MAX_SIZE } from '@leek/constants';\nimport { fileFilter } from '@leek/utils';\n\nimport { LeekFile } from './domain/files';\nimport { UploadFileDto } from './dto/upload-file.dto';\nimport { UploadTextFileDto } from './dto/upload-text-file.dto';\nimport { FilesService } from './files.service';\n\n@ApiTags('文件管理')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Post('upload_file')\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({ summary: '上传文件到腾讯云 COS' })\n  @ApiCreatedResponse({\n    description: '文件已成功上传。',\n    type: LeekFile,\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      limits: { fileSize: FILE_UPLOAD_MAX_SIZE },\n      fileFilter,\n    }),\n  )\n  async uploadFile(@UploadedFile() file: Express.Multer.File, @Body() uploadFileDto: UploadFileDto): Promise {\n    return this.filesService.uploadFile(file, uploadFileDto.description);\n  }\n\n  @Post('upload_text_file')\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({ summary: '上传文本到腾讯云 COS' })\n  @ApiCreatedResponse({\n    description: '文件已成功上传。',\n    type: LeekFile,\n  })\n  async uploadTextFile(@Body() UploadTextFileDto: UploadTextFileDto): Promise {\n    return this.filesService.uploadTextFile(\n      UploadTextFileDto.name,\n      UploadTextFileDto.text,\n      UploadTextFileDto.description,\n    );\n  }\n\n  @Get(':id')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({ summary: '根据ID获取指定文件信息' })\n  @ApiParam({\n    name: 'id',\n    description: '要检索的文件的UUID',\n  })\n  @ApiOkResponse({\n    description: '返回指定ID的文件信息。',\n    type: LeekFile,\n  })\n  async findFileById(@Param('id', new ParseUUIDPipe()) id: string): Promise {\n    return this.filesService.findFileById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilesMapper.html":{"url":"classes/FilesMapper.html","title":"class - FilesMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilesMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/mappers/files.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: FileEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/mappers/files.mapper.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                        FileEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeekFile\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: LeekFile)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/mappers/files.mapper.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            LeekFile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FileEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UploadFile as FileEntity } from '@prisma/client';\n\nimport { LeekFile } from '../../../domain/files';\n\nexport class FilesMapper {\n  static toDomain(raw: FileEntity): LeekFile {\n    const domainEntity = new LeekFile();\n\n    domainEntity.id = raw.id;\n    domainEntity.storageType = raw.storageType;\n    domainEntity.key = raw.key;\n    domainEntity.name = raw.name;\n    domainEntity.description = raw.description;\n    domainEntity.size = raw.size;\n    domainEntity.extension = raw.extension;\n    domainEntity.mimeType = raw.mimeType;\n    domainEntity.used = raw.used;\n    domainEntity.usedAt = raw.usedAt;\n    domainEntity.hash = raw.hash;\n\n    domainEntity.createdAt = raw.createdAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: LeekFile): FileEntity {\n    const persistenceEntity = {} as FileEntity;\n\n    persistenceEntity.name = domainEntity.name;\n    persistenceEntity.storageType = domainEntity.storageType || 'cos';\n    persistenceEntity.key = domainEntity.key;\n    persistenceEntity.name = domainEntity.name;\n    persistenceEntity.description = domainEntity.description;\n    persistenceEntity.size = domainEntity.size;\n    persistenceEntity.extension = domainEntity.extension;\n    persistenceEntity.mimeType = domainEntity.mimeType;\n    persistenceEntity.used = domainEntity.used;\n    persistenceEntity.usedAt = domainEntity.usedAt;\n    persistenceEntity.hash = domainEntity.hash;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nConfigureModule\n\nConfigureModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nConfigureModule->FilesModule\n\n\n\n\n\nRelationaLeekFilesPersistenceModule\n\nRelationaLeekFilesPersistenceModule\n\nFilesModule -->\n\nRelationaLeekFilesPersistenceModule->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigureModule\n                        \n                        \n                            RelationaLeekFilesPersistenceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigureModule } from '@leek/configure';\n\nimport { FilesController } from './files.controller';\nimport { FilesService } from './files.service';\nimport { RelationaLeekFilesPersistenceModule } from './infrastructure/persistence/relational-persistence.module';\n\n@Module({\n  imports: [ConfigureModule, RelationaLeekFilesPersistenceModule],\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesRelationalRepository.html":{"url":"injectables/FilesRelationalRepository.html","title":"injectable - FilesRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/repositories/files.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFile\n                            \n                            \n                                    Async\n                                findFileById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/files/infrastructure/persistence/repositories/files.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFile(data: LeekFile)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/repositories/files.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeekFile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: LeekFile)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/repositories/files.repository.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            LeekFile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { PrismaService } from '@leek/prisma';\n\nimport { LeekFile } from '../../../domain/files';\nimport { FilesRepository } from '../files.repository';\nimport { FilesMapper } from '../mappers/files.mapper';\n\n@Injectable()\nexport class FilesRelationalRepository implements FilesRepository {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  async createFile(data: LeekFile): Promise {\n    const entity = await this.prismaService.uploadFile.findFirst({\n      where: { hash: data.hash },\n    });\n    if (entity) return FilesMapper.toDomain(entity);\n    const file = await this.prismaService.uploadFile.create({\n      data: FilesMapper.toPersistence(data),\n    });\n    return FilesMapper.toDomain(file);\n  }\n\n  async findFileById(id: LeekFile['id']): Promise {\n    const entity = await this.prismaService.uploadFile.findUnique({\n      where: { id },\n    });\n\n    return entity ? FilesMapper.toDomain(entity) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilesRepository.html":{"url":"classes/FilesRepository.html","title":"class - FilesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/files.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createFile\n                            \n                            \n                                    Abstract\n                                findFileById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFile(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/files.repository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: LeekFile)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/files.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            LeekFile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeekFile } from '../../domain/files';\n\nexport abstract class FilesRepository {\n  abstract createFile(data: Omit): Promise;\n  abstract findFileById(id: LeekFile['id']): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findFileById\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                            \n                                    Private\n                                    Async\n                                uploadFileToCos\n                            \n                            \n                                    Async\n                                uploadTextFile\n                            \n                            \n                                    Private\n                                    Async\n                                validateExcel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configureService: ConfigureAdapter, filesRepository: FilesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/files/files.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configureService\n                                                  \n                                                        \n                                                                        ConfigureAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesRepository\n                                                  \n                                                        \n                                                                        FilesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Finds a file by its ID in the repository.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                The file metadata or null if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File, description?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Uploads a file to Tencent COS and stores its metadata in the repository.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file to be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional description of the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The metadata of the uploaded file.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        uploadFileToCos\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFileToCos(buffer: Buffer, originalname: string, extension: string, mimetype: string, description?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Handles the upload of a file buffer to Tencent COS and stores its metadata.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file buffer to upload.\n\n\n                                            \n                                        \n                                        \n                                                originalname\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original name of the file.\n\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file extension.\n\n\n                                            \n                                        \n                                        \n                                                mimetype\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe MIME type of the file.\n\n\n                                            \n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional description of the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The metadata of the uploaded file.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadTextFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadTextFile(originalname: string, text: string, description?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Uploads plain text content as a file to Tencent COS.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                originalname\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original name of the text file.\n\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe text content to be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional description of the text file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The metadata of the uploaded text file.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateExcel\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateExcel(buffer: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as fs from 'node:fs';\nimport * as os from 'node:os';\nimport * as path from 'node:path';\n\nimport { BadRequestException, Injectable, InternalServerErrorException } from '@nestjs/common';\n\nimport COS from 'cos-nodejs-sdk-v5';\nimport * as XLSX from 'xlsx';\n\nimport { ConfigureAdapter } from '@leek/configure';\nimport { createHash, getExtensions, uuid } from '@leek/utils';\n\nimport { LeekFile } from './domain/files';\nimport { FilesRepository } from './infrastructure/persistence/files.repository';\n\n@Injectable()\nexport class FilesService {\n  constructor(\n    private readonly configureService: ConfigureAdapter,\n    private readonly filesRepository: FilesRepository,\n  ) {}\n\n  /**\n   * Uploads a file to Tencent COS and stores its metadata in the repository.\n   * @param {Express.Multer.File} file - The file to be uploaded.\n   * @param {string} [description] - Optional description of the file.\n   * @returns {Promise} The metadata of the uploaded file.\n   */\n  async uploadFile(file: Express.Multer.File, description?: string): Promise {\n    if (!file) {\n      throw new BadRequestException('文件上传失败，文件类型不支持或文件大小超过限制');\n    }\n\n    const { buffer, originalname, mimetype } = file;\n    const extension = getExtensions(originalname);\n    return this.uploadFileToCos(buffer, originalname, extension, mimetype, description);\n  }\n\n  /**\n   * Uploads plain text content as a file to Tencent COS.\n   * @param {string} originalname - The original name of the text file.\n   * @param {string} text - The text content to be uploaded.\n   * @param {string} [description] - Optional description of the text file.\n   * @returns {Promise} The metadata of the uploaded text file.\n   */\n  async uploadTextFile(originalname: string, text: string, description?: string): Promise {\n    const tempDir = fs.mkdtempSync(path.join(os.tmpdir(), 's3fileloader-'));\n    const filePath = path.join(tempDir, `${originalname}.txt`);\n\n    fs.writeFileSync(filePath, text, 'utf8');\n\n    const buffer = fs.readFileSync(filePath);\n    const extension = 'txt';\n    const mimetype = 'text/plain';\n\n    try {\n      return await this.uploadFileToCos(buffer, originalname, extension, mimetype, description);\n    } finally {\n      fs.unlinkSync(filePath);\n    }\n  }\n\n  /**\n   * Handles the upload of a file buffer to Tencent COS and stores its metadata.\n   * @private\n   * @param {Buffer} buffer - The file buffer to upload.\n   * @param {string} originalname - The original name of the file.\n   * @param {string} extension - The file extension.\n   * @param {string} mimetype - The MIME type of the file.\n   * @param {string} [description] - Optional description of the file.\n   * @returns {Promise} The metadata of the uploaded file.\n   * @throws {InternalServerErrorException} If the upload fails.\n   */\n  private async uploadFileToCos(\n    buffer: Buffer,\n    originalname: string,\n    extension: string,\n    mimetype: string,\n    description?: string,\n  ): Promise {\n    if (extension === 'xlsx') {\n      await this.validateExcel(buffer);\n    }\n\n    const tencentCos = new COS({\n      SecretId: this.configureService.TENCENT.SECRET_ID,\n      SecretKey: this.configureService.TENCENT.SECRET_KEY,\n    });\n\n    const hash = createHash(buffer);\n    const Key = `leek/upload_files/${uuid()}.${extension}`;\n    const fileName = Buffer.from(originalname, 'latin1').toString('utf-8');\n\n    try {\n      await tencentCos.putObject({\n        Bucket: this.configureService.TENCENT.COS_BUCKET,\n        Region: this.configureService.TENCENT.COS_REGION,\n        Key,\n        Body: buffer,\n      });\n    } catch (error) {\n      console.error(`文件上传到云存储失败。`, error.stack);\n      throw new InternalServerErrorException('文件上传到云存储失败，请稍后重试');\n    }\n\n    return this.filesRepository.createFile({\n      key: Key,\n      name: fileName,\n      size: buffer.length,\n      extension,\n      mimeType: mimetype,\n      hash,\n      description,\n    });\n  }\n\n  private async validateExcel(buffer: Buffer): Promise {\n    const workbook = XLSX.read(buffer, { type: 'buffer' });\n\n    const sheetName = workbook.SheetNames[0];\n    if (!sheetName) {\n      throw new BadRequestException('Excel 文件中未找到任何工作表');\n    }\n\n    const sheet = workbook.Sheets[sheetName];\n\n    const rows = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n    if (rows.length === 0) {\n      throw new BadRequestException('Excel 文件内容为空');\n    }\n\n    const headers = rows[0];\n\n    if (headers[0] !== 'QUESTION' || headers[1] !== 'ANSWER') {\n      throw new BadRequestException(\"Excel 表头必须为：第一列为 'QUESTION'，第二列为 'ANSWER'\");\n    }\n\n    for (let i = 1; i  2) {\n        throw new BadRequestException(`第 ${i + 1} 行包含非法内容，仅支持两列的普通表格`);\n      }\n    }\n  }\n\n  /**\n   * Finds a file by its ID in the repository.\n   * @param {string} id - The ID of the file to find.\n   * @returns {Promise>} The file metadata or null if not found.\n   */\n  async findFileById(id: string): Promise> {\n    return this.filesRepository.findFileById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IndexingController.html":{"url":"controllers/IndexingController.html","title":"controller - IndexingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IndexingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/controllers/indexing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                datasets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                indexingEstimate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        indexingEstimate\n                        \n                    \n                \n            \n            \n                \n                        \n                    indexingEstimate(indexingEstimateDto: IndexingEstimateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('indexing_estimate')@Version('1')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: '估算索引结果', description: '基于上传的文件内容估算索引结果，返回分段后的详细信息，包括分块数量和内容预览。'})@ApiCreatedResponse({description: '成功返回索引估算结果，包含总分块数和分块内容预览。', type: ResponseIndexingEstimateDto})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/indexing.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                indexingEstimateDto\n                                            \n                                                            IndexingEstimateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Version } from '@nestjs/common';\nimport { ApiCreatedResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\n\nimport { IndexingEstimateDto } from '../dto/indexing-estimate.dto';\nimport { ResponseIndexingEstimateDto } from '../dto/response-indexing-estimate.dto';\nimport { IndexingService } from '../services/indexing.service';\n\n@ApiTags('索引管理')\n@Controller('datasets')\nexport class IndexingController {\n  constructor(private readonly indexingService: IndexingService) {}\n\n  @Post('indexing_estimate')\n  @Version('1')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({\n    summary: '估算索引结果',\n    description: '基于上传的文件内容估算索引结果，返回分段后的详细信息，包括分块数量和内容预览。',\n  })\n  @ApiCreatedResponse({\n    description: '成功返回索引估算结果，包含总分块数和分块内容预览。',\n    type: ResponseIndexingEstimateDto,\n  })\n  async indexingEstimate(@Body() indexingEstimateDto: IndexingEstimateDto): Promise {\n    return this.indexingService.indexingEstimate(indexingEstimateDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IndexingEstimateDto.html":{"url":"classes/IndexingEstimateDto.html","title":"class - IndexingEstimateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IndexingEstimateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/indexing-estimate.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    \n                                dataSourceInfo\n                            \n                            \n                                    \n                                    \n                                processRule\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '数据集 ID', example: '71fab30b-aa39-4ab9-bb73-059c66963285'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/indexing-estimate.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dataSourceInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataSourceInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '信息列表', type: 'object', properties: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/indexing-estimate.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        processRule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IndexingEstimateProcessRuleDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '处理规则', type: IndexingEstimateProcessRuleDto})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/indexing-estimate.dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsUUID, IsObject } from 'class-validator';\n\nimport { DataSourceEnum } from '@leek/constants';\n\nimport { IndexingEstimateProcessRuleDto } from './indexing-estimate-process-rule.dto';\n\ninterface DataSourceInfo {\n  dataSourceType: string;\n  fileInfo: {\n    fileIds: string[];\n  };\n}\n\nexport class IndexingEstimateDto {\n  @ApiProperty({\n    description: '信息列表',\n    type: 'object',\n    properties: {\n      dataSourceType: {\n        type: 'string',\n        description: '数据源类型',\n        example: DataSourceEnum.FILE,\n        enum: DataSourceEnum,\n      },\n      fileInfo: {\n        type: 'object',\n        description: '文件信息',\n        properties: {\n          fileIds: {\n            type: 'array',\n            items: { type: 'string' },\n            description: '文件ID列表',\n            example: ['4c688f1e-9248-4495-a78c-2d98cbcb93ad'],\n          },\n        },\n      },\n    },\n  })\n  @IsObject()\n  dataSourceInfo: DataSourceInfo;\n\n  @ApiProperty({\n    description: '处理规则',\n    type: IndexingEstimateProcessRuleDto,\n  })\n  @IsObject()\n  processRule: IndexingEstimateProcessRuleDto;\n\n  @ApiProperty({\n    description: '数据集 ID',\n    example: '71fab30b-aa39-4ab9-bb73-059c66963285',\n  })\n  @IsUUID()\n  datasetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IndexingEstimateProcessRuleDto.html":{"url":"classes/IndexingEstimateProcessRuleDto.html","title":"class - IndexingEstimateProcessRuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IndexingEstimateProcessRuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/indexing-estimate-process-rule.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(OmitType(CreateDatasetProcessRuleDto, ['datasetId']))\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, OmitType } from '@nestjs/swagger';\n\nimport { CreateDatasetProcessRuleDto } from './create-dataset-process-rule.dto';\n\nexport class IndexingEstimateProcessRuleDto extends PartialType(OmitType(CreateDatasetProcessRuleDto, ['datasetId'])) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IndexingService.html":{"url":"injectables/IndexingService.html","title":"injectable - IndexingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IndexingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/services/indexing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                indexingEstimate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesService: FilesService, processDocumentService: ProcessDocumentService)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/services/indexing.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesService\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processDocumentService\n                                                  \n                                                        \n                                                                        ProcessDocumentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        indexingEstimate\n                        \n                    \n                \n            \n            \n                \n                        \n                    indexingEstimate(indexingEstimateDto: IndexingEstimateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/indexing.service.ts:25\n                        \n                    \n\n\n            \n                \n                        估算文档索引结果\n根据提供的文件信息和预处理规则，估算文档的分块结果。返回包含总分块数和分块预览内容的详细信息。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                indexingEstimateDto\n                                            \n                                                            IndexingEstimateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n包含文件信息和处理规则的数据传输对象\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n返回估算结果，包括分块数和内容预览\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { FilesService } from '@leek/files/files.service';\n\nimport { ProcessDocumentService } from './process-document.service';\nimport { IndexingEstimateDto } from '../dto/indexing-estimate.dto';\nimport { ProcessRuleDto } from '../dto/process-rule.dto';\nimport { ResponseIndexingEstimateDto } from '../dto/response-indexing-estimate.dto';\n\n@Injectable()\nexport class IndexingService {\n  constructor(\n    private readonly filesService: FilesService,\n    private readonly processDocumentService: ProcessDocumentService,\n  ) {}\n\n  /**\n   * 估算文档索引结果\n   *\n   * 根据提供的文件信息和预处理规则，估算文档的分块结果。返回包含总分块数和分块预览内容的详细信息。\n   *\n   * @param {IndexingEstimateDto} indexingEstimateDto - 包含文件信息和处理规则的数据传输对象\n   * @returns {Promise} - 返回估算结果，包括分块数和内容预览\n   */\n  async indexingEstimate(indexingEstimateDto: IndexingEstimateDto): Promise {\n    const { dataSourceInfo, processRule } = indexingEstimateDto;\n\n    // 提取文件 ID 并获取文件信息\n    const fileId = dataSourceInfo.fileInfo.fileIds[0];\n    const file = await this.filesService.findFileById(fileId);\n\n    // 从预处理规则中提取模式和规则\n    const { mode, rules } = processRule;\n\n    // 使用文档处理服务对文件进行分段和处理\n    const { processedDocuments } = await this.processDocumentService.processDocumentsWithRules(file.key, {\n      mode,\n      preProcessingRules: (rules as unknown as ProcessRuleDto).preProcessingRules,\n      segmentation: (rules as unknown as ProcessRuleDto).segmentation,\n    });\n\n    // 提取分段后的内容预览\n    const chunkPreview = processedDocuments.map((doc) => doc.pageContent);\n\n    // 返回估算结果，包括分块数和分块内容预览\n    return {\n      chunkCount: processedDocuments.length,\n      chunkPreview,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JiebaKeywordService.html":{"url":"injectables/JiebaKeywordService.html","title":"injectable - JiebaKeywordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JiebaKeywordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/services/jieba-keyword.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                expandKeywordsToSubtokens\n                            \n                            \n                                extractKeywordsFromText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expandKeywordsToSubtokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    expandKeywordsToSubtokens(tokens: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/jieba-keyword.service.ts:26\n                        \n                    \n\n\n            \n                \n                        扩展关键词集合，将其分解为子标记，并移除停用词。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokens\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                包含扩展子标记的数组。\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractKeywordsFromText\n                        \n                    \n                \n            \n            \n                \nextractKeywordsFromText(text: string, maxKeywordsPerChunk: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/jieba-keyword.service.ts:15\n                        \n                    \n\n\n            \n                \n                        提取文本中的关键词，并扩展为子标记（Subtokens）。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \n要提取关键词的输入文本。\n\n\n                                            \n                                        \n                                        \n                                                maxKeywordsPerChunk\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                包含关键词和扩展子标记的数组。\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport * as nodejieba from 'nodejieba';\n\nimport { STOPWORDS } from '@leek/constants';\n\n@Injectable()\nexport class JiebaKeywordService {\n  /**\n   * 提取文本中的关键词，并扩展为子标记（Subtokens）。\n   * @param {string} text - 要提取关键词的输入文本。\n   * @param {number} [maxKeywords=10] - 每段最大提取关键词的数量。\n   * @returns {string[]} 包含关键词和扩展子标记的数组。\n   */\n  extractKeywordsFromText(text: string, maxKeywordsPerChunk: number = 10): string[] {\n    const keywords = nodejieba.extract(text, maxKeywordsPerChunk).map((item) => item.word);\n    return this.expandKeywordsToSubtokens(new Set(keywords));\n  }\n\n  /**\n   * 扩展关键词集合，将其分解为子标记，并移除停用词。\n   * @private\n   * @param {Set} keywords - 要扩展的关键词集合。\n   * @returns {string[]} 包含扩展子标记的数组。\n   */\n  private expandKeywordsToSubtokens(tokens: Set): string[] {\n    const results = new Set();\n\n    for (const token of tokens) {\n      results.add(token);\n      const subTokens = token.match(/\\w+/g); // Matches word-like substrings.\n      if (subTokens && subTokens.length > 1) {\n        subTokens.forEach((subToken) => {\n          if (!STOPWORDS.has(subToken)) {\n            results.add(subToken);\n          }\n        });\n      }\n    }\n\n    return [...results];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LLMGeneratorService.html":{"url":"injectables/LLMGeneratorService.html","title":"injectable - LLMGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LLMGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/services/llm-generator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateQaDocumentFromTextAndLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configureService: ConfigureAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/services/llm-generator.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configureService\n                                                  \n                                                        \n                                                                        ConfigureAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateQaDocumentFromTextAndLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateQaDocumentFromTextAndLanguage(text: string, docLanguage: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/llm-generator.service.ts:25\n                        \n                    \n\n\n            \n                \n                        使用 LLM (Large Language Model) 生成问答文档\n根据输入文本和目标语言，调用 OpenAI 的 GPT 模型生成问答文档内容。\n使用自定义的 Prompt 和输出解析器，确保生成结果格式化为符合要求的分段文本。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n原始输入文本，用于生成问答内容\n\n\n                                            \n                                        \n                                        \n                                                docLanguage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档的目标语言（如 \"en\" 或 \"zh\"）\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n格式化后的问答分段内容\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { StringOutputParser } from '@langchain/core/output_parsers';\n\nimport { ConfigureAdapter } from '@leek/configure';\nimport { initModels } from '@leek/langchain';\n\nimport { GeneratorQaPrompt } from '../shared/prompts/generator-qa.prompt';\nimport { extractQAPairsFromText } from '../shared/utils/extract-qa-pairs-from-text.util';\n\n@Injectable()\nexport class LLMGeneratorService {\n  constructor(private readonly configureService: ConfigureAdapter) {}\n\n  /**\n   * 使用 LLM (Large Language Model) 生成问答文档\n   *\n   * 根据输入文本和目标语言，调用 OpenAI 的 GPT 模型生成问答文档内容。\n   * 使用自定义的 Prompt 和输出解析器，确保生成结果格式化为符合要求的分段文本。\n   *\n   * @param {string} text - 原始输入文本，用于生成问答内容\n   * @param {string} docLanguage - 文档的目标语言（如 \"en\" 或 \"zh\"）\n   * @returns {Promise} - 格式化后的问答分段内容\n   */\n  async generateQaDocumentFromTextAndLanguage(text: string, docLanguage: string) {\n    const chain = GeneratorQaPrompt.pipe(initModels({ maxTokens: 2000 })).pipe(new StringOutputParser());\n\n    const qa = await chain.invoke({ text, language: docLanguage });\n\n    return extractQAPairsFromText(qa);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekAssistant.html":{"url":"classes/LeekAssistant.html","title":"class - LeekAssistant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekAssistant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/domain/assistants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                datasetId\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                systemPrompt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '助手创建时间', example: '2023-01-01T00:00:00Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/domain/assistants.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '助手关联的知识库 ID', example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/domain/assistants.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '助手的描述信息', example: '一个帮助用户解答问题的虚拟助手。'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/domain/assistants.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '助手的唯一标识符', example: 'a1b2c3d4-5678-9efg-1011-121314151617'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/domain/assistants.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '助手名称', example: '客服助手'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/domain/assistants.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        systemPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '初始 Prompt 模板', example: '你是一个智能客服助手，可以回答用户的各种问题。'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/domain/assistants.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '助手更新时间', example: '2023-01-02T00:00:00Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/assistants/domain/assistants.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class LeekAssistant {\n  @ApiProperty({\n    description: '助手的唯一标识符',\n    example: 'a1b2c3d4-5678-9efg-1011-121314151617',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: '助手名称',\n    example: '客服助手',\n  })\n  name: string;\n\n  @ApiPropertyOptional({\n    description: '助手的描述信息',\n    example: '一个帮助用户解答问题的虚拟助手。',\n  })\n  description?: string;\n\n  @ApiPropertyOptional({\n    description: '助手关联的知识库 ID',\n    example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c',\n  })\n  datasetId?: string;\n\n  @ApiPropertyOptional({\n    description: '初始 Prompt 模板',\n    example: '你是一个智能客服助手，可以回答用户的各种问题。',\n  })\n  systemPrompt?: string;\n\n  @ApiProperty({\n    description: '助手创建时间',\n    example: '2023-01-01T00:00:00Z',\n  })\n  createdAt: Date = new Date();\n\n  @ApiProperty({\n    description: '助手更新时间',\n    example: '2023-01-02T00:00:00Z',\n  })\n  updatedAt: Date = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekCSVLoader.html":{"url":"classes/LeekCSVLoader.html","title":"class - LeekCSVLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekCSVLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/csv.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CSVLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string | Blob, options?: CSVLoaderOptions | string)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/csv.loader.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string | Blob\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    CSVLoaderOptions | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CSVLoader } from '@langchain/community/document_loaders/fs/csv';\n\ntype CSVLoaderOptions = {\n  column?: string;\n  separator?: string;\n};\n\nexport class LeekCSVLoader extends CSVLoader {\n  constructor(filePathOrBlob: string | Blob, options?: CSVLoaderOptions | string) {\n    super(filePathOrBlob, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekDataset.html":{"url":"classes/LeekDataset.html","title":"class - LeekDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/domain/dataset.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                dataSourceType\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    Optional\n                                embeddingModel\n                            \n                            \n                                    \n                                    Optional\n                                embeddingModelProvider\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                indexStruct\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                provider\n                            \n                            \n                                    \n                                    Optional\n                                retrievalModel\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库创建时间', example: '2023-01-01T00:00:00Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        dataSourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '数据源类型', example: undefined, enum: DataSourceEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '知识库的可选描述信息', example: '包含用户在电子商务平台上的点击、浏览和购买记录。'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        embeddingModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text-embedding-ada-002'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '嵌入模型名称', example: EMBEDDING_MODEL_NAME, default: EMBEDDING_MODEL_NAME})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        embeddingModelProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : EMBEDDING_PROVIDER_NAME\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '嵌入模型提供方', example: EMBEDDING_PROVIDER_NAME, default: EMBEDDING_PROVIDER_NAME})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库的唯一标识符', example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        indexStruct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '索引结构配置', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库名称', example: '用户行为知识库'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'vendor'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '知识库提供方名称', example: 'vendor', default: 'vendor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        retrievalModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '检索模型配置', type: RetrievalModelDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库更新时间', example: '2023-01-02T00:00:00Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\n\nimport { DataSourceEnum, EMBEDDING_MODEL_NAME, EMBEDDING_PROVIDER_NAME } from '@leek/constants';\n\nimport { RetrievalModelDto } from '../dto/retrieval-model.dto';\nimport { generateVectorClassPrefixByDatasetId } from '../shared/utils/generate-vector-class-prefix-by-dataset-id.util';\n\nexport class LeekDataset {\n  @ApiProperty({\n    description: '知识库的唯一标识符',\n    example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: '知识库名称',\n    example: '用户行为知识库',\n  })\n  name: string;\n\n  @ApiPropertyOptional({\n    description: '知识库的可选描述信息',\n    example: '包含用户在电子商务平台上的点击、浏览和购买记录。',\n  })\n  description?: string;\n\n  @ApiPropertyOptional({\n    description: '知识库提供方名称',\n    example: 'vendor',\n    default: 'vendor',\n  })\n  provider?: string = 'vendor';\n\n  @ApiPropertyOptional({\n    description: '数据源类型',\n    example: DataSourceEnum.FILE,\n    enum: DataSourceEnum,\n  })\n  dataSourceType?: string;\n\n  @ApiPropertyOptional({\n    description: '索引结构配置',\n    example: {\n      type: 'pgvector',\n      vectorStore: {\n        classPrefix: generateVectorClassPrefixByDatasetId('3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c'),\n      },\n    },\n  })\n  indexStruct?: Prisma.JsonValue;\n\n  @ApiPropertyOptional({\n    description: '嵌入模型名称',\n    example: EMBEDDING_MODEL_NAME,\n    default: EMBEDDING_MODEL_NAME,\n  })\n  embeddingModel?: string = 'text-embedding-ada-002';\n\n  @ApiPropertyOptional({\n    description: '嵌入模型提供方',\n    example: EMBEDDING_PROVIDER_NAME,\n    default: EMBEDDING_PROVIDER_NAME,\n  })\n  embeddingModelProvider?: string = EMBEDDING_PROVIDER_NAME;\n\n  @ApiPropertyOptional({\n    description: '检索模型配置',\n    type: RetrievalModelDto,\n  })\n  retrievalModel?: Prisma.JsonValue;\n\n  @ApiProperty({\n    description: '知识库创建时间',\n    example: '2023-01-01T00:00:00Z',\n  })\n  createdAt: Date = new Date();\n\n  @ApiProperty({\n    description: '知识库更新时间',\n    example: '2023-01-02T00:00:00Z',\n  })\n  updatedAt: Date = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekDatasetProcessRule.html":{"url":"classes/LeekDatasetProcessRule.html","title":"class - LeekDatasetProcessRule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekDatasetProcessRule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/domain/dataset-process-rule.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                mode\n                            \n                            \n                                    \n                                    Optional\n                                rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '规则的创建时间', example: '2024-11-04T08:42:31.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset-process-rule.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库的唯一标识符', example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset-process-rule.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '规则的唯一标识符', example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset-process-rule.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '处理规则模式，值为 \"automatic\" 或 \"custom\"', enum: SegmentationEnum, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset-process-rule.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '自定义规则，采用 JSON 格式', type: DatasetProcessRuleDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/dataset-process-rule.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\n\nimport { SegmentationEnum } from '@leek/constants';\n\nimport { DatasetProcessRuleDto } from '../dto/dataset-process-rule.dto';\n\nexport class LeekDatasetProcessRule {\n  @ApiProperty({\n    description: '规则的唯一标识符',\n    example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: '知识库的唯一标识符',\n    example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272',\n  })\n  datasetId: string;\n\n  @ApiProperty({\n    description: '处理规则模式，值为 \"automatic\" 或 \"custom\"',\n    enum: SegmentationEnum,\n    example: SegmentationEnum.Automatic,\n  })\n  mode: string;\n\n  @ApiPropertyOptional({\n    description: '自定义规则，采用 JSON 格式',\n    type: DatasetProcessRuleDto,\n  })\n  rules?: Prisma.JsonValue;\n\n  @ApiProperty({\n    description: '规则的创建时间',\n    example: '2024-11-04T08:42:31.000Z',\n  })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekDocument.html":{"url":"classes/LeekDocument.html","title":"class - LeekDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/domain/document.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                archived\n                            \n                            \n                                    \n                                    Optional\n                                archivedAt\n                            \n                            \n                                    \n                                    Optional\n                                archivedReason\n                            \n                            \n                                    \n                                    Optional\n                                createdApiRequestId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdFrom\n                            \n                            \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    Optional\n                                datasetProcessRuleId\n                            \n                            \n                                    \n                                    Optional\n                                dataSourceInfo\n                            \n                            \n                                    \n                                dataSourceType\n                            \n                            \n                                    \n                                    Optional\n                                disabledAt\n                            \n                            \n                                    \n                                    Optional\n                                docForm\n                            \n                            \n                                    \n                                    Optional\n                                docLanguage\n                            \n                            \n                                    \n                                    Optional\n                                docMetadata\n                            \n                            \n                                    \n                                    Optional\n                                docType\n                            \n                            \n                                    \n                                    Optional\n                                enabled\n                            \n                            \n                                    \n                                    Optional\n                                fileId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                indexingLatency\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                position\n                            \n                            \n                                    \n                                    Optional\n                                tokens\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                wordCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        archived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档是否归档', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        archivedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档归档的时间', example: '2024-12-01T08:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        archivedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档归档的原因', example: 'No longer needed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdApiRequestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '创建此文档的 API 请求 ID', example: 'some-api-request-id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档的创建时间', example: '2024-11-04T08:42:31.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档的创建来源', example: undefined, enum: CreatedFromEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库的唯一标识符', example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        datasetProcessRuleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '知识库处理规则ID', example: 'ce9f2a1a-e49c-4660-9b87-7f0b3f4eefcc'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        dataSourceInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '数据源的详细信息，通常为JSON对象', example: '{\"upload_file_id\": \"0162a2ca-11e9-4cc0-892b-b34047227dfc\"}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dataSourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '数据源类型', example: undefined, enum: DataSourceEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        disabledAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档被禁用的时间', example: '2024-11-04T09:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        docForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的具体形式（如文本、QA）', example: undefined, enum: IndexEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        docLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的语言', example: 'Chinese'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        docMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的元数据，通常为JSON对象', example: '{\"author\": \"John Doe\", \"subject\": \"Report\"}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        docType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档类型', example: 'PDF'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档是否启用', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        fileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件的唯一标识符', example: 'file-id-example'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档的唯一标识符', example: 'f607d5c1-f58e-44d1-b123-1e45ce3de984'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        indexingLatency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '索引延迟时间，表示建立索引所花费的时间', example: 0.05})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档名称', example: '600415_分析报告.pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档在知识库中的位置', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的 token 数量', example: 5000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档的更新时间', example: '2024-11-04T09:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        wordCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的单词数', example: 1024})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/document.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\n\nimport { DataSourceEnum, CreatedFromEnum, IndexEnum } from '@leek/constants';\n\nexport class LeekDocument {\n  @ApiProperty({\n    description: '文档的唯一标识符',\n    example: 'f607d5c1-f58e-44d1-b123-1e45ce3de984',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: '知识库的唯一标识符',\n    example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272',\n  })\n  datasetId: string;\n\n  @ApiProperty({\n    description: '文档在知识库中的位置',\n    example: 2,\n  })\n  position: number;\n\n  @ApiProperty({\n    description: '数据源类型',\n    example: DataSourceEnum.FILE,\n    enum: DataSourceEnum,\n  })\n  dataSourceType: string;\n\n  @ApiPropertyOptional({\n    description: '数据源的详细信息，通常为JSON对象',\n    example: '{\"upload_file_id\": \"0162a2ca-11e9-4cc0-892b-b34047227dfc\"}',\n  })\n  dataSourceInfo?: Prisma.JsonValue;\n\n  @ApiPropertyOptional({\n    description: '知识库处理规则ID',\n    example: 'ce9f2a1a-e49c-4660-9b87-7f0b3f4eefcc',\n  })\n  datasetProcessRuleId?: string;\n\n  @ApiProperty({\n    description: '文档名称',\n    example: '600415_分析报告.pdf',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: '文档的创建来源',\n    example: CreatedFromEnum.WEB,\n    enum: CreatedFromEnum,\n  })\n  createdFrom: string;\n\n  @ApiPropertyOptional({\n    description: '创建此文档的 API 请求 ID',\n    example: 'some-api-request-id',\n  })\n  createdApiRequestId?: string;\n\n  @ApiPropertyOptional({\n    description: '文件的唯一标识符',\n    example: 'file-id-example',\n  })\n  fileId?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的单词数',\n    example: 1024,\n  })\n  wordCount?: number;\n\n  @ApiPropertyOptional({\n    description: '文档的 token 数量',\n    example: 5000,\n  })\n  tokens?: number;\n\n  @ApiPropertyOptional({\n    description: '索引延迟时间，表示建立索引所花费的时间',\n    example: 0.05,\n  })\n  indexingLatency?: number;\n\n  @ApiPropertyOptional({\n    description: '文档是否启用',\n    example: true,\n  })\n  enabled?: boolean = true;\n\n  @ApiPropertyOptional({\n    description: '文档被禁用的时间',\n    example: '2024-11-04T09:00:00.000Z',\n  })\n  disabledAt?: Date;\n\n  @ApiPropertyOptional({\n    description: '文档是否归档',\n    example: false,\n  })\n  archived?: boolean;\n\n  @ApiPropertyOptional({\n    description: '文档归档的原因',\n    example: 'No longer needed',\n  })\n  archivedReason?: string;\n\n  @ApiPropertyOptional({\n    description: '文档归档的时间',\n    example: '2024-12-01T08:00:00.000Z',\n  })\n  archivedAt?: Date;\n\n  @ApiPropertyOptional({\n    description: '文档类型',\n    example: 'PDF',\n  })\n  docType?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的元数据，通常为JSON对象',\n    example: '{\"author\": \"John Doe\", \"subject\": \"Report\"}',\n  })\n  docMetadata?: Prisma.JsonValue;\n\n  @ApiPropertyOptional({\n    description: '文档的具体形式（如文本、QA）',\n    example: IndexEnum.PARAGRAPH_INDEX,\n    enum: IndexEnum,\n  })\n  docForm?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的语言',\n    example: 'Chinese',\n  })\n  docLanguage?: string;\n\n  @ApiProperty({\n    description: '文档的创建时间',\n    example: '2024-11-04T08:42:31.000Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: '文档的更新时间',\n    example: '2024-11-04T09:00:00.000Z',\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekDocxLoader.html":{"url":"classes/LeekDocxLoader.html","title":"class - LeekDocxLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekDocxLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/docx.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DocxLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/docx.loader.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocxLoader } from '@langchain/community/document_loaders/fs/docx';\n\nexport class LeekDocxLoader extends DocxLoader {\n  constructor(filePathOrBlob: string) {\n    super(filePathOrBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekEPubLoader.html":{"url":"classes/LeekEPubLoader.html","title":"class - LeekEPubLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekEPubLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/epub.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            EPubLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string, options?: EPubLoaderOptions)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/epub.loader.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        EPubLoaderOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EPubLoader } from '@langchain/community/document_loaders/fs/epub';\n\ntype EPubLoaderOptions = {\n  splitChapters?: boolean | undefined;\n};\n\nexport class LeekEPubLoader extends EPubLoader {\n  constructor(filePathOrBlob: string, options?: EPubLoaderOptions) {\n    super(filePathOrBlob, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekEmbedding.html":{"url":"classes/LeekEmbedding.html","title":"class - LeekEmbedding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekEmbedding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/domain/embedding.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                classPrefix\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                embedding\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                modelName\n                            \n                            \n                                    \n                                    Optional\n                                providerName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        classPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '类前缀，可能用于分类或标识'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/embedding.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '嵌入对象创建时间', example: '2024-11-04T08:42:31.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/embedding.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        embedding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '嵌入的向量数据'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/embedding.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '嵌入的哈希值'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/embedding.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '嵌入对象的唯一标识符'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/embedding.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '模型的名称'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/embedding.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        providerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '提供者的名称'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/embedding.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class LeekEmbedding {\n  @ApiProperty({\n    description: '嵌入对象的唯一标识符',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: '嵌入的哈希值',\n  })\n  hash: string;\n\n  // @ApiProperty({\n  //   description: '嵌入的内容文本',\n  // })\n  // content: string;\n\n  @ApiProperty({\n    description: '嵌入的向量数据',\n  })\n  embedding?: number[];\n\n  @ApiProperty({\n    description: '模型的名称',\n  })\n  modelName?: string;\n\n  @ApiProperty({\n    description: '提供者的名称',\n  })\n  providerName?: string;\n\n  @ApiProperty({\n    description: '类前缀，可能用于分类或标识',\n  })\n  classPrefix: string;\n\n  @ApiProperty({\n    description: '嵌入对象创建时间',\n    example: '2024-11-04T08:42:31.000Z',\n  })\n  createdAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekExcelLoader.html":{"url":"classes/LeekExcelLoader.html","title":"class - LeekExcelLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekExcelLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/excel.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseDocumentLoader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filePath\n                            \n                            \n                                    Private\n                                separator\n                            \n                            \n                                    Private\n                                sheetName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Protected\n                                    Async\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string, undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/excel.loader.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/excel.loader.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        separator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/excel.loader.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sheetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/langchain/loaders/excel.loader.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/langchain/loaders/excel.loader.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(workbook: XLSX.WorkBook)\n                \n            \n\n\n                    \n                        \n                            Defined in src/langchain/loaders/excel.loader.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                workbook\n                                            \n                                                        XLSX.WorkBook\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseDocumentLoader } from '@langchain/core/document_loaders/base';\nimport { Document } from '@langchain/core/documents';\nimport * as XLSX from 'xlsx';\n\nexport class LeekExcelLoader extends BaseDocumentLoader {\n  private sheetName: string | undefined;\n  private separator: string;\n\n  constructor(\n    public filePath: string,\n    { sheetName, separator = '>>' }: { sheetName?: string; separator?: string } = {},\n  ) {\n    super();\n    this.sheetName = sheetName;\n    this.separator = separator;\n  }\n\n  protected async parse(workbook: XLSX.WorkBook): Promise {\n    const sheetName = this.sheetName || workbook.SheetNames[0];\n\n    if (!sheetName) throw new Error('No sheets found in the Excel file.');\n\n    const sheet = workbook.Sheets[sheetName];\n    if (!sheet) throw new Error(`Sheet \"${sheetName}\" not found in the Excel file.`);\n\n    const jsonData: Record[] = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n    const rowsWithoutHeader = jsonData.slice(1);\n\n    return rowsWithoutHeader.map((row, index) => ({\n      pageContent: row.join(this.separator),\n      metadata: { rowIndex: index + 1 },\n    }));\n  }\n\n  async load(): Promise {\n    const workbook = XLSX.readFile(this.filePath);\n\n    const parsed = await this.parse(workbook);\n    const metadata = { source: this.filePath };\n\n    if (parsed.length === 0) return [];\n\n    return parsed.map(\n      (item) =>\n        new Document({\n          pageContent: item.pageContent,\n          metadata: {\n            ...metadata,\n            ...item.metadata,\n          },\n        }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekFile.html":{"url":"classes/LeekFile.html","title":"class - LeekFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/domain/files.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                extension\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    Optional\n                                mimeType\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                storageType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                used\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                usedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文件创建时间', example: '2023-01-01T00:00:00Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件描述', example: '这是一个文件描述。'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        extension\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文件扩展名', example: 'pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件的哈希值', example: 'c6bd97a16ea91fc05155d82af79516c013c5488f175191372bbb07c7031c77fc'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文件的唯一标识符', example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文件在存储中的唯一键', example: 'upload_files/804f3d62-a2be-4375-8aa6-f0d2d08922ff/989efe03-6d61-4dc2-a9b6-8764eeef8355.pdf'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mimeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件的 MIME 类型', example: 'application/pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文件名称', example: '浙江政务服务网 公共支付.pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文件大小（以字节为单位）', example: 156819})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        storageType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cos'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '存储类型，例如本地或云存储类型', example: 'cos', default: 'cos'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        used\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件是否被使用', example: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        usedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件被使用的时间', example: '2023-01-01T00:00:00Z'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/files.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Exclude } from 'class-transformer';\n\nexport class LeekFile {\n  @ApiProperty({\n    description: '文件的唯一标识符',\n    example: '3f29e2b7-8c9e-4d47-bbfa-a4a7f7b81b9c',\n  })\n  id: string;\n\n  @ApiPropertyOptional({\n    description: '存储类型，例如本地或云存储类型',\n    example: 'cos',\n    default: 'cos',\n  })\n  @Exclude()\n  storageType?: string = 'cos';\n\n  @ApiProperty({\n    description: '文件在存储中的唯一键',\n    example: 'upload_files/804f3d62-a2be-4375-8aa6-f0d2d08922ff/989efe03-6d61-4dc2-a9b6-8764eeef8355.pdf',\n  })\n  @Exclude()\n  key: string;\n\n  @ApiProperty({\n    description: '文件名称',\n    example: '浙江政务服务网 公共支付.pdf',\n  })\n  name: string;\n\n  @ApiPropertyOptional({\n    description: '文件描述',\n    example: '这是一个文件描述。',\n  })\n  description?: string;\n\n  @ApiProperty({\n    description: '文件大小（以字节为单位）',\n    example: 156819,\n  })\n  size: number;\n\n  @ApiProperty({\n    description: '文件扩展名',\n    example: 'pdf',\n  })\n  extension: string;\n\n  @ApiPropertyOptional({\n    description: '文件的 MIME 类型',\n    example: 'application/pdf',\n  })\n  mimeType?: string;\n\n  @ApiPropertyOptional({\n    description: '文件是否被使用',\n    example: false,\n  })\n  @Exclude()\n  used?: boolean;\n\n  @ApiPropertyOptional({\n    description: '文件被使用的时间',\n    example: '2023-01-01T00:00:00Z',\n  })\n  @Exclude()\n  usedAt?: Date;\n\n  @ApiPropertyOptional({\n    description: '文件的哈希值',\n    example: 'c6bd97a16ea91fc05155d82af79516c013c5488f175191372bbb07c7031c77fc',\n  })\n  @Exclude()\n  hash?: string;\n\n  @ApiProperty({\n    description: '文件创建时间',\n    example: '2023-01-01T00:00:00Z',\n  })\n  createdAt: Date = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekJSONLinesLoader.html":{"url":"classes/LeekJSONLinesLoader.html","title":"class - LeekJSONLinesLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekJSONLinesLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/json.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JSONLinesLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string | Blob, pointer: JSONLinesLoaderOptions)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/json.loader.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string | Blob\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pointer\n                                                  \n                                                        \n                                                                        JSONLinesLoaderOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JSONLoader, JSONLinesLoader } from 'langchain/document_loaders/fs/json';\n\nexport type JSONLoaderOptions = string | string[];\nexport type JSONLinesLoaderOptions = string;\n\nexport class LeekJSONLoader extends JSONLoader {\n  constructor(filePathOrBlob: string | Blob, pointers?: JSONLoaderOptions) {\n    super(filePathOrBlob, pointers);\n  }\n}\n\nexport class LeekJSONLinesLoader extends JSONLinesLoader {\n  constructor(filePathOrBlob: string | Blob, pointer: JSONLinesLoaderOptions) {\n    super(filePathOrBlob, pointer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekJSONLoader.html":{"url":"classes/LeekJSONLoader.html","title":"class - LeekJSONLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekJSONLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/json.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JSONLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string | Blob, pointers?: JSONLoaderOptions)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/json.loader.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string | Blob\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pointers\n                                                  \n                                                        \n                                                                        JSONLoaderOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JSONLoader, JSONLinesLoader } from 'langchain/document_loaders/fs/json';\n\nexport type JSONLoaderOptions = string | string[];\nexport type JSONLinesLoaderOptions = string;\n\nexport class LeekJSONLoader extends JSONLoader {\n  constructor(filePathOrBlob: string | Blob, pointers?: JSONLoaderOptions) {\n    super(filePathOrBlob, pointers);\n  }\n}\n\nexport class LeekJSONLinesLoader extends JSONLinesLoader {\n  constructor(filePathOrBlob: string | Blob, pointer: JSONLinesLoaderOptions) {\n    super(filePathOrBlob, pointer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekPDFLoader.html":{"url":"classes/LeekPDFLoader.html","title":"class - LeekPDFLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekPDFLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/pdf.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PDFLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string | Blob, options?: PDFLoaderOptions)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/pdf.loader.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string | Blob\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        PDFLoaderOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PDFLoader } from '@langchain/community/document_loaders/fs/pdf';\n\ntype PDFLoaderOptions = {\n  splitPages?: boolean | undefined;\n  pdfjs?: any;\n  parsedItemSeparator?: string | undefined;\n};\n\nexport class LeekPDFLoader extends PDFLoader {\n  constructor(filePathOrBlob: string | Blob, options?: PDFLoaderOptions) {\n    super(filePathOrBlob, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekPPTXLoader.html":{"url":"classes/LeekPPTXLoader.html","title":"class - LeekPPTXLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekPPTXLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/pptx.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PPTXLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string | Blob)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/pptx.loader.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string | Blob\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PPTXLoader } from '@langchain/community/document_loaders/fs/pptx';\n\nexport class LeekPPTXLoader extends PPTXLoader {\n  constructor(filePathOrBlob: string | Blob) {\n    super(filePathOrBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekSRTLoader.html":{"url":"classes/LeekSRTLoader.html","title":"class - LeekSRTLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekSRTLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/srt.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SRTLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string | Blob)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/srt.loader.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string | Blob\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SRTLoader } from '@langchain/community/document_loaders/fs/srt';\n\nexport class LeekSRTLoader extends SRTLoader {\n  constructor(filePathOrBlob: string | Blob) {\n    super(filePathOrBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekSegment.html":{"url":"classes/LeekSegment.html","title":"class - LeekSegment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekSegment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/domain/segment.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                answer\n                            \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    Optional\n                                disabledAt\n                            \n                            \n                                    \n                                documentId\n                            \n                            \n                                    \n                                    Optional\n                                enabled\n                            \n                            \n                                    \n                                    Optional\n                                error\n                            \n                            \n                                    \n                                    Optional\n                                hitCount\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                indexNodeHash\n                            \n                            \n                                    \n                                    Optional\n                                indexNodeId\n                            \n                            \n                                    \n                                    Optional\n                                keywords\n                            \n                            \n                                    \n                                position\n                            \n                            \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                tokens\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                wordCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落的答案内容', example: '这笔交易的人民币金额是贰佰元整，即200元。'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落内容', example: '这笔交易的人民币金额是多少？'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落的创建时间', example: '2024-11-04T08:42:31.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '知识库的唯一标识符', example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        disabledAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落被禁用的时间', example: '2024-11-04T09:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        documentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '关联的文档的唯一标识符', example: '6a220f65-82d2-4873-8228-0f634138ea0b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落是否启用', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落索引过程中的错误信息', example: 'Error encountered during indexing'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        hitCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落的命中次数', example: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落的唯一标识符', example: '84e8b555-f864-4d9e-9f16-cc8e6900a3ae'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        indexNodeHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '索引节点哈希值', example: 'c1e4e0560f31b6164bfb9ec9e91536a7581e80b6b96e788d93bededbb2d3d7f6'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        indexNodeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '索引节点 ID', example: '33531e13-d8ff-4c5a-96fe-2f36436ed7c0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.JsonValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落的关键词，通常为 JSON 对象', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落在文档中的位置', example: 13})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落的状态', example: 'completed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落的 token 数量', example: 15})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落的更新时间', example: '2024-11-04T09:00:00.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        wordCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '段落的单词数', example: 14})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/domain/segment.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Prisma } from '@prisma/client';\n\nexport class LeekSegment {\n  @ApiProperty({\n    description: '段落的唯一标识符',\n    example: '84e8b555-f864-4d9e-9f16-cc8e6900a3ae',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: '知识库的唯一标识符',\n    example: 'ca080e7e-9db2-4af8-9b78-b7615cf43272',\n  })\n  datasetId: string;\n\n  @ApiProperty({\n    description: '关联的文档的唯一标识符',\n    example: '6a220f65-82d2-4873-8228-0f634138ea0b',\n  })\n  documentId: string;\n\n  @ApiProperty({\n    description: '段落在文档中的位置',\n    example: 13,\n  })\n  position: number;\n\n  @ApiProperty({\n    description: '段落内容',\n    example: '这笔交易的人民币金额是多少？',\n  })\n  content: string;\n\n  @ApiProperty({\n    description: '段落的单词数',\n    example: 14,\n  })\n  wordCount: number;\n\n  @ApiProperty({\n    description: '段落的 token 数量',\n    example: 15,\n  })\n  tokens: number;\n\n  @ApiPropertyOptional({\n    description: '段落的关键词，通常为 JSON 对象',\n    example: ['金额', '人民币', '交易'],\n  })\n  keywords?: Prisma.JsonValue;\n\n  @ApiPropertyOptional({\n    description: '索引节点 ID',\n    example: '33531e13-d8ff-4c5a-96fe-2f36436ed7c0',\n  })\n  indexNodeId?: string;\n\n  @ApiPropertyOptional({\n    description: '索引节点哈希值',\n    example: 'c1e4e0560f31b6164bfb9ec9e91536a7581e80b6b96e788d93bededbb2d3d7f6',\n  })\n  indexNodeHash?: string;\n\n  @ApiPropertyOptional({\n    description: '段落的命中次数',\n    example: 0,\n  })\n  hitCount?: number;\n\n  @ApiPropertyOptional({\n    description: '段落是否启用',\n    example: true,\n  })\n  enabled?: boolean;\n\n  @ApiPropertyOptional({\n    description: '段落被禁用的时间',\n    example: '2024-11-04T09:00:00.000Z',\n  })\n  disabledAt?: Date;\n\n  @ApiPropertyOptional({\n    description: '段落的状态',\n    example: 'completed',\n  })\n  status?: string;\n\n  @ApiProperty({\n    description: '段落的创建时间',\n    example: '2024-11-04T08:42:31.000Z',\n  })\n  createdAt: Date;\n\n  @ApiPropertyOptional({\n    description: '段落索引过程中的错误信息',\n    example: 'Error encountered during indexing',\n  })\n  error?: string;\n\n  @ApiPropertyOptional({\n    description: '段落的答案内容',\n    example: '这笔交易的人民币金额是贰佰元整，即200元。',\n  })\n  answer?: string;\n\n  @ApiProperty({\n    description: '段落的更新时间',\n    example: '2024-11-04T09:00:00.000Z',\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekTextLoader.html":{"url":"classes/LeekTextLoader.html","title":"class - LeekTextLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekTextLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/text.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePathOrBlob: string | Blob)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/text.loader.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePathOrBlob\n                                                  \n                                                        \n                                                                        string | Blob\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TextLoader } from 'langchain/document_loaders/fs/text';\n\nexport class LeekTextLoader extends TextLoader {\n  constructor(filePathOrBlob: string | Blob) {\n    super(filePathOrBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeekUnstructuredLoader.html":{"url":"classes/LeekUnstructuredLoader.html","title":"class - LeekUnstructuredLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeekUnstructuredLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/langchain/loaders/unstructured.loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnstructuredLoader\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filepathOrBufferOptions: string | UnstructuredMemoryLoaderOptions, unstructuredOptions?: UnstructuredLoaderOptions | string)\n                    \n                \n                        \n                            \n                                Defined in src/langchain/loaders/unstructured.loader.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filepathOrBufferOptions\n                                                  \n                                                        \n                                                                        string | UnstructuredMemoryLoaderOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unstructuredOptions\n                                                  \n                                                        \n                                                                        UnstructuredLoaderOptions | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UnstructuredLoader,\n  UnstructuredLoaderOptions,\n  UnstructuredMemoryLoaderOptions,\n} from '@langchain/community/document_loaders/fs/unstructured';\n\nexport class LeekUnstructuredLoader extends UnstructuredLoader {\n  constructor(\n    filepathOrBufferOptions: string | UnstructuredMemoryLoaderOptions,\n    unstructuredOptions?: UnstructuredLoaderOptions | string,\n  ) {\n    super(filepathOrBufferOptions, unstructuredOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/logging.interceptor.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, Logger, NestInterceptor } from '@nestjs/common';\n\nimport chalk from 'chalk';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    if (context.getArgs()[3]) {\n      const { parentType } = context.getArgs()[3];\n      const fieldName = chalk.hex('#87e8de').bold(`${context.getArgs()[3].fieldName}`);\n      return next.handle().pipe(\n        tap(() => {\n          Logger.debug(`⛩  ${parentType} » ${fieldName}`, 'RESTful');\n        }),\n      );\n    }\n    const parentType = chalk.hex('#87e8de').bold(`${context.getArgs()[0].route.path}`);\n    const fieldName = chalk.hex('#87e8de').bold(`${context.getArgs()[0].route.stack[0].method}`);\n    return next.handle().pipe(\n      tap(() => {\n        Logger.debug(`⛩  ${parentType} » ${fieldName}`, 'RESTful');\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination$.html":{"url":"interfaces/Pagination$.html","title":"interface - Pagination$","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination$\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/create_paginated_response.util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaginationResponseDto } from '@leek/common';\n\ninterface Pagination$ {\n  currentPage: number;\n  pageSize: number;\n  count: number;\n}\n\n/**\n * Generates a paginated response structure.\n *\n * @template T - The type of data being paginated.\n * @param data - An array of data items to include in the paginated response.\n * @param pagination - An object containing details of the current pagination state.\n * @param pagination.currentPage - The current page number (1-based).\n * @param pagination.size - The number of items per page.\n * @param pagination.count - The total number of items across all pages.\n * @returns A structured object containing the paginated data and metadata.\n */\nexport function createPaginatedResponse(\n  data: T[],\n  { currentPage, pageSize, count }: Pagination$,\n): PaginationResponseDto {\n  const totalPage = Math.ceil(count / pageSize);\n\n  return {\n    data,\n    total: count,\n    pageSize,\n    currentPage,\n    totalPage,\n    hasNextPage: currentPage  1,\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                currentPage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                pageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The current page number', example: 1, type: Number})@IsOptional()@IsPositive()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The number of items per page', example: 10, type: Number})@IsOptional()@IsPositive()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Type } from 'class-transformer';\nimport { IsOptional, IsPositive } from 'class-validator';\n\nexport class PaginationDto {\n  @ApiPropertyOptional({\n    description: 'The current page number',\n    example: 1,\n    type: Number,\n  })\n  @IsOptional()\n  @IsPositive()\n  @Type(() => Number)\n  currentPage?: number;\n\n  @ApiPropertyOptional({\n    description: 'The number of items per page',\n    example: 10,\n    type: Number,\n  })\n  @IsOptional()\n  @IsPositive()\n  @Type(() => Number)\n  pageSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponseDto.html":{"url":"classes/PaginationResponseDto.html","title":"class - PaginationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                data\n                            \n                            \n                                hasNextPage\n                            \n                            \n                                hasPrevPage\n                            \n                            \n                                pageSize\n                            \n                            \n                                total\n                            \n                            \n                                totalPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasPrevPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponseDto {\n  data: T[];\n\n  total: number;\n  pageSize: number;\n  currentPage: number;\n  totalPage: number;\n  hasNextPage: boolean;\n  hasPrevPage: boolean;\n}\n\nexport function PaginationResponse(classReference: Type) {\n  abstract class Pagination {\n    @ApiProperty({\n      description: 'The data for the current page',\n      type: [classReference],\n    })\n    data: T[];\n\n    @ApiProperty({\n      description: 'The total number of items available',\n      example: 100,\n    })\n    total: number;\n\n    @ApiProperty({\n      description: 'The number of items per page',\n      example: 10,\n    })\n    pageSize: number;\n\n    @ApiProperty({\n      description: 'The current page number',\n      example: 1,\n    })\n    currentPage: number;\n\n    @ApiProperty({\n      description: 'The total number of pages available',\n      example: 10,\n    })\n    totalPage: number;\n\n    @ApiProperty({\n      description: 'Indicates if there is a next page',\n      example: true,\n    })\n    hasNextPage: boolean;\n\n    @ApiProperty({\n      description: 'Indicates if there is a previous page',\n      example: false,\n    })\n    hasPrevPage: boolean;\n  }\n\n  Object.defineProperty(Pagination, 'name', {\n    writable: false,\n    value: `Pagination${classReference.name}ResponseDto`,\n  });\n\n  return Pagination;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PreProcessingRuleDto.html":{"url":"classes/PreProcessingRuleDto.html","title":"class - PreProcessingRuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PreProcessingRuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/pre-processing-rule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '是否启用该预处理规则', example: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/pre-processing-rule.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '预处理规则的唯一标识符', enum: undefined, example: 'removeExtraSpaces'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/pre-processing-rule.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsString, IsBoolean } from 'class-validator';\n\n// 预处理规则 DTO\nexport class PreProcessingRuleDto {\n  @ApiProperty({\n    description: '预处理规则的唯一标识符',\n    enum: ['removeExtraSpaces', 'removeUrlsEmails'],\n    example: 'removeExtraSpaces',\n  })\n  @IsString()\n  id: string;\n\n  @ApiProperty({\n    description: '是否启用该预处理规则',\n    example: true,\n  })\n  @IsBoolean()\n  enabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    prisma\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cls: ClsService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cls\n                                                  \n                                                        \n                                                                    ClsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        prisma\n                    \n                \n\n                \n                    \n                        getprisma()\n                    \n                \n                            \n                                \n                                    Defined in src/prisma/prisma.service.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleDestroy, OnModuleInit } from '@nestjs/common';\n\nimport { PrismaClient } from '@prisma/client';\nimport { ClsService } from 'nestjs-cls';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(private readonly cls: ClsService) {\n    super();\n  }\n\n  get prisma(): PrismaService {\n    return this.cls.get('prisma') || this;\n  }\n\n  public async onModuleInit() {\n    try {\n      await this.$connect();\n    } catch (error) {\n      Logger.error(error, 'PrismaService');\n    }\n  }\n\n  public async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessDocumentService.html":{"url":"injectables/ProcessDocumentService.html","title":"injectable - ProcessDocumentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessDocumentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/services/process-document.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDocumentsByPreprocessingRules\n                            \n                            \n                                    Async\n                                extractDocumentsFromCOS\n                            \n                            \n                                    Private\n                                    Async\n                                generateQaDocumentsForBatch\n                            \n                            \n                                    Async\n                                generateQaDocumentsForSingle\n                            \n                            \n                                    Async\n                                processDocumentsWithRules\n                            \n                            \n                                    Async\n                                splitDocumentsBySegmentationRules\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configureService: ConfigureAdapter, LLMGeneratorService: LLMGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/services/process-document.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configureService\n                                                  \n                                                        \n                                                                        ConfigureAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LLMGeneratorService\n                                                  \n                                                        \n                                                                        LLMGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDocumentsByPreprocessingRules\n                        \n                    \n                \n            \n            \n                \ncleanDocumentsByPreprocessingRules(documents: Document[], preProcessingRules: ProcessRuleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/process-document.service.ts:99\n                        \n                    \n\n\n            \n                \n                        清理文档\n根据预处理规则清理文档内容。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                documents\n                                            \n                                                        Document[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n需要清理的文档数组。\n\n\n                                            \n                                        \n                                        \n                                                preProcessingRules\n                                            \n                                                            ProcessRuleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n要应用的预处理规则。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Document[]\n\n                        \n                            \n                                清理后的文档数组。\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        extractDocumentsFromCOS\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractDocumentsFromCOS(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/process-document.service.ts:161\n                        \n                    \n\n\n            \n                \n                        从腾讯云 COS 提取文档\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档在 COS 中的 Key。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                提取的文档数组。\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateQaDocumentsForBatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateQaDocumentsForBatch(documents: Document[], docLanguage: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/process-document.service.ts:204\n                        \n                    \n\n\n            \n                \n                        批量生成问答对 (QA)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                documents\n                                            \n                                                        Document[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \n用于生成 QA 的文档数组。\n\n\n                                            \n                                        \n                                        \n                                                docLanguage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'English'\n                                            \n\n                                            \n                                                    \nQA 对的语言。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                生成的 QA 文档数组。\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateQaDocumentsForSingle\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateQaDocumentsForSingle(document: Document, docLanguage: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/process-document.service.ts:179\n                        \n                    \n\n\n            \n                \n                        生成文档的问答对 (QA)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                document\n                                            \n                                                        Document\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \n用于生成 QA 的文档。\n\n\n                                            \n                                        \n                                        \n                                                docLanguage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'English'\n                                            \n\n                                            \n                                                    \nQA 对的语言。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                生成的 QA 文档数组。\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processDocumentsWithRules\n                        \n                    \n                \n            \n            \n                \n                        \n                    processDocumentsWithRules(key: string, processRule: ProcessRuleDto, docForm?: string, docLanguage?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/process-document.service.ts:32\n                        \n                    \n\n\n            \n                \n                        处理并分段文档\n根据提供的规则，从腾讯云 COS 提取文档，对其进行预处理、分段，必要时生成问答对 (QA)。\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n文档在腾讯云 COS 中的唯一标识符 (Key)。\n\n\n                                            \n                                        \n                                        \n                                                processRule\n                                            \n                                                            ProcessRuleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n分段和预处理规则。\n\n\n                                            \n                                        \n                                        \n                                                docForm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选，文档形式（例如 QA 索引类型）。\n\n\n                                            \n                                        \n                                        \n                                                docLanguage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n可选，文档语言，用于生成 QA 对。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                包含处理后的文档数组和应用的规则。\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        splitDocumentsBySegmentationRules\n                        \n                    \n                \n            \n            \n                \n                        \n                    splitDocumentsBySegmentationRules(documents: Document[], segmentation: ProcessRuleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/process-document.service.ts:134\n                        \n                    \n\n\n            \n                \n                        根据分段规则拆分文档\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                documents\n                                            \n                                                        Document[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n需要拆分的文档数组。\n\n\n                                            \n                                        \n                                        \n                                                segmentation\n                                            \n                                                            ProcessRuleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n分段规则。\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                拆分后的文档数组。\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Document } from '@langchain/core/documents';\nimport pLimit from 'p-limit';\n\nimport { ConfigureAdapter } from '@leek/configure';\nimport { SegmentationEnum, DEFAULT_SEGMENTATION_RULE, DEFAULT_PRE_PROCESSING_RULES, IndexEnum } from '@leek/constants';\nimport { COSLoader, recursiveChunkSplitter } from '@leek/langchain';\nimport { createHash, getExtensions, trimLeadingPunctuation } from '@leek/utils';\n\nimport { LLMGeneratorService } from './llm-generator.service';\nimport { ProcessRuleDto } from '../dto/process-rule.dto';\n\n@Injectable()\nexport class ProcessDocumentService {\n  constructor(\n    private readonly configureService: ConfigureAdapter,\n    private readonly LLMGeneratorService: LLMGeneratorService,\n  ) {}\n\n  /**\n   * 处理并分段文档\n   *\n   * 根据提供的规则，从腾讯云 COS 提取文档，对其进行预处理、分段，必要时生成问答对 (QA)。\n   *\n   * @param {string} key - 文档在腾讯云 COS 中的唯一标识符 (Key)。\n   * @param {ProcessRuleDto} processRule - 分段和预处理规则。\n   * @param {string} [docForm] - 可选，文档形式（例如 QA 索引类型）。\n   * @param {string} [docLanguage] - 可选，文档语言，用于生成 QA 对。\n   * @returns {Promise} 包含处理后的文档数组和应用的规则。\n   */\n  async processDocumentsWithRules(\n    key: string,\n    processRule: ProcessRuleDto,\n    docForm?: string,\n    docLanguage?: string,\n  ): Promise {\n    // 从 COS 提取原始文档\n    const docs = await this.extractDocumentsFromCOS(key);\n\n    let { preProcessingRules, segmentation } = processRule;\n\n    if (processRule.mode === SegmentationEnum.Automatic) {\n      preProcessingRules = DEFAULT_PRE_PROCESSING_RULES;\n      segmentation = DEFAULT_SEGMENTATION_RULE;\n    }\n\n    let splitDocs = docs;\n\n    if (docForm === IndexEnum.QA_INDEX && getExtensions(key) === 'xlsx') {\n      splitDocs = docs.map((doc) => {\n        const [pageContent, answer] = doc.pageContent.split('>>');\n        return new Document({\n          pageContent,\n          metadata: {\n            ...doc.metadata,\n            answer,\n            hash: createHash(pageContent),\n          },\n        });\n      });\n    } else {\n      // 根据分段设置拆分文档\n      splitDocs = await this.splitDocumentsBySegmentationRules(docs, segmentation);\n    }\n\n    splitDocs = await this.splitDocumentsBySegmentationRules(docs, segmentation);\n\n    // 如果文档形式为 QA 索引类型，则生成 QA 对\n    if (docForm === IndexEnum.QA_INDEX) {\n      splitDocs = await this.generateQaDocumentsForBatch(splitDocs, docLanguage);\n    }\n\n    // 应用预处理规则清理分段文档\n    const processedDocuments = this.cleanDocumentsByPreprocessingRules(splitDocs, preProcessingRules);\n\n    return {\n      processedDocuments,\n      processedRule: {\n        preProcessingRules,\n        segmentation,\n        mode: processRule.mode,\n      },\n    };\n  }\n\n  /**\n   * 清理文档\n   *\n   * 根据预处理规则清理文档内容。\n   *\n   * @param {Document[]} documents - 需要清理的文档数组。\n   * @param {ProcessRuleDto['preProcessingRules']} preProcessingRules - 要应用的预处理规则。\n   * @returns {Document[]} 清理后的文档数组。\n   */\n  cleanDocumentsByPreprocessingRules(\n    documents: Document[],\n    preProcessingRules: ProcessRuleDto['preProcessingRules'],\n  ): Document[] {\n    const rulesHandlers: Record string> = {\n      removeExtraSpaces: (text) => text.replace(/\\s+/g, ' ').trim(),\n      removeUrlsEmails: (text) => text.replace(/https?:\\/\\/[^\\s]+|www\\.[^\\s]+|[\\w.-]+@[\\w.-]+\\.[a-z]{2,}/gi, ''),\n    };\n\n    // Filter enabled rules and collect the corresponding handler functions\n    const handlers = preProcessingRules\n      .filter((op) => op.enabled && rulesHandlers[op.id])\n      .map((op) => rulesHandlers[op.id]);\n\n    // Filter enabled rules and collect the corresponding handler functions\n    return documents.map((document) => {\n      const updatedContent = handlers.reduce((content, handler) => handler(content), document.pageContent);\n      const pageContent = trimLeadingPunctuation(updatedContent);\n      return new Document({\n        pageContent,\n        metadata: {\n          ...document.metadata,\n          hash: createHash(pageContent),\n        },\n      });\n    });\n  }\n\n  /**\n   * 根据分段规则拆分文档\n   *\n   * @param {Document[]} documents - 需要拆分的文档数组。\n   * @param {ProcessRuleDto['segmentation']} segmentation - 分段规则。\n   * @returns {Promise} 拆分后的文档数组。\n   */\n  async splitDocumentsBySegmentationRules(\n    documents: Document[],\n    segmentation: ProcessRuleDto['segmentation'],\n  ): Promise {\n    const splitDocs = await recursiveChunkSplitter(documents, {\n      chunkSize: segmentation.maxTokens,\n      chunkOverlap: segmentation.chunkOverlap,\n      separators: segmentation.separator.split(','),\n    });\n    // Add a hash for each chunk for tracking and uniqueness\n    return splitDocs.map(\n      (doc) =>\n        new Document({\n          pageContent: doc.pageContent,\n          metadata: {\n            ...doc.metadata,\n          },\n        }),\n    );\n  }\n\n  /**\n   * 从腾讯云 COS 提取文档\n   *\n   * @param {string} key - 文档在 COS 中的 Key。\n   * @returns {Promise} 提取的文档数组。\n   */\n  async extractDocumentsFromCOS(key: string): Promise {\n    const loader = new COSLoader({\n      SecretId: this.configureService.TENCENT.SECRET_ID,\n      SecretKey: this.configureService.TENCENT.SECRET_KEY,\n      Bucket: this.configureService.TENCENT.COS_BUCKET,\n      Region: this.configureService.TENCENT.COS_REGION,\n      Key: key,\n    });\n    return loader.load();\n  }\n\n  /**\n   * 生成文档的问答对 (QA)\n   *\n   * @param {Document} document - 用于生成 QA 的文档。\n   * @param {string} [docLanguage='English'] - QA 对的语言。\n   * @returns {Promise} 生成的 QA 文档数组。\n   */\n  async generateQaDocumentsForSingle(document: Document, docLanguage: string = 'English'): Promise {\n    const documents = await this.LLMGeneratorService.generateQaDocumentFromTextAndLanguage(\n      document.pageContent,\n      docLanguage,\n    );\n    return documents.map(\n      (doc) =>\n        new Document({\n          pageContent: doc.question,\n          metadata: {\n            ...document.metadata,\n            answer: doc.answer,\n            hash: createHash(doc.question),\n          },\n        }),\n    );\n  }\n\n  /**\n   * 批量生成问答对 (QA)\n   *\n   * @param {Document[]} documents - 用于生成 QA 的文档数组。\n   * @param {string} [docLanguage='English'] - QA 对的语言。\n   * @returns {Promise} 生成的 QA 文档数组。\n   */\n  private async generateQaDocumentsForBatch(\n    documents: Document[],\n    docLanguage: string = 'English',\n  ): Promise {\n    const limit = pLimit(10); // Limit concurrency to avoid overloading resources\n\n    const tasks = documents.map((doc) => limit(async () => this.generateQaDocumentsForSingle(doc, docLanguage)));\n\n    const results = await Promise.all(tasks);\n    return results.flat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessRuleDto.html":{"url":"classes/ProcessRuleDto.html","title":"class - ProcessRuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessRuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/process-rule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                mode\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                preProcessingRules\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                segmentation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '清洗、分段模式，automatic 为自动，custom 为自定义', enum: SegmentationEnum, example: undefined})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/process-rule.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        preProcessingRules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PreProcessingRuleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '自定义规则，自动模式下为空', type: () => })@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/process-rule.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        segmentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentationRuleDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '分段规则配置', type: () => SegmentationRuleDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/process-rule.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Type } from 'class-transformer';\nimport { IsString, IsArray, ValidateNested, IsOptional } from 'class-validator';\n\nimport { SegmentationEnum } from '@leek/constants';\n\nimport { PreProcessingRuleDto } from './pre-processing-rule.dto';\nimport { SegmentationRuleDto } from './segmentation-rule.dto';\n\nexport class ProcessRuleDto {\n  @ApiProperty({\n    description: '清洗、分段模式，automatic 为自动，custom 为自定义',\n    enum: SegmentationEnum,\n    example: SegmentationEnum.Automatic,\n  })\n  @IsString()\n  mode: string;\n\n  @ApiPropertyOptional({\n    description: '自定义规则，自动模式下为空',\n    type: () => [PreProcessingRuleDto],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => PreProcessingRuleDto)\n  preProcessingRules?: PreProcessingRuleDto[];\n\n  @ApiPropertyOptional({\n    description: '分段规则配置',\n    type: () => SegmentationRuleDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => SegmentationRuleDto)\n  segmentation?: SegmentationRuleDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryDocumentDto.html":{"url":"classes/QueryDocumentDto.html","title":"class - QueryDocumentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryDocumentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/query-document.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(PaginationDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                archived\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                createdFrom\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                dataSourceType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docForm\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                docType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                enabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                q\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        archived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档是否归档', example: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的创建来源', example: undefined, enum: CreatedFromEnum})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        dataSourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '数据源类型', example: undefined, enum: DataSourceEnum})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的形式（如文本、QA）', example: undefined, enum: IndexEnum})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的语言', example: 'Chinese'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        docType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档的类型', example: 'PDF'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文档是否启用', example: true})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        q\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Query string to search for in name, email, or phone fields', type: String, example: 'john'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-document.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\n\nimport { IsString, IsOptional, IsBoolean } from 'class-validator';\n\nimport { PaginationDto } from '@leek/common';\nimport { DataSourceEnum, CreatedFromEnum, IndexEnum } from '@leek/constants';\n\nexport class QueryDocumentDto extends PartialType(PaginationDto) {\n  @ApiPropertyOptional({\n    description: 'Query string to search for in name, email, or phone fields',\n    type: String,\n    example: 'john',\n  })\n  @IsOptional()\n  @IsString()\n  q?: string;\n\n  @ApiPropertyOptional({\n    description: '数据源类型',\n    example: DataSourceEnum.FILE,\n    enum: DataSourceEnum,\n  })\n  @IsOptional()\n  @IsString()\n  dataSourceType?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的创建来源',\n    example: CreatedFromEnum.WEB,\n    enum: CreatedFromEnum,\n  })\n  @IsOptional()\n  @IsString()\n  createdFrom?: string;\n\n  @ApiPropertyOptional({\n    description: '文档是否启用',\n    example: true,\n  })\n  @IsOptional()\n  @IsBoolean()\n  enabled?: boolean = true;\n\n  @ApiPropertyOptional({\n    description: '文档是否归档',\n    example: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  archived?: boolean = false;\n\n  @ApiPropertyOptional({\n    description: '文档的类型',\n    example: 'PDF',\n  })\n  @IsOptional()\n  @IsString()\n  docType?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的形式（如文本、QA）',\n    example: IndexEnum.PARAGRAPH_INDEX,\n    enum: IndexEnum,\n  })\n  @IsOptional()\n  @IsString()\n  docForm?: string;\n\n  @ApiPropertyOptional({\n    description: '文档的语言',\n    example: 'Chinese',\n  })\n  @IsOptional()\n  @IsString()\n  docLanguage?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuerySegmentDto.html":{"url":"classes/QuerySegmentDto.html","title":"class - QuerySegmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuerySegmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/query-segment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(PaginationDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                enabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                q\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '段落是否启用', example: true})@IsOptional()@Transform( => )@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-segment.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        q\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Query string to search for in name, email, or phone fields', example: 'john'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/query-segment.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\n\nimport { Transform } from 'class-transformer';\nimport { IsString, IsOptional, IsBoolean } from 'class-validator';\n\nimport { PaginationDto } from '@leek/common';\n\nexport class QuerySegmentDto extends PartialType(PaginationDto) {\n  @ApiPropertyOptional({\n    description: 'Query string to search for in name, email, or phone fields',\n    example: 'john',\n  })\n  @IsOptional()\n  @IsString()\n  q?: string;\n\n  @ApiPropertyOptional({\n    description: '段落是否启用',\n    example: true,\n  })\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true';\n    }\n    return value;\n  })\n  @IsBoolean()\n  enabled?: boolean = true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationaLeekFilesPersistenceModule.html":{"url":"modules/RelationaLeekFilesPersistenceModule.html","title":"module - RelationaLeekFilesPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationaLeekFilesPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationaLeekFilesPersistenceModule\n\n\n\ncluster_RelationaLeekFilesPersistenceModule_imports\n\n\n\ncluster_RelationaLeekFilesPersistenceModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nRelationaLeekFilesPersistenceModule\n\nRelationaLeekFilesPersistenceModule\n\nRelationaLeekFilesPersistenceModule -->\n\nPrismaModule->RelationaLeekFilesPersistenceModule\n\n\n\n\n\nFilesRepository \n\nFilesRepository \n\nFilesRepository  -->\n\nRelationaLeekFilesPersistenceModule->FilesRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/infrastructure/persistence/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { PrismaModule } from '@leek/prisma';\n\nimport { FilesRepository } from './files.repository';\nimport { FilesRelationalRepository } from './repositories/files.repository';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [\n    {\n      provide: FilesRepository,\n      useClass: FilesRelationalRepository,\n    },\n  ],\n  exports: [FilesRepository],\n})\nexport class RelationaLeekFilesPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalAssistantPersistenceModule.html":{"url":"modules/RelationalAssistantPersistenceModule.html","title":"module - RelationalAssistantPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalAssistantPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalAssistantPersistenceModule\n\n\n\ncluster_RelationalAssistantPersistenceModule_imports\n\n\n\ncluster_RelationalAssistantPersistenceModule_exports\n\n\n\n\nConfigureModule\n\nConfigureModule\n\n\n\nRelationalAssistantPersistenceModule\n\nRelationalAssistantPersistenceModule\n\nRelationalAssistantPersistenceModule -->\n\nConfigureModule->RelationalAssistantPersistenceModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nRelationalAssistantPersistenceModule -->\n\nPrismaModule->RelationalAssistantPersistenceModule\n\n\n\n\n\nAssistantRepository \n\nAssistantRepository \n\nAssistantRepository  -->\n\nRelationalAssistantPersistenceModule->AssistantRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/assistants/infrastructure/persistence/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigureModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssistantRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigureModule } from '@leek/configure';\nimport { PrismaModule } from '@leek/prisma';\n\nimport { AssistantRepository } from './assistants.repository';\nimport { AssistantRelationalRepository } from './repositories/assistants.repository';\n\n@Module({\n  imports: [PrismaModule, ConfigureModule],\n  providers: [\n    {\n      provide: AssistantRepository,\n      useClass: AssistantRelationalRepository,\n    },\n  ],\n  exports: [AssistantRepository],\n})\nexport class RelationalAssistantPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalDatasetsPersistenceModule.html":{"url":"modules/RelationalDatasetsPersistenceModule.html","title":"module - RelationalDatasetsPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalDatasetsPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalDatasetsPersistenceModule\n\n\n\ncluster_RelationalDatasetsPersistenceModule_exports\n\n\n\ncluster_RelationalDatasetsPersistenceModule_imports\n\n\n\n\nConfigureModule\n\nConfigureModule\n\n\n\nRelationalDatasetsPersistenceModule\n\nRelationalDatasetsPersistenceModule\n\nRelationalDatasetsPersistenceModule -->\n\nConfigureModule->RelationalDatasetsPersistenceModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nRelationalDatasetsPersistenceModule -->\n\nPrismaModule->RelationalDatasetsPersistenceModule\n\n\n\n\n\nDatasetProcessRuleRepository \n\nDatasetProcessRuleRepository \n\nDatasetProcessRuleRepository  -->\n\nRelationalDatasetsPersistenceModule->DatasetProcessRuleRepository \n\n\n\n\n\nDatasetRepository \n\nDatasetRepository \n\nDatasetRepository  -->\n\nRelationalDatasetsPersistenceModule->DatasetRepository \n\n\n\n\n\nDocumentRepository \n\nDocumentRepository \n\nDocumentRepository  -->\n\nRelationalDatasetsPersistenceModule->DocumentRepository \n\n\n\n\n\nDocumentSegmentRepository \n\nDocumentSegmentRepository \n\nDocumentSegmentRepository  -->\n\nRelationalDatasetsPersistenceModule->DocumentSegmentRepository \n\n\n\n\n\nEmbeddingRepository \n\nEmbeddingRepository \n\nEmbeddingRepository  -->\n\nRelationalDatasetsPersistenceModule->EmbeddingRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/datasets/infrastructure/persistence/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigureModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatasetProcessRuleRepository\n                        \n                        \n                            DatasetRepository\n                        \n                        \n                            DocumentRepository\n                        \n                        \n                            DocumentSegmentRepository\n                        \n                        \n                            EmbeddingRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigureModule } from '@leek/configure';\nimport { PrismaModule } from '@leek/prisma';\n\nimport { DatasetProcessRuleRepository } from './dataset-process-rule.repository';\nimport { DatasetRepository } from './dataset.repository';\nimport { DocumentSegmentRepository } from './document-segment.repository';\nimport { DocumentRepository } from './document.repository';\nimport { EmbeddingRepository } from './embedding.repository';\nimport { DatasetProcessRuleRelationalRepository } from './repositories/dataset-process-rule.repository';\nimport { DatasetRelationalRepository } from './repositories/dataset.repository';\nimport { DocumentSegmentRelationalRepository } from './repositories/document-segment.repository';\nimport { DocumentRelationalRepository } from './repositories/document.repository';\nimport { EmbeddingRelationalRepository } from './repositories/embedding.repository';\n\n@Module({\n  imports: [PrismaModule, ConfigureModule],\n  providers: [\n    {\n      provide: DatasetRepository,\n      useClass: DatasetRelationalRepository,\n    },\n    {\n      provide: DocumentRepository,\n      useClass: DocumentRelationalRepository,\n    },\n    {\n      provide: DocumentSegmentRepository,\n      useClass: DocumentSegmentRelationalRepository,\n    },\n    {\n      provide: DatasetProcessRuleRepository,\n      useClass: DatasetProcessRuleRelationalRepository,\n    },\n    {\n      provide: EmbeddingRepository,\n      useClass: EmbeddingRelationalRepository,\n    },\n  ],\n  exports: [\n    DatasetRepository,\n    DocumentRepository,\n    DocumentSegmentRepository,\n    DatasetProcessRuleRepository,\n    EmbeddingRepository,\n  ],\n})\nexport class RelationalDatasetsPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseIndexingEstimateDto.html":{"url":"classes/ResponseIndexingEstimateDto.html","title":"class - ResponseIndexingEstimateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseIndexingEstimateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/response-indexing-estimate.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                chunkCount\n                            \n                            \n                                    \n                                chunkPreview\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        chunkCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '基于分段规则，文档被分割后的总块数。如果文档没有分段，则此值为0', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/response-indexing-estimate.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        chunkPreview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档分段后的前几页或内容片段的预览，帮助查看文档如何被分割', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/response-indexing-estimate.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ResponseIndexingEstimateDto {\n  @ApiProperty({\n    description: '基于分段规则，文档被分割后的总块数。如果文档没有分段，则此值为0',\n    example: 2,\n  })\n  chunkCount: number;\n\n  @ApiProperty({\n    description: '文档分段后的前几页或内容片段的预览，帮助查看文档如何被分割',\n    example: ['这是文档的第一个分段预览。', '这是文档的第二个分段预览。'],\n  })\n  chunkPreview: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RetrievalController.html":{"url":"controllers/RetrievalController.html","title":"controller - RetrievalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RetrievalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/controllers/retrieval.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                datasets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                rag\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                similaritySearchVectorWithScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        rag\n                        \n                    \n                \n            \n            \n                \n                        \n                    rag(datasetId: string, conversationDto: ConversationDto, fallbackMessage?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':dataset_id/rag')@Sse()@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '检索增强生成（RAG）', description: '从知识库中检索与查询相关的内容，并基于检索结果生成回答或摘要，适用于问答和智能生成场景。'})@ApiParam({name: 'dataset_id', description: '知识库的 UUID，用于指定目标知识库。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/retrieval.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                conversationDto\n                                            \n                                                            ConversationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fallbackMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        similaritySearchVectorWithScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    similaritySearchVectorWithScore(datasetId: string, similaritySearchDto: SimilaritySearchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':dataset_id/retrieve')@Version('1')@HttpCode(HttpStatus.OK)@ApiOperation({summary: '检索知识库内容', description: '根据查询条件，从指定的知识库中检索相关内容，支持返回文档列表或带相似度分数的文档。'})@ApiOkResponse({description: '返回与查询条件匹配的内容，可以是文档列表或带相似度分数的文档列表。', type: undefined})@ApiParam({name: 'dataset_id', description: '知识库的 UUID，用于指定目标知识库。'})\n                \n            \n\n                    \n                        \n                            Defined in src/datasets/controllers/retrieval.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                similaritySearchDto\n                                            \n                                                            SimilaritySearchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Param, ParseUUIDPipe, Post, Sse, Version } from '@nestjs/common';\nimport { ApiOkResponse, ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\n\nimport { ConversationDto } from '@leek/assistants/dto/conversation.dto';\n\nimport { DocumentDto } from '../dto/document.dto';\nimport { SimilaritySearchDto } from '../dto/similarity-search.dto';\nimport { RetrievalService } from '../services/retrieval.service';\n\n@ApiTags('知识库检索与测试')\n@Controller('datasets')\nexport class RetrievalController {\n  constructor(private readonly retrievalService: RetrievalService) {}\n\n  // @Post(':dataset_id/hit_testing')\n  // @Version('1')\n  // @HttpCode(HttpStatus.OK)\n  // @ApiOperation({\n  //   summary: '命中测试',\n  //   description: '对指定的知识库进行命中测试，验证查询条件是否能检索到目标内容。',\n  // })\n  // @ApiParam({\n  //   name: 'dataset_id',\n  //   description: '知识库的 UUID，用于指定目标知识库。',\n  // })\n  // hitTesting(@Param('dataset_id', new ParseUUIDPipe()) _datasetId: string) {}\n\n  @Post(':dataset_id/retrieve')\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '检索知识库内容',\n    description: '根据查询条件，从指定的知识库中检索相关内容，支持返回文档列表或带相似度分数的文档。',\n  })\n  @ApiOkResponse({\n    description: '返回与查询条件匹配的内容，可以是文档列表或带相似度分数的文档列表。',\n    type: [DocumentDto],\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的 UUID，用于指定目标知识库。',\n  })\n  async similaritySearchVectorWithScore(\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Body() similaritySearchDto: SimilaritySearchDto,\n  ): Promise {\n    return this.retrievalService.similaritySearchVectorWithScore(datasetId, similaritySearchDto);\n  }\n\n  @Post(':dataset_id/rag')\n  @Sse()\n  @Version('1')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: '检索增强生成（RAG）',\n    description: '从知识库中检索与查询相关的内容，并基于检索结果生成回答或摘要，适用于问答和智能生成场景。',\n  })\n  @ApiParam({\n    name: 'dataset_id',\n    description: '知识库的 UUID，用于指定目标知识库。',\n  })\n  rag(\n    @Param('dataset_id', new ParseUUIDPipe()) datasetId: string,\n    @Body() conversationDto: ConversationDto,\n    @Body('fallbackMessage') fallbackMessage?: string,\n  ) {\n    return this.retrievalService.RAG(datasetId, conversationDto, fallbackMessage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RetrievalModelDto.html":{"url":"classes/RetrievalModelDto.html","title":"class - RetrievalModelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RetrievalModelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/retrieval-model.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                scoreThreshold\n                            \n                            \n                                    \n                                    \n                                    \n                                scoreThresholdEnabled\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                topK\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        scoreThreshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '匹配分数的最低阈值，仅分数高于该值的结果会被返回', example: 0.5})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/retrieval-model.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        scoreThresholdEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '是否启用分数阈值过滤功能', example: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/retrieval-model.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        topK\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '检索结果的最大条数，默认为 3', example: 3})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/retrieval-model.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { IsNumber, IsOptional, IsBoolean } from 'class-validator';\n\nexport class RetrievalModelDto {\n  @ApiPropertyOptional({\n    description: '检索结果的最大条数，默认为 3',\n    example: 3,\n  })\n  @IsOptional()\n  @IsNumber()\n  topK?: number;\n\n  @ApiPropertyOptional({\n    description: '匹配分数的最低阈值，仅分数高于该值的结果会被返回',\n    example: 0.5,\n  })\n  @IsOptional()\n  @IsNumber()\n  scoreThreshold: number;\n\n  @ApiPropertyOptional({\n    description: '是否启用分数阈值过滤功能',\n    example: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  scoreThresholdEnabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RetrievalService.html":{"url":"injectables/RetrievalService.html","title":"injectable - RetrievalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RetrievalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/services/retrieval.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                RAG\n                            \n                            \n                                    Async\n                                similaritySearchVectorWithScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configureService: ConfigureAdapter, embeddingRepository: EmbeddingRepository, datasetRepository: DatasetRepository, documentSegmentRepository: DocumentSegmentRepository)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/services/retrieval.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configureService\n                                                  \n                                                        \n                                                                        ConfigureAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        embeddingRepository\n                                                  \n                                                        \n                                                                        EmbeddingRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetRepository\n                                                  \n                                                        \n                                                                        DatasetRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        documentSegmentRepository\n                                                  \n                                                        \n                                                                        DocumentSegmentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        RAG\n                        \n                    \n                \n            \n            \n                \n                        \n                    RAG(datasetId: string, conversationDto: ConversationDto, fallbackMessage?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/retrieval.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Handles the RAG (Retrieval-Augmented Generation) process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                conversationDto\n                                            \n                                                            ConversationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fallbackMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An Observable that streams the generated response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        similaritySearchVectorWithScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    similaritySearchVectorWithScore(datasetId: string, similaritySearchDto: SimilaritySearchDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/datasets/services/retrieval.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Performs a similarity search using vector embeddings and returns matching documents with optional scores.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the dataset to search within.\n\n\n                                            \n                                        \n                                        \n                                                similaritySearchDto\n                                            \n                                                            SimilaritySearchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe query details for similarity search.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA list of matching documents or documents with scores.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Document } from '@langchain/core/documents';\nimport { StringOutputParser } from '@langchain/core/output_parsers';\nimport { isEmpty } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { ConversationDto } from '@leek/assistants/dto/conversation.dto';\nimport { ConfigureAdapter } from '@leek/configure';\nimport { END_COMPLETION, IndexEnum } from '@leek/constants';\nimport { initEmbeddings, initModels } from '@leek/langchain';\n\nimport { DocumentDto } from '../dto/document.dto';\nimport { RetrievalModelDto } from '../dto/retrieval-model.dto';\nimport { SimilaritySearchDto } from '../dto/similarity-search.dto';\nimport { DatasetRepository } from '../infrastructure/persistence/dataset.repository';\nimport { DocumentSegmentRepository } from '../infrastructure/persistence/document-segment.repository';\nimport { EmbeddingRepository } from '../infrastructure/persistence/embedding.repository';\nimport { RAGChatHistoryPrompt } from '../shared/prompts/rag-chat-history.prompt';\nimport { generateVectorClassPrefixByDatasetId } from '../shared/utils/generate-vector-class-prefix-by-dataset-id.util';\n\n@Injectable()\nexport class RetrievalService {\n  constructor(\n    private readonly configureService: ConfigureAdapter,\n    private readonly embeddingRepository: EmbeddingRepository,\n    private readonly datasetRepository: DatasetRepository,\n    private readonly documentSegmentRepository: DocumentSegmentRepository,\n  ) {}\n\n  /**\n   * Performs a similarity search using vector embeddings and returns matching documents with optional scores.\n   *\n   * @param {string} datasetId - The ID of the dataset to search within.\n   * @param {SimilaritySearchDto} similaritySearchDto - The query details for similarity search.\n   * @returns {Promise} - A list of matching documents or documents with scores.\n   */\n  async similaritySearchVectorWithScore(\n    datasetId: string,\n    similaritySearchDto: SimilaritySearchDto,\n  ): Promise {\n    let { retrievalModel } = similaritySearchDto;\n\n    // If no retrieval model is provided, fetch the default retrieval model from the dataset\n    if (isEmpty(retrievalModel)) {\n      const dataset = await this.datasetRepository.findDatasetById(datasetId);\n      retrievalModel = dataset.retrievalModel as unknown as RetrievalModelDto;\n    }\n\n    const { topK, scoreThreshold, scoreThresholdEnabled } = retrievalModel;\n\n    // Initialize the embedding instance with OpenAI API configuration\n    const embeddingInstance = initEmbeddings();\n\n    // Generate a vector for the input query using the embedding instance\n    const vector = await embeddingInstance.embedQuery(similaritySearchDto.query);\n\n    console.log(generateVectorClassPrefixByDatasetId(datasetId));\n\n    // Perform similarity search in the embedding repository\n    const embeddings = await this.embeddingRepository.similaritySearchVectorWithScore(\n      vector,\n      generateVectorClassPrefixByDatasetId(datasetId),\n      topK,\n      scoreThresholdEnabled ? scoreThreshold : undefined, // Optional score threshold for filtering results\n    );\n\n    // Map the embedding metadata to document objects\n    const documents = embeddings.map((embeddingMetadata) => {\n      const { content, answer, docForm, _distance, ...metadata } = embeddingMetadata;\n\n      const document = new Document({\n        pageContent: docForm === IndexEnum.PARAGRAPH_INDEX ? content : answer,\n        metadata,\n      });\n\n      // If score threshold is enabled, return the document with its distance score\n      if (scoreThresholdEnabled) {\n        return [document, _distance];\n      }\n\n      return document;\n    }) as DocumentDto[] | [DocumentDto, number][];\n\n    // Update hit count for the matched document segments by dataset ID and hashes\n    await this.documentSegmentRepository.updateManyHitCountByDatasetIdAndHashes(\n      embeddings.map((item) => item.hash),\n      datasetId,\n    );\n\n    return documents;\n  }\n\n  /**\n   * Handles the RAG (Retrieval-Augmented Generation) process.\n   *\n   * @returns An Observable that streams the generated response.\n   */\n  async RAG(datasetId: string, conversationDto: ConversationDto, fallbackMessage?: string) {\n    const { messages } = conversationDto;\n\n    const query = messages[0].content.parts[0];\n\n    // Perform similarity search and retrieve relevant documents\n    const documents = await this.similaritySearchVectorWithScore(datasetId, {\n      query,\n    });\n\n    //  Build the context from the retrieved documents\n    const context = documents.map((document) => document.pageContent).join('\\n\\n');\n\n    // Construct the chat history, with a default message if no history exists\n    let chat_history = 'No chat history available';\n    if (!isEmpty(messages)) {\n      chat_history = messages.map((item) => `${item.author.role}: ${item.content.parts[0]}`).join('\\n');\n    }\n\n    // Create a processing chain with the RAG prompt and a string output parser\n    const chain = RAGChatHistoryPrompt.pipe(initModels({ model: 'gpt-4o', streaming: true })).pipe(\n      new StringOutputParser(),\n    );\n    const stream = await chain.stream({\n      context,\n      question: query,\n      chat_history,\n      fallbackMessage: fallbackMessage || `you don't know`,\n    });\n    return new Observable((subscriber) => {\n      (async () => {\n        // Stream chunks of data as they are generated\n        for await (const chunk of stream) {\n          subscriber.next({\n            data: JSON.stringify({\n              content: chunk,\n            }),\n          });\n        }\n        // Send a final completion marker\n        subscriber.next({ data: END_COMPLETION });\n        setTimeout(() => {\n          subscriber.complete();\n        }, 100);\n      })();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentationRuleDto.html":{"url":"classes/SegmentationRuleDto.html","title":"class - SegmentationRuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentationRuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/segmentation-rule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                chunkOverlap\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                maxTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                separator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        chunkOverlap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '每段之间重叠的 token 数量，默认为 50，用于确保上下文的连续性', example: 50})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/segmentation-rule.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        maxTokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '每段最大 token 数量，默认为 500', example: 500})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/segmentation-rule.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        separator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '自定义分段标识符，仅允许一个分隔符，默认为 \\n', example: '\n\n'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/segmentation-rule.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { IsString, IsOptional } from 'class-validator';\n\nexport class SegmentationRuleDto {\n  @ApiPropertyOptional({\n    description: '自定义分段标识符，仅允许一个分隔符，默认为 \\\\n',\n    example: '\\n\\n',\n  })\n  @IsOptional()\n  @IsString()\n  separator?: string;\n\n  @ApiPropertyOptional({\n    description: '每段最大 token 数量，默认为 500',\n    example: 500,\n  })\n  @IsOptional()\n  maxTokens?: number;\n\n  @ApiPropertyOptional({\n    description: '每段之间重叠的 token 数量，默认为 50，用于确保上下文的连续性',\n    example: 50,\n  })\n  @IsOptional()\n  chunkOverlap?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimilaritySearchDto.html":{"url":"classes/SimilaritySearchDto.html","title":"class - SimilaritySearchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimilaritySearchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/similarity-search.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                query\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                retrievalModel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '搜索查询字符串，用户输入的关键字或文本内容。', example: '如何提高代码质量？'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/similarity-search.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        retrievalModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RetrievalModelDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '检索模型的参数配置。', type: RetrievalModelDto})@IsOptional()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/similarity-search.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { Type } from 'class-transformer';\nimport { IsString, IsObject, ValidateNested, IsOptional } from 'class-validator';\n\nimport { RetrievalModelDto } from './retrieval-model.dto';\n\nexport class SimilaritySearchDto {\n  @ApiProperty({\n    description: '搜索查询字符串，用户输入的关键字或文本内容。',\n    example: '如何提高代码质量？',\n  })\n  @IsString()\n  query: string;\n\n  @ApiProperty({\n    description: '检索模型的参数配置。',\n    type: RetrievalModelDto,\n  })\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RetrievalModelDto)\n  retrievalModel?: RetrievalModelDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/timeout.interceptors.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/timeout.interceptors.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\n\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(timeout(5000));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionManager.html":{"url":"injectables/TransactionManager.html","title":"injectable - TransactionManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/transaction.manager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                runInTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, cls: ClsService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/transaction.manager.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cls\n                                                  \n                                                        \n                                                                    ClsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        runInTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    runInTransaction(callback: () => void, options?: TransactionOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/transaction.manager.ts:18\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            TransactionOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { ClsService } from 'nestjs-cls';\n\nimport { TransactionOptions } from '@leek/common';\n\nimport { PrismaService } from './prisma.service';\n\nconst TRANSACTIONAL_TIMEOUT = 1000 * 10;\n\n@Injectable()\nexport class TransactionManager {\n  constructor(\n    private readonly prismaService: PrismaService,\n    private readonly cls: ClsService,\n  ) {}\n\n  async runInTransaction(callback: () => Promise, options?: TransactionOptions): Promise {\n    const transactionOptions: TransactionOptions = {\n      timeout: TRANSACTIONAL_TIMEOUT,\n      ...options,\n    };\n    return this.prismaService.$transaction(async (prisma) => {\n      this.cls.set('prisma', prisma);\n      try {\n        return await callback();\n      } finally {\n        this.cls.set('prisma', null);\n      }\n    }, transactionOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionOptions.html":{"url":"interfaces/TransactionOptions.html","title":"interface - TransactionOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/decorators/transactional.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isolationLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxWait\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolationLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolationLevel:         Prisma.TransactionIsolationLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Prisma.TransactionIsolationLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxWait\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxWait:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Prisma } from '@prisma/client';\n\nimport { TransactionManager } from '@leek/prisma';\n\nexport interface TransactionOptions {\n  maxWait?: number;\n  timeout?: number;\n  isolationLevel?: Prisma.TransactionIsolationLevel;\n}\n\nexport function Transactional(options?: TransactionOptions) {\n  return function (target: any, propertyName: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    descriptor.value = async function (...args: any[]) {\n      const transactionManager: TransactionManager = this.transactionManager;\n\n      if (!transactionManager) {\n        throw new Error('TransactionManager not found in the current context.');\n      }\n\n      return transactionManager.runInTransaction(async () => {\n        return originalMethod.apply(this, args);\n      }, options);\n    };\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAssistantDto.html":{"url":"classes/UpdateAssistantDto.html","title":"class - UpdateAssistantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAssistantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assistants/dto/update-assistant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAssistantDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\n\nimport { CreateAssistantDto } from './create-assistant.dto';\n\nexport class UpdateAssistantDto extends PartialType(CreateAssistantDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatasetDto.html":{"url":"classes/UpdateDatasetDto.html","title":"class - UpdateDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-dataset.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  PickType(CreateDatasetDto, ['name', 'description', 'retrievalModel']),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, PickType } from '@nestjs/swagger';\n\nimport { CreateDatasetDto } from './create-dataset.dto';\n\n// UpdateDatasetDto uses PartialType to inherit CreateDatasetDto with all properties as optional\nexport class UpdateDatasetDto extends PartialType(\n  PickType(CreateDatasetDto, ['name', 'description', 'retrievalModel']),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatasetProcessRuleDto.html":{"url":"classes/UpdateDatasetProcessRuleDto.html","title":"class - UpdateDatasetProcessRuleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatasetProcessRuleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-dataset-process-rule.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDatasetProcessRuleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\n\nimport { CreateDatasetProcessRuleDto } from './create-dataset-process-rule.dto';\n\nexport class UpdateDatasetProcessRuleDto extends PartialType(CreateDatasetProcessRuleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDocumentByFileDto.html":{"url":"classes/UpdateDocumentByFileDto.html","title":"class - UpdateDocumentByFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDocumentByFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-document-by-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDocumentByFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\n\nimport { CreateDocumentByFileDto } from './create-document-by-file.dto';\n\nexport class UpdateDocumentByFileDto extends PartialType(CreateDocumentByFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDocumentByTextDto.html":{"url":"classes/UpdateDocumentByTextDto.html","title":"class - UpdateDocumentByTextDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDocumentByTextDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-document-by-text.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDocumentByTextDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\n\nimport { CreateDocumentByTextDto } from './create-document-by-text.dto';\n\nexport class UpdateDocumentByTextDto extends PartialType(CreateDocumentByTextDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDocumentDto.html":{"url":"classes/UpdateDocumentDto.html","title":"class - UpdateDocumentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDocumentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-document.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDocumentDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\n\nimport { CreateDocumentDto } from './create-document.dto';\n\nexport class UpdateDocumentDto extends PartialType(CreateDocumentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDocumentNameDto.html":{"url":"classes/UpdateDocumentNameDto.html","title":"class - UpdateDocumentNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDocumentNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-document-name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档名称', example: '600415_分析报告.pdf'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/update-document-name.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { IsString } from 'class-validator';\n\nexport class UpdateDocumentNameDto {\n  @ApiProperty({\n    description: '文档名称',\n    example: '600415_分析报告.pdf',\n  })\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDocumentSegmentDto.html":{"url":"classes/UpdateDocumentSegmentDto.html","title":"class - UpdateDocumentSegmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDocumentSegmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-segment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDocumentSegmentDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\n\nimport { CreateDocumentSegmentDto } from './create-segment.dto';\n\nexport class UpdateDocumentSegmentDto extends PartialType(CreateDocumentSegmentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadFileDto.html":{"url":"classes/UploadFileDto.html","title":"class - UploadFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/upload-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文件描述', example: '这是一个文件描述。'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/dto/upload-file.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Express.Multer.File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', description: '上传的文件'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/dto/upload-file.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UploadFileDto {\n  @ApiProperty({ type: 'string', format: 'binary', description: '上传的文件' })\n  file: Express.Multer.File;\n\n  @ApiPropertyOptional({\n    description: '文件描述',\n    example: '这是一个文件描述。',\n  })\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadTextFileDto.html":{"url":"classes/UploadTextFileDto.html","title":"class - UploadTextFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadTextFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/upload-text-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: '文本描述', example: '这是一个文本描述。'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/dto/upload-text-file.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档名称', example: 'text'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/dto/upload-text-file.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '文档内容', example: 'This is the content of the document.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/dto/upload-text-file.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { IsString } from 'class-validator';\n\nexport class UploadTextFileDto {\n  @ApiProperty({\n    description: '文档名称',\n    example: 'text',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: '文档内容',\n    example: 'This is the content of the document.',\n  })\n  @IsString()\n  text: string;\n\n  @ApiPropertyOptional({\n    description: '文本描述',\n    example: '这是一个文本描述。',\n  })\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.689.0\n        \n            @langchain/baidu-qianfan : ^0.1.0\n        \n            @langchain/community : ^0.3.13\n        \n            @langchain/core : ^0.3.18\n        \n            @langchain/langgraph : ^0.2.20\n        \n            @langchain/openai : ^0.3.13\n        \n            @nestjs/axios : ^3.1.2\n        \n            @nestjs/common : ^10.4.7\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.7\n        \n            @nestjs/platform-express : ^10.4.7\n        \n            @nestjs/swagger : ^8.0.5\n        \n            @prisma/client : ^5.22.0\n        \n            axios : ^1.7.7\n        \n            chalk : ^4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.5\n        \n            cookie-parser : ^1.4.7\n        \n            cos-nodejs-sdk-v5 : ^2.14.6\n        \n            d3-dsv : 2\n        \n            dayjs : ^1.11.13\n        \n            epub2 : ^3.0.2\n        \n            gpt-tokenizer : ^2.6.2\n        \n            helmet : ^8.0.0\n        \n            html-to-text : ^9.0.5\n        \n            langchain : ^0.3.5\n        \n            lodash : ^4.17.21\n        \n            mammoth : ^1.8.0\n        \n            ms : ^2.1.3\n        \n            nestjs-cls : ^4.4.1\n        \n            nestjs-i18n : ^10.5.0\n        \n            nodejieba : ^3.4.3\n        \n            nodemailer : ^6.9.16\n        \n            officeparser : ^5.1.1\n        \n            p-limit : ^3\n        \n            pdf-parse : ^1.1.1\n        \n            pg : ^8.13.1\n        \n            playwright : ^1.48.2\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            srt-parser-2 : ^1.2.3\n        \n            uuid : ^11.0.3\n        \n            xlsx : ^0.18.5\n        \n            zod : ^3.23.8\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConversationActionEnum   (src/.../chat.ts)\n                        \n                        \n                            ConversationContentEnum   (src/.../chat.ts)\n                        \n                        \n                            CreatedFromEnum   (src/.../datasets.ts)\n                        \n                        \n                            DataSourceEnum   (src/.../datasets.ts)\n                        \n                        \n                            EmbeddingProvider   (src/.../init.embeddings.ts)\n                        \n                        \n                            IndexEnum   (src/.../datasets.ts)\n                        \n                        \n                            LanguageCode   (src/.../language.ts)\n                        \n                        \n                            LanguageModel   (src/.../llm.ts)\n                        \n                        \n                            ModelProvider   (src/.../init.models.ts)\n                        \n                        \n                            Role   (src/.../llm.ts)\n                        \n                        \n                            SegmentationEnum   (src/.../datasets.ts)\n                        \n                        \n                            StorageKind   (src/.../storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/chat.ts\n    \n        \n            \n                \n                    \n                        \n                        ConversationActionEnum\n                    \n                \n                        \n                            \n                                 Next\n                            \n                        \n                        \n                            \n                                Value : next\n                            \n                        \n                        \n                            \n                                 Variant\n                            \n                        \n                        \n                            \n                                Value : variant\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ConversationContentEnum\n                    \n                \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 MultimodalText\n                            \n                        \n                        \n                            \n                                Value : multimodal_text\n                            \n                        \n            \n        \n\n    src/constants/datasets.ts\n    \n        \n            \n                \n                    \n                        \n                        CreatedFromEnum\n                    \n                \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : web\n                            \n                        \n                        \n                            \n                                 API\n                            \n                        \n                        \n                            \n                                Value : api\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DataSourceEnum\n                    \n                \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : upload_file\n                            \n                        \n                        \n                            \n                                 NOTION\n                            \n                        \n                        \n                            \n                                Value : notion_import\n                            \n                        \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : website_crawl\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        IndexEnum\n                    \n                \n                        \n                            \n                                 PARAGRAPH_INDEX\n                            \n                        \n                        \n                            \n                                Value : text_model\n                            \n                        \n                        \n                            \n                                 QA_INDEX\n                            \n                        \n                        \n                            \n                                Value : qa_model\n                            \n                        \n                        \n                            \n                                 SUMMARY_INDEX\n                            \n                        \n                        \n                            \n                                Value : summary_index\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SegmentationEnum\n                    \n                \n                        \n                            \n                                 Automatic\n                            \n                        \n                        \n                            \n                                Value : automatic\n                            \n                        \n                        \n                            \n                                 Custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    src/langchain/embeddings/init.embeddings.ts\n    \n        \n            \n                \n                    \n                        \n                        EmbeddingProvider\n                    \n                \n                    \n                        \n                            Enum to specify the available embedding service providers.\n\n                        \n                    \n                        \n                            \n                                 OpenAI\n                            \n                        \n                        \n                            \n                                Value : OpenAI\n                            \n                        \n            \n        \n\n    src/constants/language.ts\n    \n        \n            \n                \n                    \n                        \n                        LanguageCode\n                    \n                \n                        \n                            \n                                 en_US\n                            \n                        \n                        \n                            \n                                Value : en_US\n                            \n                        \n                        \n                            \n                                 ru_RU\n                            \n                        \n                        \n                            \n                                Value : ru_RU\n                            \n                        \n                        \n                            \n                                 zh_CN\n                            \n                        \n                        \n                            \n                                Value : zh_CN\n                            \n                        \n                        \n                            \n                                 zh_TW\n                            \n                        \n                        \n                            \n                                Value : zh_TW\n                            \n                        \n            \n        \n\n    src/constants/llm.ts\n    \n        \n            \n                \n                    \n                        \n                        LanguageModel\n                    \n                \n                    \n                        \n                            LLM 模型\n\n                        \n                    \n                        \n                            \n                                 GPT4_O\n                            \n                        \n                        \n                            \n                                Value : gpt-4o\n                            \n                        \n                        \n                            \n                                 GPT4_O_MINI\n                            \n                        \n                        \n                            \n                                Value : gpt-4o-mini\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 ASSISTANT\n                            \n                        \n                        \n                            \n                                Value : ai\n                            \n                        \n            \n        \n\n    src/langchain/model/init.models.ts\n    \n        \n            \n                \n                    \n                        \n                        ModelProvider\n                    \n                \n                    \n                        \n                            Enum to specify the available model service providers.\n\n                        \n                    \n                        \n                            \n                                 OpenAI\n                            \n                        \n                        \n                            \n                                Value : OpenAI\n                            \n                        \n                        \n                            \n                                 Qianfan\n                            \n                        \n                        \n                            \n                                Value : Qianfan\n                            \n                        \n            \n        \n\n    src/constants/storage.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageKind\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 S3\n                            \n                        \n                        \n                            \n                                Value : s3\n                            \n                        \n                        \n                            \n                                 TENCENT_COS\n                            \n                        \n                        \n                            \n                                Value : tencent-cos\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n_distance 越小，相似度越高。\n_distance 越大，相似度越低。\n\n\n\n\n_distance 值范围\n余弦相似度范围\n相似性描述\n\n\n\n\n0\n1\n完全相似\n\n\n0.5\n0.5\n部分相似\n\n\n1\n0\n完全不相似\n\n\n>1\n不适用\n向量无效或异常数据\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AssistantsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigureModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatasetsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalAssistantPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalDatasetsPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationaLeekFilesPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AssistantsModule\n\n\n\ncluster_AssistantsModule_imports\n\n\n\ncluster_AssistantsModule_providers\n\n\n\ncluster_ConfigureModule\n\n\n\ncluster_ConfigureModule_exports\n\n\n\ncluster_DatasetsModule\n\n\n\ncluster_DatasetsModule_imports\n\n\n\ncluster_DatasetsModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_RelationalAssistantPersistenceModule\n\n\n\ncluster_RelationalAssistantPersistenceModule_exports\n\n\n\ncluster_RelationalDatasetsPersistenceModule\n\n\n\ncluster_RelationalDatasetsPersistenceModule_exports\n\n\n\ncluster_RelationaLeekFilesPersistenceModule\n\n\n\ncluster_RelationaLeekFilesPersistenceModule_exports\n\n\n\n\nAssistantsModule\n\nAssistantsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAssistantsModule->AppModule\n\n\n\n\n\nConfigureModule\n\nConfigureModule\n\nAssistantsModule -->\n\nConfigureModule->AssistantsModule\n\n\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nDatasetsModule -->\n\nConfigureModule->DatasetsModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nConfigureModule->FilesModule\n\n\n\nAppModule -->\n\nConfigureModule->AppModule\n\n\n\n\n\nRelationalAssistantPersistenceModule\n\nRelationalAssistantPersistenceModule\n\nRelationalAssistantPersistenceModule -->\n\nConfigureModule->RelationalAssistantPersistenceModule\n\n\n\n\n\nRelationalDatasetsPersistenceModule\n\nRelationalDatasetsPersistenceModule\n\nRelationalDatasetsPersistenceModule -->\n\nConfigureModule->RelationalDatasetsPersistenceModule\n\n\n\n\n\nConfigureAdapter \n\nConfigureAdapter \n\nConfigureAdapter  -->\n\nConfigureModule->ConfigureAdapter \n\n\n\nAppModule -->\n\nDatasetsModule->AppModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAssistantsModule -->\n\nRelationalAssistantPersistenceModule->AssistantsModule\n\n\n\n\n\nAssistantRepository \n\nAssistantRepository \n\nAssistantRepository  -->\n\nRelationalAssistantPersistenceModule->AssistantRepository \n\n\n\nAssistantsModule -->\n\nRelationalDatasetsPersistenceModule->AssistantsModule\n\n\n\nDatasetsModule -->\n\nRelationalDatasetsPersistenceModule->DatasetsModule\n\n\n\n\n\nDatasetProcessRuleRepository \n\nDatasetProcessRuleRepository \n\nDatasetProcessRuleRepository  -->\n\nRelationalDatasetsPersistenceModule->DatasetProcessRuleRepository \n\n\n\n\n\nDatasetRepository \n\nDatasetRepository \n\nDatasetRepository  -->\n\nRelationalDatasetsPersistenceModule->DatasetRepository \n\n\n\n\n\nDocumentRepository \n\nDocumentRepository \n\nDocumentRepository  -->\n\nRelationalDatasetsPersistenceModule->DocumentRepository \n\n\n\n\n\nDocumentSegmentRepository \n\nDocumentSegmentRepository \n\nDocumentSegmentRepository  -->\n\nRelationalDatasetsPersistenceModule->DocumentSegmentRepository \n\n\n\n\n\nEmbeddingRepository \n\nEmbeddingRepository \n\nEmbeddingRepository  -->\n\nRelationalDatasetsPersistenceModule->EmbeddingRepository \n\n\n\n\n\nAssistantService\n\nAssistantService\n\nAssistantsModule -->\n\nAssistantService->AssistantsModule\n\n\n\n\n\nRetrievalService\n\nRetrievalService\n\nAssistantsModule -->\n\nRetrievalService->AssistantsModule\n\n\n\nDatasetsModule -->\n\nRetrievalService->DatasetsModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nDatasetsModule -->\n\nPrismaModule->DatasetsModule\n\n\n\nRelationalAssistantPersistenceModule -->\n\nPrismaModule->RelationalAssistantPersistenceModule\n\n\n\nRelationalDatasetsPersistenceModule -->\n\nPrismaModule->RelationalDatasetsPersistenceModule\n\n\n\n\n\nRelationaLeekFilesPersistenceModule\n\nRelationaLeekFilesPersistenceModule\n\nRelationaLeekFilesPersistenceModule -->\n\nPrismaModule->RelationaLeekFilesPersistenceModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nDatasetsModule -->\n\nRelationaLeekFilesPersistenceModule->DatasetsModule\n\n\n\nFilesModule -->\n\nRelationaLeekFilesPersistenceModule->FilesModule\n\n\n\n\n\nFilesRepository \n\nFilesRepository \n\nFilesRepository  -->\n\nRelationaLeekFilesPersistenceModule->FilesRepository \n\n\n\n\n\nDatasetService\n\nDatasetService\n\nDatasetsModule -->\n\nDatasetService->DatasetsModule\n\n\n\n\n\nDocumentSegmentService\n\nDocumentSegmentService\n\nDatasetsModule -->\n\nDocumentSegmentService->DatasetsModule\n\n\n\n\n\nDocumentService\n\nDocumentService\n\nDatasetsModule -->\n\nDocumentService->DatasetsModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nDatasetsModule -->\n\nFilesService->DatasetsModule\n\n\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nIndexingService\n\nIndexingService\n\nDatasetsModule -->\n\nIndexingService->DatasetsModule\n\n\n\n\n\nJiebaKeywordService\n\nJiebaKeywordService\n\nDatasetsModule -->\n\nJiebaKeywordService->DatasetsModule\n\n\n\n\n\nLLMGeneratorService\n\nLLMGeneratorService\n\nDatasetsModule -->\n\nLLMGeneratorService->DatasetsModule\n\n\n\n\n\nProcessDocumentService\n\nProcessDocumentService\n\nDatasetsModule -->\n\nProcessDocumentService->DatasetsModule\n\n\n\n\n\nTransactionManager\n\nTransactionManager\n\nDatasetsModule -->\n\nTransactionManager->DatasetsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    24 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    74 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : Zane\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CSVLoaderOptions   (src/.../csv.loader.ts)\n                        \n                        \n                            EmbeddingsParams   (src/.../init.embeddings.ts)\n                        \n                        \n                            EPubLoaderOptions   (src/.../epub.loader.ts)\n                        \n                        \n                            JSONLinesLoaderOptions   (src/.../json.loader.ts)\n                        \n                        \n                            JSONLoaderOptions   (src/.../json.loader.ts)\n                        \n                        \n                            LLMRoleType   (src/.../llm.ts)\n                        \n                        \n                            LoaderOptions   (src/.../document.loader.ts)\n                        \n                        \n                            ModelInstancesMap   (src/.../init.models.ts)\n                        \n                        \n                            ModelReturnType   (src/.../init.models.ts)\n                        \n                        \n                            ModelsParams   (src/.../init.models.ts)\n                        \n                        \n                            PaginatedResult   (src/.../paginated-result.ts)\n                        \n                        \n                            PDFLoaderOptions   (src/.../pdf.loader.ts)\n                        \n                        \n                            ProviderConfigMap   (src/.../init.embeddings.ts)\n                        \n                        \n                            ProviderConfigMap   (src/.../init.models.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/langchain/loaders/csv.loader.ts\n    \n    \n        \n            \n                \n                    \n                    CSVLoaderOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/langchain/embeddings/init.embeddings.ts\n    \n    \n        \n            \n                \n                    \n                    EmbeddingsParams\n                \n            \n            \n                \n                    Generic type to represent any provider configuration.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProviderConfigMap\n                \n            \n            \n                \n                    Type definitions for configuration fields based on the embedding provider.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/langchain/loaders/epub.loader.ts\n    \n    \n        \n            \n                \n                    \n                    EPubLoaderOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/langchain/loaders/json.loader.ts\n    \n    \n        \n            \n                \n                    \n                    JSONLinesLoaderOptions\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JSONLoaderOptions\n                \n            \n            \n                \n                        string | string[]\n\n                \n            \n        \n    \n    src/constants/llm.ts\n    \n    \n        \n            \n                \n                    \n                    LLMRoleType\n                \n            \n            \n                \n                        \"user\" | \"system\" | \"assistant\" | \"function\"\n\n                \n            \n        \n    \n    src/langchain/loaders/document.loader.ts\n    \n    \n        \n            \n                \n                    \n                    LoaderOptions\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    src/langchain/model/init.models.ts\n    \n    \n        \n            \n                \n                    \n                    ModelInstancesMap\n                \n            \n            \n                \n                    Type to define the return types for the initModels function.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelReturnType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelsParams\n                \n            \n            \n                \n                    Generic type to represent any provider configuration.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProviderConfigMap\n                \n            \n            \n                \n                    Type definitions for configuration fields based on the model provider.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/interfaces/paginated-result.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedResult\n                \n            \n            \n                \n                            [T[], number]\n\n                \n            \n        \n    \n    src/langchain/loaders/pdf.loader.ts\n    \n    \n        \n            \n                \n                    \n                    PDFLoaderOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/interfaces/wrapper-type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                    Wrapper type used to circumvent ESM modules circular dependency issue\ncaused by reflection metadata saving the type of the property.\n\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
