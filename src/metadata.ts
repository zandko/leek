/* eslint-disable */
export default async () => {
    const t = {
        ["./datasets/dto/pre-processing-rule.dto"]: await import("./datasets/dto/pre.processing.rule.dto"),
        ["./datasets/dto/segmentation-rule.dto"]: await import("./datasets/dto/segmentation.rule.dto"),
        ["./constants/chat"]: await import("./constants/chat"),
        ["./assistants/dto/conversation-author.dto"]: await import("./assistants/dto/conversation.author.dto"),
        ["./assistants/dto/conversation-content.dto"]: await import("./assistants/dto/conversation.content.dto"),
        ["./assistants/dto/conversation-message.dto"]: await import("./assistants/dto/conversation.message.dto"),
        ["./datasets/dto/retrieval-model.dto"]: await import("./datasets/dto/retrieval.model.dto"),
        ["./datasets/dto/process-rule.dto"]: await import("./datasets/dto/process.rule.dto"),
        ["./datasets/dto/indexing-estimate-process-rule.dto"]: await import("./datasets/dto/indexing.estimate.process.rule.dto"),
        ["./assistants/domain/assistants"]: await import("./assistants/domain/assistants"),
        ["./datasets/domain/dataset"]: await import("./datasets/domain/dataset"),
        ["./datasets/domain/segment"]: await import("./datasets/domain/segment"),
        ["./datasets/domain/document"]: await import("./datasets/domain/document"),
        ["./datasets/dto/response-indexing-estimate.dto"]: await import("./datasets/dto/response.indexing.estimate.dto"),
        ["./files/domain/files"]: await import("./files/domain/files")
    };
    return { "@nestjs/swagger": { "models": [[import("./common/dto/pagination.dto"), { "PaginationDto": { currentPage: { required: false, type: () => Number, minimum: 1 }, pageSize: { required: false, type: () => Number, minimum: 1 } } }], [import("./datasets/dto/pre.processing.rule.dto"), { "PreProcessingRuleDto": { id: { required: true, type: () => String }, enabled: { required: true, type: () => Boolean } } }], [import("./datasets/dto/segmentation.rule.dto"), { "SegmentationRuleDto": { separator: { required: false, type: () => String }, maxTokens: { required: false, type: () => Number }, chunkOverlap: { required: false, type: () => Number } } }], [import("./datasets/dto/process.rule.dto"), { "ProcessRuleDto": { mode: { required: true, type: () => String }, preProcessingRules: { required: false, type: () => [t["./datasets/dto/pre-processing-rule.dto"].PreProcessingRuleDto] }, segmentation: { required: false, type: () => t["./datasets/dto/segmentation-rule.dto"].SegmentationRuleDto } } }], [import("./datasets/dto/dataset.process.rule.dto"), { "DatasetProcessRuleDto": {} }], [import("./datasets/dto/retrieval.model.dto"), { "RetrievalModelDto": { topK: { required: false, type: () => Number }, scoreThreshold: { required: true, type: () => Number }, scoreThresholdEnabled: { required: true, type: () => Boolean } } }], [import("./assistants/dto/conversation.author.dto"), { "ConversationAuthorDto": { role: { required: true, type: () => String } } }], [import("./assistants/dto/conversation.content.dto"), { "ConversationContentDto": { content_type: { required: true, enum: t["./constants/chat"].ConversationContentType }, parts: { required: true, type: () => [Object] } } }], [import("./assistants/dto/conversation.message.dto"), { "ConversationMessageDto": { author: { required: true, type: () => t["./assistants/dto/conversation-author.dto"].ConversationAuthorDto }, content: { required: true, type: () => t["./assistants/dto/conversation-content.dto"].ConversationContentDto } } }], [import("./assistants/dto/conversation.dto"), { "ConversationDto": { action: { required: true, enum: t["./constants/chat"].ConversationActionType }, messages: { required: true, type: () => [t["./assistants/dto/conversation-message.dto"].ConversationMessageDto] } } }], [import("./datasets/dto/document.dto"), { "DocumentDto": { pageContent: { required: true, type: () => String }, metadata: { required: true, type: () => Object } } }], [import("./datasets/dto/similarity.search.dto"), { "SimilaritySearchDto": { query: { required: true, type: () => String }, retrievalModel: { required: false, type: () => t["./datasets/dto/retrieval-model.dto"].RetrievalModelDto } } }], [import("./assistants/dto/create.assistant.dto"), { "CreateAssistantDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, datasetId: { required: false, type: () => String }, systemPrompt: { required: false, type: () => String } } }], [import("./assistants/dto/update.assistant.dto"), { "UpdateAssistantDto": {} }], [import("./datasets/dto/create.dataset.dto"), { "CreateDatasetDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, dataSourceType: { required: false, type: () => String }, retrievalModel: { required: false, type: () => Object } } }], [import("./datasets/dto/update.dataset.dto"), { "UpdateDatasetDto": {} }], [import("./datasets/dto/create.segment.dto"), { "CreateDocumentSegmentDto": { content: { required: true, type: () => String }, keywords: { required: false, type: () => Object }, enabled: { required: false, type: () => Boolean }, answer: { required: false, type: () => String } } }], [import("./datasets/dto/query.segment.dto"), { "QuerySegmentDto": { q: { required: false, type: () => String }, enabled: { required: false, type: () => Boolean, default: true } } }], [import("./datasets/dto/update.segment.dto"), { "UpdateDocumentSegmentDto": {} }], [import("./datasets/dto/create.document.by.file.dto"), { "CreateDocumentByFileDto": { originalDocumentId: { required: false, type: () => String }, processRule: { required: false, type: () => t["./datasets/dto/process-rule.dto"].ProcessRuleDto }, docForm: { required: false, type: () => String }, docLanguage: { required: false, type: () => String } } }], [import("./datasets/dto/create.document.by.text.dto"), { "CreateDocumentByTextDto": { name: { required: true, type: () => String }, text: { required: true, type: () => String }, processRule: { required: false, type: () => t["./datasets/dto/process-rule.dto"].ProcessRuleDto } } }], [import("./datasets/dto/query.document.dto"), { "QueryDocumentDto": { q: { required: false, type: () => String }, createdFrom: { required: false, type: () => String }, enabled: { required: false, type: () => Boolean, default: true }, archived: { required: false, type: () => Boolean, default: false }, docForm: { required: false, type: () => String } } }], [import("./datasets/dto/update.document.name.dto"), { "UpdateDocumentNameDto": { name: { required: true, type: () => String } } }], [import("./datasets/dto/create.dataset.process.rule.dto"), { "CreateDatasetProcessRuleDto": { datasetId: { required: true, type: () => String }, mode: { required: true, type: () => String }, rules: { required: false, type: () => Object, format: "json" } } }], [import("./datasets/dto/indexing.estimate.process.rule.dto"), { "IndexingEstimateProcessRuleDto": {} }], [import("./datasets/dto/indexing.estimate.dto"), { "IndexingEstimateDto": { processRule: { required: true, type: () => t["./datasets/dto/indexing-estimate-process-rule.dto"].IndexingEstimateProcessRuleDto }, datasetId: { required: true, type: () => String } } }], [import("./datasets/dto/response.indexing.estimate.dto"), { "ResponseIndexingEstimateDto": { chunkCount: { required: true, type: () => Number }, chunkPreview: { required: true, type: () => [String] } } }], [import("./files/dto/upload.file.dto"), { "UploadFileDto": { file: { required: true, type: () => Object, description: "The uploaded file.\n\nAccepts binary data for file uploads through an API endpoint.\n\n@type {Express.Multer.File}", example: "A file uploaded via a form-data request." }, description: { required: false, type: () => String, description: "An optional description for the file.\n\nThis metadata provides additional context or information about the uploaded file.\n\n@type {string}", example: "This is a sample file description." } } }], [import("./files/dto/upload.text.file.dto"), { "UploadTextFileDto": { name: { required: true, type: () => String, description: "The name of the document.\n\nRepresents the title or identifier for the uploaded document.\n\n@type {string}", example: "text" }, text: { required: true, type: () => String, description: "The content of the document.\n\nHolds the main text body of the document being uploaded.\n\n@type {string}", example: "This is the content of the document." }, description: { required: false, type: () => String, description: "An optional description for the document.\n\nProvides additional details or metadata about the text document.\n\n@type {string}", example: "This is a sample description for the text file." } } }], [import("./datasets/dto/create.document.dto"), { "CreateDocumentDto": { datasetId: { required: true, type: () => String }, position: { required: true, type: () => Number }, dataSourceType: { required: true, type: () => String }, name: { required: true, type: () => String }, createdFrom: { required: true, type: () => String }, dataSourceInfo: { required: false, type: () => Object, format: "json" }, datasetProcessRuleId: { required: false, type: () => String }, createdApiRequestId: { required: false, type: () => String }, fileId: { required: false, type: () => String }, wordCount: { required: false, type: () => Number }, tokens: { required: false, type: () => Number }, indexingLatency: { required: false, type: () => Number }, enabled: { required: true, type: () => Boolean, default: true }, disabledAt: { required: false, type: () => Date }, archived: { required: true, type: () => Boolean, default: false }, archivedReason: { required: false, type: () => String }, archivedAt: { required: false, type: () => Date }, docType: { required: false, type: () => String }, docMetadata: { required: false, type: () => Object, format: "json" }, docForm: { required: false, type: () => String }, docLanguage: { required: false, type: () => String } } }], [import("./datasets/dto/update.document.dto"), { "UpdateDocumentDto": {} }], [import("./common/dto/error.response.dto"), { "ErrorResponseDto": { statusCode: { required: true, type: () => Number }, message: { required: true, type: () => String }, error: { required: true, type: () => String } } }], [import("./datasets/dto/create.embedding.dto"), { "CreateEmbeddingDto": { hash: { required: true, type: () => String }, content: { required: true, type: () => String }, modelName: { required: true, type: () => String }, providerName: { required: true, type: () => String }, classPrefix: { required: true, type: () => String } } }], [import("./datasets/dto/update.dataset.process.rule.dto"), { "UpdateDatasetProcessRuleDto": {} }], [import("./datasets/dto/update.document.by.file.dto"), { "UpdateDocumentByFileDto": {} }], [import("./datasets/dto/update.document.by.text.dto"), { "UpdateDocumentByTextDto": {} }]], "controllers": [[import("./assistants/assistants.controller"), { "AssistantController": { "createAssistant": { type: t["./assistants/domain/assistants"].LeekAssistant }, "findAssistantById": { type: t["./assistants/domain/assistants"].LeekAssistant }, "updateAssistantById": {}, "deleteAssistantById": {} } }], [import("./datasets/controllers/dataset.controller"), { "DatasetController": { "createDataset": { type: t["./datasets/domain/dataset"].LeekDataset }, "findManyDatasets": { type: [t["./datasets/domain/dataset"].LeekDataset] }, "findDatasetById": { type: t["./datasets/domain/dataset"].LeekDataset }, "updateDatasetById": {}, "deleteDatasetById": {} } }], [import("./datasets/controllers/document.segment.controller"), { "DocumentSegmentController": { "createSegment": { type: t["./datasets/domain/segment"].LeekSegment }, "findSegmentById": { type: t["./datasets/domain/segment"].LeekSegment }, "findManySegmentsPaginatedByDocumentId": {}, "deleteSegmentById": {}, "updateSegmentById": {}, "disableSegmentById": {}, "enableSegmentById": {} } }], [import("./datasets/controllers/document.controller"), { "DocumentController": { "findManyDocumentsPaginatedByDatasetId": {}, "findDocumentById": { type: t["./datasets/domain/document"].LeekDocument }, "createDocumentByText": { type: t["./datasets/domain/document"].LeekDocument }, "createDocumentByFile": { type: t["./datasets/domain/document"].LeekDocument }, "renameDocumentById": {}, "deleteDocumentById": {}, "disableDocumentById": {}, "enableDocumentById": {}, "archiveDocumentById": {}, "unArchiveDocumentById": {} } }], [import("./datasets/controllers/example.controller"), { "ExampleController": { "generateQaDocumentFromTextAndLanguage": { type: [Object] }, "excel": {} } }], [import("./datasets/controllers/indexing.controller"), { "IndexingController": { "indexingEstimate": { type: t["./datasets/dto/response-indexing-estimate.dto"].ResponseIndexingEstimateDto } } }], [import("./datasets/controllers/retrieval.controller"), { "RetrievalController": { "similaritySearchVectorWithScore": { type: Object }, "rag": { type: Object } } }], [import("./files/files.controller"), { "FilesController": { "uploadFile": { type: t["./files/domain/files"].LeekFile }, "uploadTextFile": { type: t["./files/domain/files"].LeekFile }, "findFileById": { type: t["./files/domain/files"].LeekFile } } }]] } };
};
